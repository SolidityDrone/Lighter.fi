{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EmptyArgs",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EmptySource",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "automationRegistry",
          "type": "address"
        }
      ],
      "name": "NotAllowedCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyRouterCanFulfill",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeInterval",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextExecution",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "lastResponse",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct ILighterFi.UserStrategy",
          "name": "userStrategy",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyIndex",
          "type": "uint256"
        }
      ],
      "name": "NewUserStrategy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyIndex",
          "type": "uint256"
        }
      ],
      "name": "RemovedUserStrategy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "RequestFulfilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyIndex",
          "type": "uint256"
        }
      ],
      "name": "RequestReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "RequestSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "response",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "err",
          "type": "bytes"
        }
      ],
      "name": "Response",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        }
      ],
      "name": "SwapExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeInterval",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextExecution",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "lastResponse",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct ILighterFi.UserStrategy",
          "name": "userStrategy",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strategyIndex",
          "type": "uint256"
        }
      ],
      "name": "UpdatedUserStrategy",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "bytes16",
          "name": "minAmount",
          "type": "bytes16"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "bytes4",
          "name": "routerSelector",
          "type": "bytes4"
        }
      ],
      "name": "ConcatCalldata",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "fuzz",
          "type": "int256"
        }
      ],
      "name": "_batchQuery",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokenAddresses",
          "type": "address[]"
        }
      ],
      "name": "_mapAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addressMappinglength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addressToBytes32",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "b32",
          "type": "bytes32"
        }
      ],
      "name": "bytes32tobytes4",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "txHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "source",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "topics",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Log",
          "name": "log",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkLog",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "int256",
          "name": "fuzz",
          "type": "int256"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenFrom",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenTo",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timeInterval",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenInAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "createStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "response",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "err",
          "type": "bytes"
        }
      ],
      "name": "fulfillRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasLimit",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenFrom",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenTo",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "generateArgForRequest",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "genericSwapFacet",
      "outputs": [
        {
          "internalType": "contract IGenericSwapFacet",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feedAddress",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        }
      ],
      "name": "getChainlinkDataFeedLatestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "response",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "err",
          "type": "bytes"
        }
      ],
      "name": "handleOracleFulfillment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdcAddress",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_gasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_donID",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_subscriptionId",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_upkeepContract1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_upkeepContract2",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "integrator",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lifiDiamond",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokenAddresses",
          "type": "address[]"
        }
      ],
      "name": "mapAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenFrom",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenTo",
          "type": "address"
        }
      ],
      "name": "readResponseAndSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "referrer",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "removeStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "requestsIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        }
      ],
      "name": "reseizeDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_usersStrategies",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timeInterval",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextExecution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "lastResponse",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_usersStrategiesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "sendRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "pause",
          "type": "bool"
        }
      ],
      "name": "setPause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_upkeepContract1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_upkeepContract2",
          "type": "address"
        }
      ],
      "name": "setUpkeepForwarders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subscriptionId",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_transactionId",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_callTo",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_approveTo",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sendingAssetId",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receivingAssetId",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fromAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenIndexes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "u256",
          "type": "uint256"
        }
      ],
      "name": "uintToBytes32",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "uintToString",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "unpackBytes",
      "outputs": [
        {
          "internalType": "bytes32[2]",
          "name": "",
          "type": "bytes32[2]"
        },
        {
          "internalType": "bytes16[1]",
          "name": "",
          "type": "bytes16[1]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "bytes4[1]",
          "name": "",
          "type": "bytes4[1]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenFrom",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenTo",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timeInterval",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "upgradeStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upkeepContract1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upkeepContract2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdcAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x61012060405273d0d5e3db44de05e9f294bb0a3beeaf030de24ada60c0908152731c2252aeed50e0c9b64bdff2735ee3c932f5c40860e052730715a7794a1dc8e42615f059dd6e406a6594651a6101005262000060906002906003620002c6565b50731231deb6f5749ef6ce6943a275a1d3e7486f4eae60a0526040805180820190915260088152676c6966692d61706960c01b6020820152600790620000a79082620003ec565b506040518060600160405280602a8152602001620042ee602a9139600890620000d19082620003ec565b50604051806103e001604052806103a98152602001620043186103a99139601190620000fe9082620003ec565b503480156200010c57600080fd5b50604051620046c1380380620046c18339810160408190526200012f91620004b8565b6001600160a01b0381166080523380600081620001935760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615620001c657620001c6816200021b565b505060a051600680546001600160a01b039092166001600160a01b03199092169190911790555050600e8054600161ff0160a01b031916732791bca1f2de4661ed88a30c99a7a9449aa84174179055620004ea565b336001600160a01b03821603620002755760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016200018a565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b8280548282559060005260206000209081019282156200031e579160200282015b828111156200031e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002e7565b506200032c92915062000330565b5090565b5b808211156200032c576000815560010162000331565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200037257607f821691505b6020821081036200039357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003e757600081815260208120601f850160051c81016020861015620003c25750805b601f850160051c820191505b81811015620003e357828155600101620003ce565b5050505b505050565b81516001600160401b0381111562000408576200040862000347565b62000420816200041984546200035d565b8462000399565b602080601f8311600181146200045857600084156200043f5750858301515b600019600386901b1c1916600185901b178555620003e3565b600085815260208120601f198616915b82811015620004895788860151825594840194600190910190840162000468565b5085821015620004a85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620004cb57600080fd5b81516001600160a01b0381168114620004e357600080fd5b9392505050565b60805160a051613dd762000517600039600081816103b60152612088015260006107c20152613dd76000f3fe608060405234801561001057600080fd5b50600436106102a05760003560e01c806368447c9311610167578063bedb86fb116100ce578063de8ce1bd11610087578063de8ce1bd14610696578063e6446373146106b6578063e9395679146106bf578063f2fde38b146106d2578063f68016b7146106e5578063fc2f7cff1461070a57600080fd5b8063bedb86fb1461062e578063c0cbbca614610641578063cdbd375914610654578063ceff496d14610667578063d16360951461067a578063d201b2641461068357600080fd5b80638da5cb5b116101205780638da5cb5b146105945780638ee8306b146105a5578063a854af2c146105b8578063b187bd26146105d3578063b21ca099146105e7578063b39ef9c81461060757600080fd5b806368447c93146105305780636e74336b1461054557806371bdb5de1461054e57806379ba50971461056157806382c947b714610569578063886d3db91461058357600080fd5b806340691db41161020b578063549e2b7f116101c4578063549e2b7f146104a857806355219d5a146104bb5780635591ddc6146104de57806357fa4508146104f15780635e92e6921461050457806365170a471461052757600080fd5b806340691db4146104225780634506fd26146104355780634585e33b146104485780634ce3fa521461045b5780634f8391bc1461046e57806352f61f411461049557600080fd5b806321d1fdd01161025d57806321d1fdd01461037d578063289e5bb91461039e5780632bd16c8f146103b157806331e70508146103d8578063392e53cd146103eb57806339b051221461040f57600080fd5b806302d45457146102a557806304bc3b1c146102d557806309c1ba2e146103035780630b790986146103355780630ca76175146103555780630e372ff01461036a575b600080fd5b600e546102b8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102f56102e3366004612cd7565b60046020526000908152604090205481565b6040519081526020016102cc565b600b5461031d90600160c01b90046001600160401b031681565b6040516001600160401b0390911681526020016102cc565b610348610343366004612cfb565b610712565b6040516102cc9190612d14565b610368610363366004612e0d565b6107b7565b005b6102f5610378366004612cfb565b61083b565b61039061038b366004612ec1565b61084e565b6040516102cc929190612f5c565b6102f56103ac366004612f7f565b919050565b6102b87f000000000000000000000000000000000000000000000000000000000000000081565b6103686103e6366004612cfb565b610ace565b600e546103ff90600160a81b900460ff1681565b60405190151581526020016102cc565b61036861041d366004612e0d565b610d54565b610390610430366004612fab565b610dbf565b610368610443366004613017565b610e1c565b6103686104563660046130ce565b611047565b61036861046936600461310f565b6112a3565b61048161047c366004612cfb565b6112e9565b6040516102cc989796959493929190613148565b600c546102b8906001600160a01b031681565b6103686104b63660046131a3565b6113c6565b6103ff6104c9366004612cd7565b60056020526000908152604090205460ff1681565b6103686104ec3660046131f4565b61178f565b6103686104ff366004613268565b6117a5565b6105176105123660046132e8565b611920565b6040516102cc9493929190613393565b6102f560095481565b610538611af0565b6040516102cc919061341b565b6102f5600a5481565b61036861055c36600461342e565b611b7e565b610368611ec2565b6102f5610577366004612cd7565b6001600160a01b031690565b6102f5610591366004612cfb565b90565b6000546001600160a01b03166102b8565b6105386105b33660046134a2565b611f6c565b600b546102b89064010000000090046001600160a01b031681565b600e546103ff90600160a01b900460ff1681565b6102f56105f5366004612cfb565b60106020526000908152604090205481565b610615610591366004612cfb565b6040516001600160e01b031990911681526020016102cc565b6103ff61063c36600461358f565b612112565b61036861064f366004612cfb565b612144565b6103686106623660046131f4565b612375565b6006546102b8906001600160a01b031681565b6102f560035481565b6103686106913660046135b1565b61248b565b6106a96106a436600461363f565b61258b565b6040516102cc9190613690565b6102f5600d5481565b6105386106cd366004612cfb565b6126e5565b6103686106e0366004612cd7565b612777565b600b546106f59063ffffffff1681565b60405163ffffffff90911681526020016102cc565b61053861278b565b6002546060906000816001600160401b0381111561073257610732612d58565b60405190808252806020026020018201604052801561075b578160200160208202803683370190505b50905060005b828110156107af5761078a61037860028381548110610782576107826136f2565b506000528690565b82828151811061079c5761079c6136f2565b6020908102919091010152600101610761565b509392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108005760405163c6829f8360e01b815260040160405180910390fd5b61080b838383610d54565b60405183907f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e690600090a2505050565b600061084860648361371e565b92915050565b60006060600061085d84610712565b905060008060008060005b600954811015610abf576000818152600f6020908152604080832081516101008101835281546001600160a01b03908116825260018301548116948201949094526002820154909316918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c083015260078101805460e0840191906108f590613740565b80601f016020809104026020016040519081016040528092919081815260200182805461092190613740565b801561096e5780601f106109435761010080835404028352916020019161096e565b820191906000526020600020905b81548152906001019060200180831161095157829003601f168201915b5050509190925250508151919250506001600160a01b031615610aac576060810151156109a057806080015142101593505b60608101511580156109b5575060c081015115155b15610a5a57600e5460208201516001600160a01b03908116911614610a195760c08101516020808301516001600160a01b031660009081526004909152604090205488518991908110610a0a57610a0a6136f2565b60200260200101511015610a57565b60c08101516040808301516001600160a01b031660009081526004602052205488518991908110610a4c57610a4c6136f2565b602002602001015111155b92505b8280610a635750835b15610aac5760019850816000604051602001610a89929190918252602082015260400190565b60405160208183030381529060405297508815610aac5750505050505050610ac6565b5080610ab78161377a565b915050610868565b5050505050505b935093915050565b610b0f6040805160e0810190915280600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b610bac60118054610b1f90613740565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4b90613740565b8015610b985780601f10610b6d57610100808354040283529160200191610b98565b820191906000526020600020905b815481529060010190602001808311610b7b57829003601f168201915b50505050508261279890919063ffffffff16565b6000828152600f6020908152604080832081516101008101835281546001600160a01b03908116825260018301548116948201949094526002820154909316918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c083015260078101805460e084019190610c2f90613740565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5b90613740565b8015610ca85780601f10610c7d57610100808354040283529160200191610ca8565b820191906000526020600020905b815481529060010190602001808311610c8b57829003601f168201915b50505050508152505090506000610cd18260200151836040015184600001518560a0015161258b565b9050610cdd83826127a5565b681c995c5d595cdd125960ba1b6000819052601060209081527fbbdbb72e8f82049b214755d692907364a2285e3e4225b3dd9ae52821e20afb3c86905560405186815282917f7b0781c2059d56137f2d3814f1213c0bbbd546ff1f4e1a95a7b41f4234e9ee32910160405180910390a25050505050565b600083815260106020908152604080832054808452600f909252909120600701610d7e84826137e1565b50837f7873807bf6ddc50401cd3d29bbe0decee23fd4d68d273f4b5eb83cded4d2f1728484604051610db19291906138a0565b60405180910390a250505050565b60016060610dd060c08501856138c5565b6000818110610de157610de16136f2565b905060200201356001604051602001610e04929190918252602082015260400190565b60405160208183030381529060405290509250929050565b604080516001808252818301909252600091816020015b6040805160e0810182526000808252602080830182905292820181905260608083018290526080830182905260a083015260c08201528252600019909201910181610e335790505090508681600081518110610e9157610e916136f2565b6020026020010151600001906001600160a01b031690816001600160a01b0316815250508581600081518110610ec957610ec96136f2565b6020026020010151602001906001600160a01b031690816001600160a01b0316815250508481600081518110610f0157610f016136f2565b6020026020010151604001906001600160a01b031690816001600160a01b0316815250508381600081518110610f3957610f396136f2565b6020026020010151606001906001600160a01b031690816001600160a01b0316815250508281600081518110610f7157610f716136f2565b602002602001015160800181815250508181600081518110610f9557610f956136f2565b602002602001015160a00181905250600181600081518110610fb957610fb96136f2565b602090810291909101015190151560c0909101526006546040516308c6141b60e31b81526001600160a01b0390911690634630a0d890611009908d906007906008908f908f90899060040161398b565b600060405180830381600087803b15801561102357600080fd5b505af1158015611037573d6000803e3d6000fd5b5050505050505050505050505050565b6000546001600160a01b031633148015906110755750600b5464010000000090046001600160a01b03163314155b801561108c5750600c546001600160a01b03163314155b156110e957336110a46000546001600160a01b031690565b600b5460405163426fbc7160e01b81526001600160a01b0393841660048201529183166024830152640100000000900490911660448201526064015b60405180910390fd5b60006110f782840184613a96565b9150508060000361115e57600061111083850185613a96565b506000818152600f602052604090206003810154919250901561114657600381015461113c9042613ab8565b600482015561114e565b600060068201555b61115782610ace565b5050505050565b600061116c83850185613a96565b50600081815260106020908152604080832054808452600f909252909120600681015492935090911561122e576000828152600f6020526040812080546001600160a01b0319908116825560018201805482169055600282018054909116905560038101829055600481018290556005810182905560068101829055906111f66007830182612c33565b505060405182815233907fd4bcfe01803d6cc1b6cb87942924062b921ce853a0e0ad1a59cb92fa77f3a8cc9060200160405180910390a25b60058101548154600183015460028401546040805187815260208101959095526001600160a01b0393841690850152908216606084015216608082015283907f2cbc8e6970e7a6e926100654a692677c7960085229cf130f3afa93a8b89ed3879060a00160405180910390a25050505b505050565b6112ab6127cf565b600b8054640100000000600160c01b0319166401000000006001600160a01b0394851602179055600c80546001600160a01b03191691909216179055565b600f60205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007880180546001600160a01b0398891699978916989096169694959394929391929161134390613740565b80601f016020809104026020016040519081016040528092919081815260200182805461136f90613740565b80156113bc5780601f10611391576101008083540402835291602001916113bc565b820191906000526020600020905b81548152906001019060200180831161139f57829003601f168201915b5050505050905088565b600e54600160a01b900460ff16156114125760405162461bcd60e51b815260206004820152600f60248201526e18dbdb9d1c9858dd081c185d5cd959608a1b60448201526064016110e0565b816000036114625760405162461bcd60e51b815260206004820152601d60248201527f696e76616c696420737472617465677920706172616d20616d6f756e7400000060448201526064016110e0565b6001600160a01b03841660009081526005602052604090205460ff166114ca5760405162461bcd60e51b815260206004820152601e60248201527f696e76616c696420737472617465677920706172616d20746f6b656e546f000060448201526064016110e0565b6001600160a01b03851660009081526005602052604090205460ff166115325760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420737472617465677920706172616d20746f6b656e46726f6d60448201526064016110e0565b82158061153d575080155b6115595760405162461bcd60e51b81526004016110e090613acb565b82158015611565575080155b156115b25760405162461bcd60e51b815260206004820152601c60248201527f4c696d697420616e642054696d65496e74657276616c2061726520300000000060448201526064016110e0565b600083156115c7576115c48442613ab8565b90505b6000604051806101000160405280336001600160a01b03168152602001600087116115f257886115ff565b600e546001600160a01b03165b6001600160a01b03168152602001876001600160a01b031681526020018681526020018381526020018581526020018481526020016040518060400160405280600181526020016000815250815250905080604001516001600160a01b031681602001516001600160a01b0316036116895760405162461bcd60e51b81526004016110e090613b0d565b600d546000818152600f6020908152604091829020845181546001600160a01b03199081166001600160a01b03928316178355928601516001830180548516918316919091179055928501516002820180549093169316929092179055606083015160038201556080830151600482015560a0830151600582015560c0830151600682015560e0830151839190600782019061172590826137e1565b5050600d805460019081019091556009805490910190555081516040516001600160a01b03909116907f76077091b25b37316df3930ef4f2b6248911c2aead51908ad20525fc8e099ea59061177d9085908590613b54565b60405180910390a25050505050505050565b6117976127cf565b6117a18282612375565b5050565b6000806000806117b489611920565b93509350935093506000825160026117cc9190613ab8565b6001600160401b038111156117e3576117e3612d58565b60405190808252806020026020018201604052801561180c578160200160208202803683370190505b5090508681600081518110611823576118236136f2565b60200260200101906001600160a01b031690816001600160a01b03168152505060005b835181101561189e57838181518110611861576118616136f2565b602002602001015182826001018151811061187e5761187e6136f2565b6001600160a01b0390921660209283029190910190910152600101611846565b508581600183516118af9190613be9565b815181106118bf576118bf6136f2565b6001600160a01b039290921660209283029190910190910152835182516000916118ed918c91908590611f6c565b60208701518751875192935090918c91611911918d9060801c85808f8f888b610e1c565b50505050505050505050505050565b611928612c6d565b611930612c8b565b606061193a612c8b565b60488551101561198c5760405162461bcd60e51b815260206004820152601a60248201527f44617461206c656e677468206d757374206265203e3d2037322100000000000060448201526064016110e0565b611994612c6d565b61199c612c8b565b6119a4612c6d565b6119ac612c8b565b602089810151855260408a0151845260508a015160601c90850152606489015181528851605c036119df57605c89015182525b88516070036119fa57605c8901518252607089015160208301525b6000805b6002811015611a42576000848260028110611a1b57611a1b6136f2565b60200201516001600160a01b031614611a3a57611a378261377a565b91505b6001016119fe565b506000816001600160401b03811115611a5d57611a5d612d58565b604051908082528060200260200182016040528015611a86578160200160208202803683370190505b50905060005b82811015611add57848160028110611aa657611aa66136f2565b6020020151828281518110611abd57611abd6136f2565b6001600160a01b0390921660209283029190910190910152600101611a8c565b50949a9399509397509550909350505050565b60088054611afd90613740565b80601f0160208091040260200160405190810160405280929190818152602001828054611b2990613740565b8015611b765780601f10611b4b57610100808354040283529160200191611b76565b820191906000526020600020905b815481529060010190602001808311611b5957829003601f168201915b505050505081565b81600003611bce5760405162461bcd60e51b815260206004820152601d60248201527f696e76616c696420737472617465677920706172616d20616d6f756e7400000060448201526064016110e0565b6001600160a01b03841660009081526005602052604090205460ff16611c365760405162461bcd60e51b815260206004820152601e60248201527f696e76616c696420737472617465677920706172616d20746f6b656e546f000060448201526064016110e0565b6001600160a01b03851660009081526005602052604090205460ff16611c9e5760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420737472617465677920706172616d20746f6b656e46726f6d60448201526064016110e0565b821580611ca9575080155b611cc55760405162461bcd60e51b81526004016110e090613acb565b836001600160a01b0316856001600160a01b031603611cf65760405162461bcd60e51b81526004016110e090613b0d565b82158015611d02575080155b15611d4f5760405162461bcd60e51b815260206004820152601c60248201527f4c696d697420616e642054696d65496e74657276616c2061726520300000000060448201526064016110e0565b600954861115611d975760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b60448201526064016110e0565b6000868152600f6020526040902080546001600160a01b03163314611ded5760405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b60448201526064016110e0565b60008415611e0257611dff8542613ab8565b90505b60008511611e105786611e1d565b600e546001600160a01b03165b6001830180546001600160a01b039283166001600160a01b03199182168117909255600285018054938a16939091168317905503611e6d5760405162461bcd60e51b81526004016110e090613b0d565b60038201859055600582018490556006820183905581546040516001600160a01b03909116907f6737b9f3a5b839875fd01c830b2f52c3bed21caeb651e7f8ee987351c10db2fd9061177d9085908c90613bfc565b6001546001600160a01b03163314611f155760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064016110e0565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b60606338ed173960e01b60a0600083815b87518110156120225760006001600160a01b0316888281518110611fa357611fa36136f2565b60200260200101516001600160a01b0316146120125781611fe3898381518110611fcf57611fcf6136f2565b60200260200101516001600160a01b031690565b604051602001611ff4929190613ca9565b60405160208183030381529060405291508261200f9061377a565b92505b61201b8161377a565b9050611f7d565b50604051612037908290600090602001613ccb565b60408051808303601f19018152828252600060208401526001600160801b03198b166030840152925085918b910160405160208183030381529060405261207d90613cf7565b856001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660408051600060208201526001600160e01b03198d16603c820152016040516020818303038152906040526120dc90613cf7565b6040516120f59695949392919089908990602001613d1b565b604051602081830303815290604052945050505050949350505050565b600061211c6127cf565b50600e805460ff60a01b1916600160a01b8315158102919091179182905560ff910416919050565b60095481111561218c5760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b60448201526064016110e0565b6000818152600f6020908152604080832081516101008101835281546001600160a01b03908116825260018301548116948201949094526002820154909316918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c083015260078101805460e08401919061220f90613740565b80601f016020809104026020016040519081016040528092919081815260200182805461223b90613740565b80156122885780601f1061225d57610100808354040283529160200191612288565b820191906000526020600020905b81548152906001019060200180831161226b57829003601f168201915b5050509190925250508151919250506001600160a01b031633146122dd5760405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b60448201526064016110e0565b6000828152600f6020526040812080546001600160a01b03199081168255600182018054821690556002820180549091169055600381018290556004810182905560058101829055600681018290559061233a6007830182612c33565b505060405182815233907fd4bcfe01803d6cc1b6cb87942924062b921ce853a0e0ad1a59cb92fa77f3a8cc9060200160405180910390a25050565b60005b8181101561129e5760056000848484818110612396576123966136f2565b90506020020160208101906123ab9190612cd7565b6001600160a01b03168152602081019190915260400160009081205460ff161515900361248357600354600460008585858181106123eb576123eb6136f2565b90506020020160208101906124009190612cd7565b6001600160a01b03166001600160a01b031681526020019081526020016000208190555060016005600085858581811061243c5761243c6136f2565b90506020020160208101906124519190612cd7565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556003805460010190555b600101612378565b6124936127cf565b600e54600160a81b900460ff16156124ed5760405162461bcd60e51b815260206004820152601e60248201527f4c69676874657246693a20616c726561647920696e697469616c697a6564000060448201526064016110e0565b600e8054600b8054600a979097556001600160a01b0394851664010000000002640100000000600160c01b03196001600160401b03909716600160c01b02640100000000600160c01b0390981663ffffffff90991698909817969096179490941695909517909355600c80549382166001600160a01b03199490941693909317909255600161ff0160a01b031916921691909117600160a81b179055565b606060006125ca866040516020016125b6919060609190911b6001600160601b031916815260140190565b604051602081830303815290604052612824565b6040516001600160601b0319606088901b1660208201529091506000906125f3906034016125b6565b6040516001600160601b0319606088901b16602082015290915060009061261c906034016125b6565b90506000612629866126e5565b60408051600480825260a0820190925291925060009190816020015b60608152602001906001900390816126455790505090508481600081518110612670576126706136f2565b6020026020010181905250838160018151811061268f5761268f6136f2565b602002602001018190525082816002815181106126ae576126ae6136f2565b602002602001018190525081816003815181106126cd576126cd6136f2565b60209081029190910101529998505050505050505050565b606060006126f283612a34565b60010190506000816001600160401b0381111561271157612711612d58565b6040519080825280601f01601f19166020018201604052801561273b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461274557509392505050565b61277f6127cf565b61278881612b0c565b50565b60078054611afd90613740565b6117a18260008084612bb5565b80516000036127c75760405163fe936cb760e01b815260040160405180910390fd5b60a090910152565b6000546001600160a01b031633146128225760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016110e0565b565b60408051808201909152601081526f181899199a1a9b1b9c1cb0b131b232b360811b602082015281516060919060009061285f906002613d74565b61286a906002613ab8565b6001600160401b0381111561288157612881612d58565b6040519080825280601f01601f1916602001820160405280156128ab576020820181803683370190505b509050600360fc1b816000815181106128c6576128c66136f2565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106128f5576128f56136f2565b60200101906001600160f81b031916908160001a90535060005b84518110156107af5782600486838151811061292d5761292d6136f2565b016020015182516001600160f81b031990911690911c60f81c908110612955576129556136f2565b01602001516001600160f81b03191682612970836002613d74565b61297b906002613ab8565b8151811061298b5761298b6136f2565b60200101906001600160f81b031916908160001a905350828582815181106129b5576129b56136f2565b602091010151815160f89190911c600f169081106129d5576129d56136f2565b01602001516001600160f81b031916826129f0836002613d74565b6129fb906003613ab8565b81518110612a0b57612a0b6136f2565b60200101906001600160f81b031916908160001a90535080612a2c8161377a565b91505061290f565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310612a735772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310612a9f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310612abd57662386f26fc10000830492506010015b6305f5e1008310612ad5576305f5e100830492506008015b6127108310612ae957612710830492506004015b60648310612afb576064830492506002015b600a83106108485760010192915050565b336001600160a01b03821603612b645760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016110e0565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b8051600003612bd7576040516322ce3edd60e01b815260040160405180910390fd5b83836002811115612bea57612bea613d8b565b90816002811115612bfd57612bfd613d8b565b90525060408401828015612c1357612c13613d8b565b90818015612c2357612c23613d8b565b9052506060909301929092525050565b508054612c3f90613740565b6000825580601f10612c4f575050565b601f0160209004906000526020600020908101906127889190612ca9565b60405180604001604052806002906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b5b80821115612cbe5760008155600101612caa565b5090565b6001600160a01b038116811461278857600080fd5b600060208284031215612ce957600080fd5b8135612cf481612cc2565b9392505050565b600060208284031215612d0d57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015612d4c57835183529284019291840191600101612d30565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612d9657612d96612d58565b604052919050565b600082601f830112612daf57600080fd5b81356001600160401b03811115612dc857612dc8612d58565b612ddb601f8201601f1916602001612d6e565b818152846020838601011115612df057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215612e2257600080fd5b8335925060208401356001600160401b0380821115612e4057600080fd5b612e4c87838801612d9e565b93506040860135915080821115612e6257600080fd5b50612e6f86828701612d9e565b9150509250925092565b60008083601f840112612e8b57600080fd5b5081356001600160401b03811115612ea257600080fd5b602083019150836020828501011115612eba57600080fd5b9250929050565b600080600060408486031215612ed657600080fd5b83356001600160401b03811115612eec57600080fd5b612ef886828701612e79565b909790965060209590950135949350505050565b60005b83811015612f27578181015183820152602001612f0f565b50506000910152565b60008151808452612f48816020860160208601612f0c565b601f01601f19169290920160200192915050565b8215158152604060208201526000612f776040830184612f30565b949350505050565b60008060408385031215612f9257600080fd5b8235612f9d81612cc2565b946020939093013593505050565b60008060408385031215612fbe57600080fd5b82356001600160401b0380821115612fd557600080fd5b908401906101008287031215612fea57600080fd5b9092506020840135908082111561300057600080fd5b5061300d85828601612d9e565b9150509250929050565b60008060008060008060008060006101208a8c03121561303657600080fd5b8935985060208a013561304881612cc2565b975060408a0135965060608a013561305f81612cc2565b955060808a013561306f81612cc2565b945060a08a013561307f81612cc2565b935060c08a013561308f81612cc2565b925060e08a013591506101008a01356001600160401b038111156130b257600080fd5b6130be8c828d01612d9e565b9150509295985092959850929598565b600080602083850312156130e157600080fd5b82356001600160401b038111156130f757600080fd5b61310385828601612e79565b90969095509350505050565b6000806040838503121561312257600080fd5b823561312d81612cc2565b9150602083013561313d81612cc2565b809150509250929050565b600061010060018060a01b03808c168452808b166020850152808a166040850152508760608401528660808401528560a08401528460c08401528060e084015261319481840185612f30565b9b9a5050505050505050505050565b600080600080600060a086880312156131bb57600080fd5b85356131c681612cc2565b945060208601356131d681612cc2565b94979496505050506040830135926060810135926080909101359150565b6000806020838503121561320757600080fd5b82356001600160401b038082111561321e57600080fd5b818501915085601f83011261323257600080fd5b81358181111561324157600080fd5b8660208260051b850101111561325657600080fd5b60209290920196919550909350505050565b600080600080600060a0868803121561328057600080fd5b85356001600160401b0381111561329657600080fd5b6132a288828901612d9e565b9550506020860135935060408601356132ba81612cc2565b925060608601356132ca81612cc2565b915060808601356132da81612cc2565b809150509295509295909350565b6000602082840312156132fa57600080fd5b81356001600160401b0381111561331057600080fd5b612f7784828501612d9e565b600081518084526020808501945080840160005b838110156133555781516001600160a01b031687529582019590820190600101613330565b509495945050505050565b8060005b600181101561338d5781516001600160e01b031916845260209384019390910190600101613364565b50505050565b60008186825b60028110156133b8578151835260209283019290910190600101613399565b505050604082018560005b60018110156133ec5781516001600160801b0319168352602092830192909101906001016133c3565b50505060a0606083015261340360a083018561331c565b90506134126080830184613360565b95945050505050565b602081526000612cf46020830184612f30565b60008060008060008060c0878903121561344757600080fd5b86359550602087013561345981612cc2565b9450604087013561346981612cc2565b959894975094956060810135955060808101359460a0909101359350915050565b80356001600160e01b0319811681146103ac57600080fd5b600080600080608085870312156134b857600080fd5b843593506020808601356001600160801b0319811681146134d857600080fd5b935060408601356001600160401b03808211156134f457600080fd5b818801915088601f83011261350857600080fd5b81358181111561351a5761351a612d58565b8060051b915061352b848301612d6e565b818152918301840191848101908b84111561354557600080fd5b938501935b8385101561356f578435925061355f83612cc2565b828252938501939085019061354a565b8097505050505050506135846060860161348a565b905092959194509250565b6000602082840312156135a157600080fd5b81358015158114612cf457600080fd5b60008060008060008060c087890312156135ca57600080fd5b86356135d581612cc2565b9550602087013563ffffffff811681146135ee57600080fd5b94506040870135935060608701356001600160401b038116811461361157600080fd5b9250608087013561362181612cc2565b915060a087013561363181612cc2565b809150509295509295509295565b6000806000806080858703121561365557600080fd5b843561366081612cc2565b9350602085013561367081612cc2565b9250604085013561368081612cc2565b9396929550929360600135925050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156136e557603f198886030184526136d3858351612f30565b945092850192908501906001016136b7565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008261373b57634e487b7160e01b600052601260045260246000fd5b500490565b600181811c9082168061375457607f821691505b60208210810361377457634e487b7160e01b600052602260045260246000fd5b50919050565b60006001820161378c5761378c613708565b5060010190565b601f82111561129e57600081815260208120601f850160051c810160208610156137ba5750805b601f850160051c820191505b818110156137d9578281556001016137c6565b505050505050565b81516001600160401b038111156137fa576137fa612d58565b61380e816138088454613740565b84613793565b602080601f831160018114613843576000841561382b5750858301515b600019600386901b1c1916600185901b1785556137d9565b600085815260208120601f198616915b8281101561387257888601518255948401946001909101908401613853565b50858210156138905787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006138b36040830185612f30565b82810360208401526134128185612f30565b6000808335601e198436030181126138dc57600080fd5b8301803591506001600160401b038211156138f657600080fd5b6020019150600581901b3603821315612eba57600080fd5b6000815461391b81613740565b808552602060018381168015613938576001811461395257613980565b60ff1985168884015283151560051b880183019550613980565b866000528260002060005b858110156139785781548a820186015290830190840161395d565b890184019650505b505050505092915050565b600060c0888352602081818501526139a58285018a61390e565b6040858203818701526139b8828b61390e565b9150606060018060a01b03808b168289015260808a818a015260a0898603818b0152858b518088528888019150888160051b890101898e0160005b83811015613a7b57601f198b840301855281518051891684528c81015189168d8501528a81015189168b850152898101516001600160a01b03168a85015287810151888501528681015160e088860181905290613a5282870182612f30565b9150508e8201519150613a688f86018315159052565b958d0195935050908b01906001016139f3565b5050809b505050505050505050505050979650505050505050565b60008060408385031215613aa957600080fd5b50508035926020909101359150565b8082018082111561084857610848613708565b60208082526022908201527f4569746865722073657420612074696d65496e74657276616c206f72204c696d6040820152611a5d60f21b606082015260800190565b60208082526027908201527f696e76616c6964207374727461677920706172616d3a20746f6b656e732061726040820152661948195c5d585b60ca1b606082015260800190565b604080825283516001600160a01b03908116838301526020850151166060830152830151600090613b9060808401826001600160a01b03169052565b50606084015160a0830152608084015160c083015260a084015160e083015260c0840151610100818185015260e086015191508061012085015250613bd9610140840182612f30565b9150508260208301529392505050565b8181038181111561084857610848613708565b60408152613c2560408201613c1885546001600160a01b031690565b6001600160a01b03169052565b6000613c3b60018501546001600160a01b031690565b6001600160a01b0390811660608401526002850154166080830152600384015460a0830152600484015460c0830152600584015460e0830152600684015461010080840191909152610120830152613c9a61014083016007860161390e565b90508260208301529392505050565b60008351613cbb818460208801612f0c565b9190910191825250602001919050565b60008351613cdd818460208801612f0c565b63ffffffff199390931691909201908152601c0192915050565b805160208083015191908110156137745760001960209190910360031b1b16919050565b63ffffffff60e01b891681528760048201528660248201528560448201528460648201528360848201528260a482015260008251613d608160c4850160208701612f0c565b9190910160c4019998505050505050505050565b808202811582820484141761084857610848613708565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220b0ad6a46ae864bd5a91530998bf423d844290f2a95b0a495418e4c034975b83564736f6c63430008140033307830303030303030303030303030303030303030303030303030303030303030303030303030303030636f6e73742066433d2027706f6c273b636f6e73742066543d617267735b305d3b636f6e73742074543d617267735b315d3b636f6e7374206641643d617267735b325d3b636f6e73742066416d3d617267735b335d3b636f6e7374206c5255726c203d206068747470733a2f2f6c692e71756573742f76312f71756f74653f66726f6d436861696e3d247b66437d26746f436861696e3d247b66437d2666726f6d546f6b656e3d247b66547d26746f546f6b656e3d247b74547d2666726f6d416464726573733d247b6641647d2666726f6d416d6f756e743d247b66416d7d603b636f6e7374206c52203d2061776169742046756e6374696f6e732e6d616b654874747052657175657374287b75726c3a206c5255726c2c6d6574686f643a2027474554272c686561646572733a207b27616363657074273a20276170706c69636174696f6e2f6a736f6e272c7d2c7d293b636f6e73742064617461203d206c522e646174612e7472616e73616374696f6e526571756573742e646174613b636f6e7374207444203d206c522e646174612e696e636c7564656453746570735b305d2e657374696d6174652e746f6f6c446174613b66756e6374696f6e207061727365627328627329207b636f6e7374207473203d2062732e736c696365283130293b636f6e73742074784964203d2074732e736c69636528302c203634293b636f6e7374206d696e4f7574203d2074732e736c696365283238382c20333230293b636f6e737420726f75746572203d2074442e726f75746572416464726573732e736c6963652832293b636f6e73742073656c6563746f72203d2074732e736c69636528313636342c2031363732293b6c6574206d6964646c65546f6b656e31203d2027273b6c6574206d6964646c65546f6b656e32203d2027273b6966202874442e706174682e6c656e677468203d3d3d2033297b6d6964646c65546f6b656e31203d2074442e706174685b315d2e736c6963652832293b7d6966202874442e706174682e6c656e677468203d3d3d2034297b6d6964646c65546f6b656e31203d2074442e706174685b315d2e736c6963652832293b6d6964646c65546f6b656e32203d2074442e706174685b325d2e736c6963652832293b7d72657475726e20747849642b6d696e4f75742b726f757465722b73656c6563746f722b6d6964646c65546f6b656e312b6d6964646c65546f6b656e323b7d72657475726e202846756e6374696f6e732e656e636f6465537472696e67287061727365627328646174612929293b",
    "sourceMap": "271:326:38:-:0;625:17337:41;271:326:38;317:42;625:17337:41;271:326:38;;;421:42;271:326;;516:42;271:326;;;;;;;;:::i;:::-;-1:-1:-1;888:42:43;849:81;;988:38;;;;;;;;;;;;-1:-1:-1;;;988:38:43;;;;;;;;;;:::i;:::-;;1077:70;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1359:1445:41;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2987:248;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;841:35:40;;;;3056:10:41;;379:1:5;3056:10:41;592:59:6;;;;-1:-1:-1;;;592:59:6;;3232:2:46;592:59:6;;;3214:21:46;3271:2;3251:18;;;3244:30;3310:26;3290:18;;;3283:54;3354:18;;592:59:6;;;;;;;;;658:7;:18;;-1:-1:-1;;;;;;658:18:6;-1:-1:-1;;;;;658:18:6;;;;;;;;;;686:26;;;682:79;;722:32;741:12;722:18;:32::i;:::-;-1:-1:-1;;1214:11:43;;1177:16;:49;;-1:-1:-1;;;;;1177:49:43;;;-1:-1:-1;;;;;;1177:49:43;;;;;;;;;-1:-1:-1;;3079:13:41::2;:21:::0;;-1:-1:-1;;;;;;3171:56:41;3185:42:::2;3171:56;::::0;;625:17337;;1592:235:6;1707:10;-1:-1:-1;;;;;1701:16:6;;;1693:52;;;;-1:-1:-1;;;1693:52:6;;3585:2:46;1693:52:6;;;3567:21:46;3624:2;3604:18;;;3597:30;3663:25;3643:18;;;3636:53;3706:18;;1693:52:6;3383:347:46;1693:52:6;1752:14;:19;;-1:-1:-1;;;;;;1752:19:6;-1:-1:-1;;;;;1752:19:6;;;;;;;;;-1:-1:-1;1810:7:6;;1783:39;;1752:19;;1810:7;;1783:39;;-1:-1:-1;1783:39:6;1592:235;:::o;625:17337:41:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;625:17337:41;-1:-1:-1;;;;;625:17337:41;;;;;;;;;;;-1:-1:-1;625:17337:41;;;;;;;-1:-1:-1;625:17337:41;;;-1:-1:-1;625:17337:41;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:46;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:46;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:46;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:46;;;2580:26;2531:89;-1:-1:-1;;1335:1:46;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:46;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:46;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:46;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:46:o;2735:290::-;2805:6;2858:2;2846:9;2837:7;2833:23;2829:32;2826:52;;;2874:1;2871;2864:12;2826:52;2900:16;;-1:-1:-1;;;;;2945:31:46;;2935:42;;2925:70;;2991:1;2988;2981:12;2925:70;3014:5;2735:290;-1:-1:-1;;;2735:290:46:o;3383:347::-;625:17337:41;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "625:17337:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:26;;;;;-1:-1:-1;;;;;1089:26:41;;;;;;-1:-1:-1;;;;;287:32:46;;;269:51;;257:2;242:18;1089:26:41;;;;;;;;673:42:38;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;865:25:46;;;853:2;838:18;673:42:38;719:177:46;980:28:41;;;;;-1:-1:-1;;;980:28:41;;-1:-1:-1;;;;;980:28:41;;;;;;-1:-1:-1;;;;;1063:31:46;;;1045:50;;1033:2;1018:18;980:28:41;901:200:46;1634:399:38;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2181:286:40:-;;;;;;:::i;:::-;;:::i;:::-;;2224:148:38;;;;;;:::i;:::-;;:::i;11503:1669:41:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2433:133:38:-;;;;;;:::i;:::-;2552:6;2433:133;-1:-1:-1;2433:133:38;849:81:43;;;;;16265:830:41;;;;;;:::i;:::-;;:::i;1149:25::-;;;;;-1:-1:-1;;;1149:25:41;;;;;;;;;6097:14:46;;6090:22;6072:41;;6060:2;6045:18;1149:25:41;5932:187:46;17342:485:41;;;;;;:::i;:::-;;:::i;13648:240::-;;;;;;:::i;:::-;;:::i;3997:942:43:-;;;;;;:::i;:::-;;:::i;14355:1703:41:-;;;;;;:::i;:::-;;:::i;4856:198::-;;;;;;:::i;:::-;;:::i;1187:55::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;1015:30::-;;;;;-1:-1:-1;;;;;1015:30:41;;;5933:1891;;;;;;:::i;:::-;;:::i;722:42:38:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;17835:124:41;;;;;;:::i;:::-;;:::i;2096:1115:43:-;;;;;;:::i;:::-;;:::i;5804:1666::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;842:38:41:-;;;;;;1077:70:43;;;:::i;:::-;;;;;;;:::i;887:20:41:-;;;;;;9095:1924;;;;;;:::i;:::-;;:::i;1064:312:6:-;;;:::i;9690:124:43:-;;;;;;:::i;:::-;-1:-1:-1;;;;;9784:22:43;;9690:124;10018:227;;;;;;:::i;:::-;10198:4;10018:227;1427:81:6;1474:7;1496;-1:-1:-1;;;;;1496:7:6;1427:81;;8348:1128:43;;;;;;:::i;:::-;;:::i;943:30:41:-;;;;;;;;-1:-1:-1;;;;;943:30:41;;;1122:20;;;;;-1:-1:-1;;;1122:20:41;;;;;;1249:44;;;;;;:::i;:::-;;;;;;;;;;;;;;10452:102:43;;;;;;:::i;:::-;;;-1:-1:-1;;;;;;17200:33:46;;;17182:52;;17170:2;17155:18;10452:102:43;17038:202:46;5379:126:41;;;;;;:::i;:::-;;:::i;8043:577::-;;;;;;:::i;:::-;;:::i;957:495:38:-;;;;;;:::i;:::-;;:::i;744:41:43:-;;;;;-1:-1:-1;;;;;744:41:43;;;634:32:38;;;;;;3681:498:41;;;;;;:::i;:::-;;:::i;752:646:44:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1054:28:41:-;;;;;;2509:720:44;;;;;;:::i;:::-;;:::i;874:98:6:-;;;;;;:::i;:::-;;:::i;914:22:41:-;;;;;;;;;;;;20299:10:46;20287:23;;;20269:42;;20257:2;20242:18;914:22:41;20125:192:46;988:38:43;;;:::i;1634:399:38:-;1726:8;:15;1687:13;;1712:11;1726:15;-1:-1:-1;;;;;1775:18:38;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1775:18:38;;1752:41;;1811:6;1806:194;1823:6;1819:1;:10;1806:194;;;1859:68;1875:51;1908:8;1917:1;1908:11;;;;;;;;:::i;:::-;-1:-1:-1;1908:11:38;;1921:4;;2433:133;1859:68;1847:6;1854:1;1847:9;;;;;;;;:::i;:::-;;;;;;;;;;:80;1970:3;;1806:194;;;-1:-1:-1;2018:6:38;1634:399;-1:-1:-1;;;1634:399:38:o;2181:286:40:-;2302:10;-1:-1:-1;;;;;2324:8:40;2302:31;;2298:81;;2350:22;;-1:-1:-1;;;2350:22:40;;;;;;;;;;;2298:81;2384:40;2399:9;2410:8;2420:3;2384:14;:40::i;:::-;2435:27;;2452:9;;2435:27;;;;;2181:286;;;:::o;2224:148:38:-;2281:4;2346:17;2360:3;2351:5;2346:17;:::i;:::-;2338:26;2224:148;-1:-1:-1;;2224:148:38:o;11503:1669:41:-;11582:17;11601:24;11648:20;11671:17;11683:4;11671:11;:17::i;:::-;11648:40;;11699:21;11731:23;11765:18;11794:19;11829:9;11824:1341;11848:23;;11844:1;:27;11824:1341;;;11926:28;11957:20;;;:17;:20;;;;;;;;11926:51;;;;;;;;;-1:-1:-1;;;;;11926:51:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11926:51:41;;;;-1:-1:-1;;12038:13:41;;11926:51;;-1:-1:-1;;;;;;;12038:27:41;;12034:1120;;12116:21;;;;:26;12112:132;;12202:8;:22;;;12183:15;:41;;12167:57;;12112:132;12294:21;;;;:26;:49;;;;-1:-1:-1;12324:14:41;;;;:19;;12294:49;12290:265;;;12405:11;;12385:16;;;;-1:-1:-1;;;;;12385:31:41;;;12405:11;;12385:31;:150;;12521:14;;;;12499:16;;;;;-1:-1:-1;;;;;12486:30:41;;;;;:12;:30;;;;;;;12479:38;;:6;;12486:30;12479:38;;;;;;:::i;:::-;;;;;;;:56;;12385:150;;;12462:14;;;;12439:17;;;;;-1:-1:-1;;;;;12426:31:41;;;;;:12;:31;;;;12419:39;;:6;;12426:31;12419:39;;;;;;:::i;:::-;;;;;;;:57;;12385:150;12368:167;;12290:265;12578:14;:31;;;;12596:13;12578:31;12574:547;;;12912:4;12896:20;;12964:1;12972;12953:22;;;;;;;;21499:25:46;;;21555:2;21540:18;;21533:34;21487:2;21472:18;;21325:248;12953:22:41;;;;;;;;;;;;;12939:36;;13004:12;13000:102;;;13044:34;;;;;;;;;13000:102;-1:-1:-1;11873:3:41;;;;:::i;:::-;;;;11824:1341;;;;11627:1545;;;;;11503:1669;;;;;;;:::o;16265:830::-;16319:35;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16319:35:41;16413:48;16454:6;16413:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:3;:40;;:48;;;;:::i;:::-;16523:28;16554:24;;;:17;:24;;;;;;;;16523:55;;;;;;;;;-1:-1:-1;;;;;16523:55:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16666:20;16689:90;16711:8;:16;;;16729:8;:17;;;16748:8;:13;;;16763:8;:15;;;16689:21;:90::i;:::-;16666:113;-1:-1:-1;16836:17:41;:3;16666:113;16836:11;:17::i;:::-;-1:-1:-1;;;16919:17:41;16970:22;;;:11;:22;;;;;:30;;;:22;17054:33;865:25:46;;;16939:20:41;;17054:33;;838:18:46;17054:33:41;;;;;;;16308:787;;;;16265:830;:::o;17342:485::-;17576:13;17592:22;;;:11;:22;;;;;;;;;17675:24;;;:17;:24;;;;;;:37;;:48;17715:8;17675:37;:48;:::i;:::-;;17794:9;17785:34;17805:8;17815:3;17785:34;;;;;;;:::i;:::-;;;;;;;;17476:351;17342:485;;;:::o;13648:240::-;13817:4;13765:24;13857:10;;;;:3;:10;:::i;:::-;13868:1;13857:13;;;;;;;:::i;:::-;;;;;;;13877:1;13846:34;;;;;;;;21499:25:46;;;21555:2;21540:18;;21533:34;21487:2;21472:18;;21325:248;13846:34:41;;;;;;;;;;;;;13832:48;;13648:240;;;;;:::o;3997:942:43:-;4360:35;;;4393:1;4360:35;;;;;;;;;4312:45;;4360:35;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4360:35:43;;-1:-1:-1;;4360:35:43;;;;;;;;;;;4312:83;;4427:7;4405:9;4415:1;4405:12;;;;;;;;:::i;:::-;;;;;;;:19;;:29;-1:-1:-1;;;;;4405:29:43;;;-1:-1:-1;;;;;4405:29:43;;;;;4469:10;4444:9;4454:1;4444:12;;;;;;;;:::i;:::-;;;;;;;:22;;:35;-1:-1:-1;;;;;4444:35:43;;;-1:-1:-1;;;;;4444:35:43;;;;;4519:15;4489:9;4499:1;4489:12;;;;;;;;:::i;:::-;;;;;;;:27;;:45;-1:-1:-1;;;;;4489:45:43;;;-1:-1:-1;;;;;4489:45:43;;;;;4576:17;4544:9;4554:1;4544:12;;;;;;;;:::i;:::-;;;;;;;:29;;:49;-1:-1:-1;;;;;4544:49:43;;;-1:-1:-1;;;;;4544:49:43;;;;;4629:11;4603:9;4613:1;4603:12;;;;;;;;:::i;:::-;;;;;;;:23;;:37;;;;;4674:9;4650;4660:1;4650:12;;;;;;;;:::i;:::-;;;;;;;:21;;:33;;;;4724:4;4693:9;4703:1;4693:12;;;;;;;;:::i;:::-;;;;;;;;;;;:35;;;:28;;;;:35;4739:16;;:193;;-1:-1:-1;;;4739:193:43;;-1:-1:-1;;;;;4739:16:43;;;;:34;;:193;;4787:14;;4815:10;;4839:8;;4862:9;;4885:10;;4909:9;;4739:193;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4302:637;3997:942;;;;;;;;;:::o;14355:1703:41:-;1474:7:6;1496;-1:-1:-1;;;;;1496:7:6;4341:10:41;:21;;;;:54;;-1:-1:-1;4380:15:41;;;;;-1:-1:-1;;;;;4380:15:41;4366:10;:29;;4341:54;:87;;;;-1:-1:-1;4413:15:41;;-1:-1:-1;;;;;4413:15:41;4399:10;:29;;4341:87;4337:167;;;4467:10;4479:7;1474::6;1496;-1:-1:-1;;;;;1496:7:6;;1427:81;4479:7:41;4488:15;;4450:54;;-1:-1:-1;;;4450:54:41;;-1:-1:-1;;;;;28318:15:46;;;4488::41;4450:54;;28300:34:46;28370:15;;;28350:18;;;28343:43;4488:15:41;;;;;;28402:18:46;;;28395:43;28235:18;;4450:54:41;;;;;;;;4337:167;14527:16:::1;14547:37;::::0;;::::1;14558:11:::0;14547:37:::1;:::i;:::-;14524:60;;;14599:11;14614:1;14599:16:::0;14595:1456:::1;;14632:10;14648:37;::::0;;::::1;14659:11:::0;14648:37:::1;:::i;:::-;-1:-1:-1::0;14733:29:41::1;14765:24:::0;;;:17:::1;:24;::::0;;;;14807:21:::1;::::0;::::1;::::0;14631:54;;-1:-1:-1;14765:24:41;14807:26;14804:188:::1;;14896:21;::::0;::::1;::::0;14878:39:::1;::::0;:15:::1;:39;:::i;:::-;14853:22;::::0;::::1;:64:::0;14804:188:::1;;;14975:1;14958:14;::::0;::::1;:18:::0;14804:188:::1;15041:18;15053:5;15041:11;:18::i;:::-;14616:504;;14483:1575;14355:1703:::0;;:::o;14595:1456::-:1;15142:17;15165:40;::::0;;::::1;15176:11:::0;15165:40:::1;:::i;:::-;-1:-1:-1::0;15220:10:41::1;15233:22:::0;;;:11:::1;:22;::::0;;;;;;;;15302:24;;;:17:::1;:24:::0;;;;;;15650:14:::1;::::0;::::1;::::0;15141:64;;-1:-1:-1;15233:22:41;;15650:16;15647:274:::1;;15769:24;::::0;;;:17:::1;:24;::::0;;;;15762:31;;-1:-1:-1;;;;;;15762:31:41;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;15769:24;15762:31:::1;;::::0;::::1;15769:24:::0;15762:31:::1;:::i;:::-;-1:-1:-1::0;;15867:38:41::1;::::0;865:25:46;;;15887:10:41::1;::::0;15867:38:::1;::::0;853:2:46;838:18;15867:38:41::1;;;;;;;15647:274;15971:15;::::0;::::1;::::0;15988:13;;;16003:16;::::1;::::0;16021:17:::1;::::0;::::1;::::0;15940:99:::1;::::0;;29344:25:46;;;29400:2;29385:18;;29378:34;;;;-1:-1:-1;;;;;15988:13:41;;::::1;29466:18:46::0;;;29459:43;16003:16:41;;::::1;29533:2:46::0;29518:18;;29511:43;16021:17:41::1;29585:3:46::0;29570:19;;29563:44;15953:9:41;;15940:99:::1;::::0;29331:3:46;29316:19;15940:99:41::1;;;;;;;15126:925;;;14595:1456;14483:1575;14355:1703:::0;;:::o;4856:198::-;2145:20:6;:18;:20::i;:::-;4967:15:41::1;:34:::0;;-1:-1:-1;;;;;;4967:34:41::1;::::0;-1:-1:-1;;;;;4967:34:41;;::::1;;;::::0;;5012:15:::1;:34:::0;;-1:-1:-1;;;;;;5012:34:41::1;::::0;;;::::1;;::::0;;4856:198::o;1187:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1187:55:41;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5933:1891::-;6110:8;;-1:-1:-1;;;6110:8:41;;;;6109:9;6101:37;;;;-1:-1:-1;;;6101:37:41;;29820:2:46;6101:37:41;;;29802:21:46;29859:2;29839:18;;;29832:30;-1:-1:-1;;;29878:18:46;;;29871:45;29933:18;;6101:37:41;29618:339:46;6101:37:41;6157:13;6173:1;6157:17;6149:59;;;;-1:-1:-1;;;6149:59:41;;30164:2:46;6149:59:41;;;30146:21:46;30203:2;30183:18;;;30176:30;30242:31;30222:18;;;30215:59;30291:18;;6149:59:41;29962:353:46;6149:59:41;-1:-1:-1;;;;;6227:21:41;;;;;;:12;:21;;;;;;;;6219:64;;;;-1:-1:-1;;;6219:64:41;;30522:2:46;6219:64:41;;;30504:21:46;30561:2;30541:18;;;30534:30;30600:32;30580:18;;;30573:60;30650:18;;6219:64:41;30320:354:46;6219:64:41;-1:-1:-1;;;;;6302:23:41;;;;;;:12;:23;;;;;;;;6294:68;;;;-1:-1:-1;;;6294:68:41;;30881:2:46;6294:68:41;;;30863:21:46;;;30900:18;;;30893:30;30959:34;30939:18;;;30932:62;31011:18;;6294:68:41;30679:356:46;6294:68:41;6381:17;;;:31;;-1:-1:-1;6402:10:41;;6381:31;6373:78;;;;-1:-1:-1;;;6373:78:41;;;;;;;:::i;:::-;6472:17;;:30;;;;-1:-1:-1;6493:9:41;;6472:30;6470:33;6462:74;;;;-1:-1:-1;;;6462:74:41;;31645:2:46;6462:74:41;;;31627:21:46;31684:2;31664:18;;;31657:30;31723;31703:18;;;31696:58;31771:18;;6462:74:41;31443:352:46;6462:74:41;6547:18;6580:16;;6576:96;;6629:30;6647:12;6629:15;:30;:::i;:::-;6613:46;;6576:96;6720:31;6754:459;;;;;;;;6788:10;-1:-1:-1;;;;;6754:459:41;;;;;6838:1;6823:12;:16;:42;;6856:9;6823:42;;;6842:11;;-1:-1:-1;;;;;6842:11:41;6823:42;-1:-1:-1;;;;;6754:459:41;;;;;6954:7;-1:-1:-1;;;;;6754:459:41;;;;;7047:12;6754:459;;;;7089:13;6754:459;;;;7125:13;6754:459;;;;7160:5;6754:459;;;;;;;;;;;;;;;;;;;;;;;;6720:493;;7258:11;:20;;;-1:-1:-1;;;;;7235:43:41;:11;:19;;;-1:-1:-1;;;;;7235:43:41;;7226:97;;;;-1:-1:-1;;;7226:97:41;;;;;;;:::i;:::-;7363:13;;7336:24;7446:35;;;:17;:35;;;;;;;;;:49;;;;-1:-1:-1;;;;;;7446:49:41;;;-1:-1:-1;;;;;7446:49:41;;;;;;;;;;-1:-1:-1;7446:49:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:35;:49;;;;;;;;:::i;:::-;-1:-1:-1;;7565:13:41;:18;;7582:1;7565:18;;;;;;7656:23;:27;;;;;;;-1:-1:-1;7768:16:41;;7752:64;;-1:-1:-1;;;;;7752:64:41;;;;;;;;7768:11;;7799:16;;7752:64;:::i;:::-;;;;;;;;6062:1762;;;5933:1891;;;;;:::o;17835:124::-;2145:20:6;:18;:20::i;:::-;17922:29:41::1;17936:14;;17922:13;:29::i;:::-;17835:124:::0;;:::o;2096:1115:43:-;2316:28;2358:24;2396:29;2440:31;2484:17;2496:4;2484:11;:17::i;:::-;2299:202;;;;;;;;2520:21;2560:12;:19;2558:1;:21;;;;:::i;:::-;-1:-1:-1;;;;;2544:36:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2544:36:43;;2520:60;;2600:9;2590:4;2595:1;2590:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;2590:19:43;;;-1:-1:-1;;;;;2590:19:43;;;;;2630:6;2625:153;2642:12;:19;2638:1;:23;2625:153;;;2717:12;2730:1;2717:15;;;;;;;;:::i;:::-;;;;;;;2705:4;2710:1;2712;2710:3;2705:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2705:27:43;;;:9;;;;;;;;;;;:27;2750:3;;2625:153;;;;2809:7;2787:4;2804:1;2792:4;:11;:13;;;;:::i;:::-;2787:19;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2787:29:43;;;;:19;;;;;;;;;;;:29;2889:9;;2906:17;;2834:27;;2864:60;;2879:8;;2889:9;2900:4;;2864:14;:60::i;:::-;2983:13;;;;3057;;3107:9;;2834:90;;-1:-1:-1;2983:13:43;;3034:8;;3052:152;;3080:8;;3099:18;;2983:13;;3150:9;3161:7;3034:8;2834:90;3052:4;:152::i;:::-;2221:990;;;;;;;;2096:1115;;;;;:::o;5804:1666::-;5865:17;;:::i;:::-;5884;;:::i;:::-;5903:16;5921;;:::i;:::-;5972:2;5957:4;:11;:17;;5949:56;;;;-1:-1:-1;;;5949:56:43;;33553:2:46;5949:56:43;;;33535:21:46;33592:2;33572:18;;;33565:30;33631:28;33611:18;;;33604:56;33677:18;;5949:56:43;33351:350:46;5949:56:43;6016:28;;:::i;:::-;6054:27;;:::i;:::-;6091:30;;:::i;:::-;6131:31;;:::i;:::-;6265:2;6255:13;;;6249:20;6230:40;;6348:2;6338:13;;6332:20;6314:39;;6439:2;6429:13;;6423:20;6488:2;6484:22;6463:19;;;6456:51;6597:3;6587:14;;6581:21;6558:45;;6626:11;;6641:2;6626:17;6622:128;;6721:2;6716:4;6712:12;6706:19;6692:12;6685:41;6622:128;6763:4;:11;6778:3;6763:18;6759:197;;6859:2;6854:4;6850:12;6844:19;6830:12;6823:41;6926:3;6921:4;6917:13;6911:20;6906:2;6892:12;6888:21;6881:51;6759:197;6965:11;6991:6;6986:178;7001:1;6999;:3;6986:178;;;7051:1;7023:12;7036:1;7023:15;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;7023:31:43;;7019:77;;7073:8;;;:::i;:::-;;;7019:77;7136:3;;6986:178;;;;7173:35;7225:6;-1:-1:-1;;;;;7211:21:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7211:21:43;;7173:59;;7247:6;7242:146;7257:6;7255:1;:8;7242:146;;;7304:12;7317:1;7304:15;;;;;;;:::i;:::-;;;;;7280:18;7299:1;7280:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7280:39:43;;;:21;;;;;;;;;;;:39;7360:3;;7242:146;;;-1:-1:-1;7405:10:43;;7417:9;;-1:-1:-1;7405:10:43;;-1:-1:-1;7428:18:43;-1:-1:-1;5804:1666:43;;-1:-1:-1;;;;5804:1666:43:o;1077:70::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9095:1924:41:-;9288:13;9304:1;9288:17;9280:59;;;;-1:-1:-1;;;9280:59:41;;30164:2:46;9280:59:41;;;30146:21:46;30203:2;30183:18;;;30176:30;30242:31;30222:18;;;30215:59;30291:18;;9280:59:41;29962:353:46;9280:59:41;-1:-1:-1;;;;;9358:21:41;;;;;;:12;:21;;;;;;;;9350:64;;;;-1:-1:-1;;;9350:64:41;;30522:2:46;9350:64:41;;;30504:21:46;30561:2;30541:18;;;30534:30;30600:32;30580:18;;;30573:60;30650:18;;9350:64:41;30320:354:46;9350:64:41;-1:-1:-1;;;;;9433:23:41;;;;;;:12;:23;;;;;;;;9425:68;;;;-1:-1:-1;;;9425:68:41;;30881:2:46;9425:68:41;;;30863:21:46;;;30900:18;;;30893:30;30959:34;30939:18;;;30932:62;31011:18;;9425:68:41;30679:356:46;9425:68:41;9512:17;;;:31;;-1:-1:-1;9533:10:41;;9512:31;9504:78;;;;-1:-1:-1;;;9504:78:41;;;;;;;:::i;:::-;9614:7;-1:-1:-1;;;;;9601:20:41;:9;-1:-1:-1;;;;;9601:20:41;;9593:72;;;;-1:-1:-1;;;9593:72:41;;;;;;;:::i;:::-;9686:17;;:30;;;;-1:-1:-1;9707:9:41;;9686:30;9684:33;9676:74;;;;-1:-1:-1;;;9676:74:41;;31645:2:46;9676:74:41;;;31627:21:46;31684:2;31664:18;;;31657:30;31723;31703:18;;;31696:58;31771:18;;9676:74:41;31443:352:46;9676:74:41;9912:23;;9903:5;:32;;9895:64;;;;-1:-1:-1;;;9895:64:41;;33908:2:46;9895:64:41;;;33890:21:46;33947:2;33927:18;;;33920:30;-1:-1:-1;;;33966:18:46;;;33959:49;34025:18;;9895:64:41;33706:343:46;9895:64:41;10020:37;10060:24;;;:17;:24;;;;;10125:21;;-1:-1:-1;;;;;10125:21:41;10150:10;10125:35;10117:60;;;;-1:-1:-1;;;10117:60:41;;34256:2:46;10117:60:41;;;34238:21:46;34295:2;34275:18;;;34268:30;-1:-1:-1;;;34314:18:46;;;34307:42;34366:18;;10117:60:41;34054:336:46;10117:60:41;10188:18;10221:16;;10217:96;;10270:30;10288:12;10270:15;:30;:::i;:::-;10254:46;;10217:96;10422:1;10407:12;:16;:42;;10440:9;10407:42;;;10426:11;;-1:-1:-1;;;;;10426:11:41;10407:42;10380:24;;;:69;;-1:-1:-1;;;;;10380:69:41;;;-1:-1:-1;;;;;;10380:69:41;;;;;;;;10524:25;;;:35;;;;;;;;;;;;;10636:53;10627:107;;;;-1:-1:-1;;;10627:107:41;;;;;;;:::i;:::-;10745:29;;;:44;;;10800:23;;;:39;;;10850:22;;;:30;;;10960:21;;10940:67;;-1:-1:-1;;;;;10960:21:41;;;;10940:67;;;;10745:16;;11001:5;;10940:67;:::i;1064:312:6:-;1184:14;;-1:-1:-1;;;;;1184:14:6;1170:10;:28;1162:63;;;;-1:-1:-1;;;1162:63:6;;35861:2:46;1162:63:6;;;35843:21:46;35900:2;35880:18;;;35873:30;-1:-1:-1;;;35919:18:46;;;35912:52;35981:18;;1162:63:6;35659:346:46;1162:63:6;1232:16;1251:7;;1274:10;-1:-1:-1;;;;;;1264:20:6;;;;;;;-1:-1:-1;1290:27:6;;;;;;;1329:42;;-1:-1:-1;;;;;1251:7:6;;;;1274:10;;1251:7;;1329:42;;;1109:267;1064:312::o;8348:1128:43:-;8531:12;-1:-1:-1;;;8609:66:43;8554:16;8531:12;8554:16;8831:226;8846:4;:11;8844:1;:13;8831:226;;;8897:1;-1:-1:-1;;;;;8878:21:43;:4;8883:1;8878:7;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8878:21:43;;8874:156;;8947:9;8958:25;8975:4;8980:1;8975:7;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;9784:22:43;;9690:124;8958:25;8930:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8918:66;;9002:13;;;;:::i;:::-;;;8874:156;9043:3;;;:::i;:::-;;;8831:226;;;-1:-1:-1;9070:39:43;;;;9087:9;;9106:1;;9098:10;9070:39;;:::i;:::-;;;;;;;-1:-1:-1;;9070:39:43;;;;;;9179:17;9070:39;9218:48;;37021:28:46;-1:-1:-1;;;;;;37079:15:46;;37065:12;;;37058:37;9070:39:43;-1:-1:-1;9156:9:43;;9187:8;;37111:12:46;9218:48:43;;;;;;;;;;;;9210:57;;;:::i;:::-;9282:5;-1:-1:-1;;;;;9318:11:43;9784:22;9353:44;;;9378:1;9370:10;9353:44;;37591:41:46;-1:-1:-1;;;;;;37662:33:46;;37648:12;;;37641:55;37712:12;9353:44:43;;;;;;;;;;;;9345:53;;;:::i;:::-;9126:343;;;;;;;;;;9420:11;;9446:9;;9126:343;;;:::i;:::-;;;;;;;;;;;;;9119:350;;;;;;8348:1128;;;;;;:::o;5379:126:41:-;5436:4;2145:20:6;:18;:20::i;:::-;-1:-1:-1;5453:8:41::1;:16:::0;;-1:-1:-1;;;;5453:16:41::1;-1:-1:-1::0;;;5453:16:41;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;5488:8:::0;::::1;;5379:126:::0;;;:::o;8043:577::-;8142:23;;8133:5;:32;;8125:64;;;;-1:-1:-1;;;8125:64:41;;33908:2:46;8125:64:41;;;33890:21:46;33947:2;33927:18;;;33920:30;-1:-1:-1;;;33966:18:46;;;33959:49;34025:18;;8125:64:41;33706:343:46;8125:64:41;8251:36;8290:24;;;:17;:24;;;;;;;;8251:63;;;;;;;;;-1:-1:-1;;;;;8251:63:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8251:63:41;;;;-1:-1:-1;;8355:21:41;;8251:63;;-1:-1:-1;;;;;;;8355:35:41;8380:10;8355:35;8347:60;;;;-1:-1:-1;;;8347:60:41;;34256:2:46;8347:60:41;;;34238:21:46;34295:2;34275:18;;;34268:30;-1:-1:-1;;;34314:18:46;;;34307:42;34366:18;;8347:60:41;34054:336:46;8347:60:41;8492:24;;;;:17;:24;;;;;8485:31;;-1:-1:-1;;;;;;8485:31:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8492:24;8485:31;;;;8492:24;8485:31;:::i;:::-;-1:-1:-1;;8574:38:41;;865:25:46;;;8594:10:41;;8574:38;;853:2:46;838:18;8574:38:41;;;;;;;8091:529;8043:577;:::o;957:495:38:-;1038:6;1033:412;1046:25;;;1033:412;;;1093:12;:31;1106:14;;1121:1;1106:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1093:31:38;;;;;;;;;;;;-1:-1:-1;1093:31:38;;;;;;:40;;;;1089:284;;1187:20;;1153:12;:31;1166:14;;1181:1;1166:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1153:31:38;-1:-1:-1;;;;;1153:31:38;;;;;;;;;;;;:54;;;;1260:4;1226:12;:31;1239:14;;1254:1;1239:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1226:31:38;;;;;;;;;;;;-1:-1:-1;1226:31:38;:38;;-1:-1:-1;;1226:38:38;;;;;;;;;;1317:20;1315:22;;-1:-1:-1;1315:22:38;;;1089:284;1415:3;;1033:412;;3681:498:41;2145:20:6;:18;:20::i;:::-;3866:13:41::1;::::0;-1:-1:-1;;;3866:13:41;::::1;;;3865:14;3857:57;;;::::0;-1:-1:-1;;;3857:57:41;;38722:2:46;3857:57:41::1;::::0;::::1;38704:21:46::0;38761:2;38741:18;;;38734:30;38800:32;38780:18;;;38773:60;38850:18;;3857:57:41::1;38520:354:46::0;3857:57:41::1;3925:11;:26:::0;;3962:8:::1;:20:::0;;3993:5:::1;:14:::0;;;;-1:-1:-1;;;;;4061:34:41;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;;;;;;4018:32:41;;::::1;-1:-1:-1::0;;;4018:32:41::1;-1:-1:-1::0;;;;;4018:32:41;;;3962:20:::1;::::0;;::::1;4018:32:::0;;;;;;;::::1;4061:34:::0;;;::::1;::::0;;;::::1;::::0;;;4106:15:::1;:34:::0;;;;::::1;-1:-1:-1::0;;;;;;4106:34:41;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;4151:20:41;3925:26;::::1;4151:20:::0;;;;-1:-1:-1;;;4151:20:41::1;::::0;;3681:498::o;752:646:44:-;871:15;899:23;925:45;958:10;941:28;;;;;;;39028:2:46;39024:15;;;;-1:-1:-1;;;;;;39020:53:46;39008:66;;39099:2;39090:12;;38879:229;941:28:44;;;;;;;;;;;;;925:15;:45::i;:::-;1021:26;;-1:-1:-1;;;;;;39028:2:46;39024:15;;;39020:53;1021:26:44;;;39008:66:46;899:71:44;;-1:-1:-1;981:21:44;;1005:43;;39090:12:46;;1021:26:44;38879:229:46;1005:43:44;1103:22;;-1:-1:-1;;;;;;39028:2:46;39024:15;;;39020:53;1103:22:44;;;39008:66:46;981:67:44;;-1:-1:-1;1059:25:44;;1087:39;;39090:12:46;;1103:22:44;38879:229:46;1087:39:44;1059:67;;1137:24;1164:20;1177:6;1164:12;:20::i;:::-;1222:15;;;1235:1;1222:15;;;;;;;;;1137:47;;-1:-1:-1;1197:22:44;;1222:15;;;;;;;;;;;;;;;;;;;;;1197:40;;1260:9;1248:6;1255:1;1248:9;;;;;;;;:::i;:::-;;;;;;:21;;;;1292:7;1280:6;1287:1;1280:9;;;;;;;;:::i;:::-;;;;;;:19;;;;1322:11;1310:6;1317:1;1310:9;;;;;;;;:::i;:::-;;;;;;:23;;;;1356:10;1344:6;1351:1;1344:9;;;;;;;;:::i;:::-;;;;;;;;;;:22;1384:6;752:646;-1:-1:-1;;;;;;;;;752:646:44:o;2509:720::-;2567:13;2618:14;2635:17;2646:5;2635:10;:17::i;:::-;2655:1;2635:21;2618:38;;2671:20;2705:6;-1:-1:-1;;;;;2694:18:44;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2694:18:44;-1:-1:-1;2671:41:44;-1:-1:-1;2836:28:44;;;2852:2;2836:28;2893:290;-1:-1:-1;;2925:5:44;-1:-1:-1;;;3062:2:44;3051:14;;3046:32;2925:5;3033:46;3125:2;3116:11;;;-1:-1:-1;3146:21:44;2893:290;3146:21;-1:-1:-1;3204:6:44;2509:720;-1:-1:-1;;;2509:720:44:o;874:98:6:-;2145:20;:18;:20::i;:::-;945:22:::1;964:2;945:18;:22::i;:::-;874:98:::0;:::o;988:38:43:-;;;;;;;:::i;4323:207:3:-;4442:83;4460:4;4466:15;4483:23;4508:16;4442:17;:83::i;5827:148::-;5911:4;:11;5926:1;5911:16;5907:40;;5936:11;;-1:-1:-1;;;5936:11:3;;;;;;;;;;;5907:40;5954:9;;;;:16;5827:148::o;1872:158:6:-;1991:7;;-1:-1:-1;;;;;1991:7:6;1977:10;:21;1969:56;;;;-1:-1:-1;;;1969:56:6;;39315:2:46;1969:56:6;;;39297:21:46;39354:2;39334:18;;;39327:30;-1:-1:-1;;;39373:18:46;;;39366:52;39435:18;;1969:56:6;39113:346:46;1969:56:6;1872:158::o;1735:468:44:-;1827:42;;;;;;;;;;;;-1:-1:-1;;;1827:42:44;;;;1915:11;;1801:13;;1827:42;:21;;1915:15;;1929:1;1915:15;:::i;:::-;1911:19;;:1;:19;:::i;:::-;-1:-1:-1;;;;;1901:30:44;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1901:30:44;;1882:49;;-1:-1:-1;;;1942:3:44;1946:1;1942:6;;;;;;;;:::i;:::-;;;;:12;-1:-1:-1;;;;;1942:12:44;;;;;;;;;-1:-1:-1;;;1965:3:44;1969:1;1965:6;;;;;;;;:::i;:::-;;;;:12;-1:-1:-1;;;;;1965:12:44;;;;;;;;;1993:6;1988:179;2009:4;:11;2005:1;:15;1988:179;;;2055:8;2086:1;2075:4;2080:1;2075:7;;;;;;;;:::i;:::-;;;;;2055:35;;-1:-1:-1;;;;;;2075:7:44;;;:12;;;:7;2069:19;;2055:35;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;2055:35:44;2042:3;2048;:1;2050;2048:3;:::i;:::-;2046:5;;:1;:5;:::i;:::-;2042:10;;;;;;;;:::i;:::-;;;;:48;-1:-1:-1;;;;;2042:48:44;;;;;;;;;2118:8;2138:4;2143:1;2138:7;;;;;;;;:::i;:::-;;;;;;2118:37;;2138:7;;;;;2148:4;2132:21;;2118:37;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;2118:37:44;2105:3;2111;:1;2113;2111:3;:::i;:::-;2109:5;;:1;:5;:::i;:::-;2105:10;;;;;;;;:::i;:::-;;;;:50;-1:-1:-1;;;;;2105:50:44;;;;;;;;-1:-1:-1;2022:3:44;;;;:::i;:::-;;;;1988:179;;12875:948:42;12928:7;;-1:-1:-1;;;13006:17:42;;13002:106;;-1:-1:-1;;;13044:17:42;;;-1:-1:-1;13090:2:42;13080:12;13002:106;13135:8;13126:5;:17;13122:106;;13173:8;13164:17;;;-1:-1:-1;13210:2:42;13200:12;13122:106;13255:8;13246:5;:17;13242:106;;13293:8;13284:17;;;-1:-1:-1;13330:2:42;13320:12;13242:106;13375:7;13366:5;:16;13362:103;;13412:7;13403:16;;;-1:-1:-1;13448:1:42;13438:11;13362:103;13492:7;13483:5;:16;13479:103;;13529:7;13520:16;;;-1:-1:-1;13565:1:42;13555:11;13479:103;13609:7;13600:5;:16;13596:103;;13646:7;13637:16;;;-1:-1:-1;13682:1:42;13672:11;13596:103;13726:7;13717:5;:16;13713:68;;13764:1;13754:11;13809:6;12875:948;-1:-1:-1;;12875:948:42:o;1592:235:6:-;1707:10;-1:-1:-1;;;;;1701:16:6;;;1693:52;;;;-1:-1:-1;;;1693:52:6;;39839:2:46;1693:52:6;;;39821:21:46;39878:2;39858:18;;;39851:30;39917:25;39897:18;;;39890:53;39960:18;;1693:52:6;39637:347:46;1693:52:6;1752:14;:19;;-1:-1:-1;;;;;;1752:19:6;-1:-1:-1;;;;;1752:19:6;;;;;;;;;-1:-1:-1;1810:7:6;;1783:39;;1752:19;;1810:7;;1783:39;;-1:-1:-1;1783:39:6;1592:235;:::o;3777:307:3:-;3943:6;3937:20;3961:1;3937:25;3933:51;;3971:13;;-1:-1:-1;;;3971:13:3;;;;;;;;;;;3933:51;3991:4;4011:12;3991:32;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;4029:13:3;;;4045:8;4029:24;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;4059:11:3;;;;:20;;;;-1:-1:-1;;3777:307:3:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;331:131:46:-;-1:-1:-1;;;;;406:31:46;;396:42;;386:70;;452:1;449;442:12;467:247;526:6;579:2;567:9;558:7;554:23;550:32;547:52;;;595:1;592;585:12;547:52;634:9;621:23;653:31;678:5;653:31;:::i;:::-;703:5;467:247;-1:-1:-1;;;467:247:46:o;1106:179::-;1164:6;1217:2;1205:9;1196:7;1192:23;1188:32;1185:52;;;1233:1;1230;1223:12;1185:52;-1:-1:-1;1256:23:46;;1106:179;-1:-1:-1;1106:179:46:o;1290:632::-;1461:2;1513:21;;;1583:13;;1486:18;;;1605:22;;;1432:4;;1461:2;1684:15;;;;1658:2;1643:18;;;1432:4;1727:169;1741:6;1738:1;1735:13;1727:169;;;1802:13;;1790:26;;1871:15;;;;1836:12;;;;1763:1;1756:9;1727:169;;;-1:-1:-1;1913:3:46;;1290:632;-1:-1:-1;;;;;;1290:632:46:o;1927:127::-;1988:10;1983:3;1979:20;1976:1;1969:31;2019:4;2016:1;2009:15;2043:4;2040:1;2033:15;2059:275;2130:2;2124:9;2195:2;2176:13;;-1:-1:-1;;2172:27:46;2160:40;;-1:-1:-1;;;;;2215:34:46;;2251:22;;;2212:62;2209:88;;;2277:18;;:::i;:::-;2313:2;2306:22;2059:275;;-1:-1:-1;2059:275:46:o;2339:530::-;2381:5;2434:3;2427:4;2419:6;2415:17;2411:27;2401:55;;2452:1;2449;2442:12;2401:55;2488:6;2475:20;-1:-1:-1;;;;;2510:2:46;2507:26;2504:52;;;2536:18;;:::i;:::-;2580:55;2623:2;2604:13;;-1:-1:-1;;2600:27:46;2629:4;2596:38;2580:55;:::i;:::-;2660:2;2651:7;2644:19;2706:3;2699:4;2694:2;2686:6;2682:15;2678:26;2675:35;2672:55;;;2723:1;2720;2713:12;2672:55;2788:2;2781:4;2773:6;2769:17;2762:4;2753:7;2749:18;2736:55;2836:1;2811:16;;;2829:4;2807:27;2800:38;;;;2815:7;2339:530;-1:-1:-1;;;2339:530:46:o;2874:607::-;2969:6;2977;2985;3038:2;3026:9;3017:7;3013:23;3009:32;3006:52;;;3054:1;3051;3044:12;3006:52;3090:9;3077:23;3067:33;;3151:2;3140:9;3136:18;3123:32;-1:-1:-1;;;;;3215:2:46;3207:6;3204:14;3201:34;;;3231:1;3228;3221:12;3201:34;3254:49;3295:7;3286:6;3275:9;3271:22;3254:49;:::i;:::-;3244:59;;3356:2;3345:9;3341:18;3328:32;3312:48;;3385:2;3375:8;3372:16;3369:36;;;3401:1;3398;3391:12;3369:36;;3424:51;3467:7;3456:8;3445:9;3441:24;3424:51;:::i;:::-;3414:61;;;2874:607;;;;;:::o;3486:347::-;3537:8;3547:6;3601:3;3594:4;3586:6;3582:17;3578:27;3568:55;;3619:1;3616;3609:12;3568:55;-1:-1:-1;3642:20:46;;-1:-1:-1;;;;;3674:30:46;;3671:50;;;3717:1;3714;3707:12;3671:50;3754:4;3746:6;3742:17;3730:29;;3806:3;3799:4;3790:6;3782;3778:19;3774:30;3771:39;3768:59;;;3823:1;3820;3813:12;3768:59;3486:347;;;;;:::o;3838:476::-;3916:6;3924;3932;3985:2;3973:9;3964:7;3960:23;3956:32;3953:52;;;4001:1;3998;3991:12;3953:52;4041:9;4028:23;-1:-1:-1;;;;;4066:6:46;4063:30;4060:50;;;4106:1;4103;4096:12;4060:50;4145:58;4195:7;4186:6;4175:9;4171:22;4145:58;:::i;:::-;4222:8;;4119:84;;-1:-1:-1;4304:2:46;4289:18;;;;4276:32;;3838:476;-1:-1:-1;;;;3838:476:46:o;4415:250::-;4500:1;4510:113;4524:6;4521:1;4518:13;4510:113;;;4600:11;;;4594:18;4581:11;;;4574:39;4546:2;4539:10;4510:113;;;-1:-1:-1;;4657:1:46;4639:16;;4632:27;4415:250::o;4670:270::-;4711:3;4749:5;4743:12;4776:6;4771:3;4764:19;4792:76;4861:6;4854:4;4849:3;4845:14;4838:4;4831:5;4827:16;4792:76;:::i;:::-;4922:2;4901:15;-1:-1:-1;;4897:29:46;4888:39;;;;4929:4;4884:50;;4670:270;-1:-1:-1;;4670:270:46:o;4945:298::-;5128:6;5121:14;5114:22;5103:9;5096:41;5173:2;5168;5157:9;5153:18;5146:30;5077:4;5193:44;5233:2;5222:9;5218:18;5210:6;5193:44;:::i;:::-;5185:52;4945:298;-1:-1:-1;;;;4945:298:46:o;5248:314::-;5315:6;5323;5376:2;5364:9;5355:7;5351:23;5347:32;5344:52;;;5392:1;5389;5382:12;5344:52;5431:9;5418:23;5450:31;5475:5;5450:31;:::i;:::-;5500:5;5552:2;5537:18;;;;5524:32;;-1:-1:-1;;;5248:314:46:o;6124:600::-;6222:6;6230;6283:2;6271:9;6262:7;6258:23;6254:32;6251:52;;;6299:1;6296;6289:12;6251:52;6339:9;6326:23;-1:-1:-1;;;;;6409:2:46;6401:6;6398:14;6395:34;;;6425:1;6422;6415:12;6395:34;6448:22;;;;6504:3;6486:16;;;6482:26;6479:46;;;6521:1;6518;6511:12;6479:46;6544:2;;-1:-1:-1;6599:2:46;6584:18;;6571:32;;6615:16;;;6612:36;;;6644:1;6641;6634:12;6612:36;;6667:51;6710:7;6699:8;6688:9;6684:24;6667:51;:::i;:::-;6657:61;;;6124:600;;;;;:::o;6729:1237::-;6877:6;6885;6893;6901;6909;6917;6925;6933;6941;6994:3;6982:9;6973:7;6969:23;6965:33;6962:53;;;7011:1;7008;7001:12;6962:53;7047:9;7034:23;7024:33;;7107:2;7096:9;7092:18;7079:32;7120:31;7145:5;7120:31;:::i;:::-;7170:5;-1:-1:-1;7222:2:46;7207:18;;7194:32;;-1:-1:-1;7278:2:46;7263:18;;7250:32;7291:33;7250:32;7291:33;:::i;:::-;7343:7;-1:-1:-1;7402:3:46;7387:19;;7374:33;7416;7374;7416;:::i;:::-;7468:7;-1:-1:-1;7527:3:46;7512:19;;7499:33;7541;7499;7541;:::i;:::-;7593:7;-1:-1:-1;7652:3:46;7637:19;;7624:33;7666;7624;7666;:::i;:::-;7718:7;-1:-1:-1;7772:3:46;7757:19;;7744:33;;-1:-1:-1;7828:3:46;7813:19;;7800:33;-1:-1:-1;;;;;7845:30:46;;7842:50;;;7888:1;7885;7878:12;7842:50;7911:49;7952:7;7943:6;7932:9;7928:22;7911:49;:::i;:::-;7901:59;;;6729:1237;;;;;;;;;;;:::o;7971:409::-;8041:6;8049;8102:2;8090:9;8081:7;8077:23;8073:32;8070:52;;;8118:1;8115;8108:12;8070:52;8158:9;8145:23;-1:-1:-1;;;;;8183:6:46;8180:30;8177:50;;;8223:1;8220;8213:12;8177:50;8262:58;8312:7;8303:6;8292:9;8288:22;8262:58;:::i;:::-;8339:8;;8236:84;;-1:-1:-1;7971:409:46;-1:-1:-1;;;;7971:409:46:o;8385:388::-;8453:6;8461;8514:2;8502:9;8493:7;8489:23;8485:32;8482:52;;;8530:1;8527;8520:12;8482:52;8569:9;8556:23;8588:31;8613:5;8588:31;:::i;:::-;8638:5;-1:-1:-1;8695:2:46;8680:18;;8667:32;8708:33;8667:32;8708:33;:::i;:::-;8760:7;8750:17;;;8385:388;;;;;:::o;8778:805::-;9084:4;9113:3;9152:1;9148;9143:3;9139:11;9135:19;9193:2;9185:6;9181:15;9170:9;9163:34;9245:2;9237:6;9233:15;9228:2;9217:9;9213:18;9206:43;9297:2;9289:6;9285:15;9280:2;9269:9;9265:18;9258:43;;9337:6;9332:2;9321:9;9317:18;9310:34;9381:6;9375:3;9364:9;9360:19;9353:35;9425:6;9419:3;9408:9;9404:19;9397:35;9469:6;9463:3;9452:9;9448:19;9441:35;9513:2;9507:3;9496:9;9492:19;9485:31;9533:44;9573:2;9562:9;9558:18;9550:6;9533:44;:::i;:::-;9525:52;8778:805;-1:-1:-1;;;;;;;;;;;8778:805:46:o;9588:594::-;9683:6;9691;9699;9707;9715;9768:3;9756:9;9747:7;9743:23;9739:33;9736:53;;;9785:1;9782;9775:12;9736:53;9824:9;9811:23;9843:31;9868:5;9843:31;:::i;:::-;9893:5;-1:-1:-1;9950:2:46;9935:18;;9922:32;9963:33;9922:32;9963:33;:::i;:::-;9588:594;;10015:7;;-1:-1:-1;;;;10069:2:46;10054:18;;10041:32;;10120:2;10105:18;;10092:32;;10171:3;10156:19;;;10143:33;;-1:-1:-1;9588:594:46:o;10187:615::-;10273:6;10281;10334:2;10322:9;10313:7;10309:23;10305:32;10302:52;;;10350:1;10347;10340:12;10302:52;10390:9;10377:23;-1:-1:-1;;;;;10460:2:46;10452:6;10449:14;10446:34;;;10476:1;10473;10466:12;10446:34;10514:6;10503:9;10499:22;10489:32;;10559:7;10552:4;10548:2;10544:13;10540:27;10530:55;;10581:1;10578;10571:12;10530:55;10621:2;10608:16;10647:2;10639:6;10636:14;10633:34;;;10663:1;10660;10653:12;10633:34;10716:7;10711:2;10701:6;10698:1;10694:14;10690:2;10686:23;10682:32;10679:45;10676:65;;;10737:1;10734;10727:12;10676:65;10768:2;10760:11;;;;;10790:6;;-1:-1:-1;10187:615:46;;-1:-1:-1;;;;10187:615:46:o;10807:807::-;10911:6;10919;10927;10935;10943;10996:3;10984:9;10975:7;10971:23;10967:33;10964:53;;;11013:1;11010;11003:12;10964:53;11053:9;11040:23;-1:-1:-1;;;;;11078:6:46;11075:30;11072:50;;;11118:1;11115;11108:12;11072:50;11141:49;11182:7;11173:6;11162:9;11158:22;11141:49;:::i;:::-;11131:59;;;11237:2;11226:9;11222:18;11209:32;11199:42;;11291:2;11280:9;11276:18;11263:32;11304:31;11329:5;11304:31;:::i;:::-;11354:5;-1:-1:-1;11411:2:46;11396:18;;11383:32;11424:33;11383:32;11424:33;:::i;:::-;11476:7;-1:-1:-1;11535:3:46;11520:19;;11507:33;11549;11507;11549;:::i;:::-;11601:7;11591:17;;;10807:807;;;;;;;;:::o;11619:320::-;11687:6;11740:2;11728:9;11719:7;11715:23;11711:32;11708:52;;;11756:1;11753;11746:12;11708:52;11796:9;11783:23;-1:-1:-1;;;;;11821:6:46;11818:30;11815:50;;;11861:1;11858;11851:12;11815:50;11884:49;11925:7;11916:6;11905:9;11901:22;11884:49;:::i;11944:461::-;11997:3;12035:5;12029:12;12062:6;12057:3;12050:19;12088:4;12117:2;12112:3;12108:12;12101:19;;12154:2;12147:5;12143:14;12175:1;12185:195;12199:6;12196:1;12193:13;12185:195;;;12264:13;;-1:-1:-1;;;;;12260:39:46;12248:52;;12320:12;;;;12355:15;;;;12296:1;12214:9;12185:195;;;-1:-1:-1;12396:3:46;;11944:461;-1:-1:-1;;;;;11944:461:46:o;12410:355::-;12502:5;12525:1;12535:224;12549:4;12546:1;12543:11;12535:224;;;12615:13;;-1:-1:-1;;;;;;12611:40:46;12599:53;;12675:4;12699:12;;;;12734:15;;;;12569:4;12562:12;12535:224;;;12539:3;;12410:355;;:::o;12770:1237::-;13132:4;13162:9;13219:6;13132:4;13253:194;13267:4;13264:1;13261:11;13253:194;;;13326:13;;13314:26;;13363:4;13387:12;;;;13422:15;;;;13287:1;13280:9;13253:194;;;13257:3;;;13484:2;13473:9;13469:18;13535:6;13561:1;13571:255;13587:1;13582:3;13579:10;13571:255;;;13653:15;;-1:-1:-1;;;;;;13649:61:46;13635:76;;13734:4;13760:14;;;;13799:17;;;;13608:1;13599:11;13571:255;;;13575:3;;;13862;13857:2;13846:9;13842:18;13835:31;13883:57;13935:3;13924:9;13920:19;13912:6;13883:57;:::i;:::-;13875:65;;13949:52;13996:3;13985:9;13981:19;13973:6;13949:52;:::i;:::-;12770:1237;;;;;;;:::o;14012:219::-;14161:2;14150:9;14143:21;14124:4;14181:44;14221:2;14210:9;14206:18;14198:6;14181:44;:::i;14418:663::-;14522:6;14530;14538;14546;14554;14562;14615:3;14603:9;14594:7;14590:23;14586:33;14583:53;;;14632:1;14629;14622:12;14583:53;14668:9;14655:23;14645:33;;14728:2;14717:9;14713:18;14700:32;14741:31;14766:5;14741:31;:::i;:::-;14791:5;-1:-1:-1;14848:2:46;14833:18;;14820:32;14861:33;14820:32;14861:33;:::i;:::-;14418:663;;;;-1:-1:-1;14913:7:46;;14967:2;14952:18;;14939:32;;-1:-1:-1;15018:3:46;15003:19;;14990:33;;15070:3;15055:19;;;15042:33;;-1:-1:-1;14418:663:46;-1:-1:-1;;14418:663:46:o;15086:173::-;15153:20;;-1:-1:-1;;;;;;15202:32:46;;15192:43;;15182:71;;15249:1;15246;15239:12;15264:1362;15374:6;15382;15390;15398;15451:3;15439:9;15430:7;15426:23;15422:33;15419:53;;;15468:1;15465;15458:12;15419:53;15491:23;;;-1:-1:-1;15533:2:46;15570:18;;;15557:32;-1:-1:-1;;;;;;15618:51:46;;15608:62;;15598:90;;15684:1;15681;15674:12;15598:90;15707:5;-1:-1:-1;15763:2:46;15748:18;;15735:32;-1:-1:-1;;;;;15816:14:46;;;15813:34;;;15843:1;15840;15833:12;15813:34;15881:6;15870:9;15866:22;15856:32;;15926:7;15919:4;15915:2;15911:13;15907:27;15897:55;;15948:1;15945;15938:12;15897:55;15984:2;15971:16;16006:2;16002;15999:10;15996:36;;;16012:18;;:::i;:::-;16058:2;16055:1;16051:10;16041:20;;16081:28;16105:2;16101;16097:11;16081:28;:::i;:::-;16143:15;;;16213:11;;;16209:20;;;16174:12;;;;16241:19;;;16238:39;;;16273:1;16270;16263:12;16238:39;16297:11;;;;16317:223;16333:6;16328:3;16325:15;16317:223;;;16415:3;16402:17;16387:32;;16432:33;16457:7;16432:33;:::i;:::-;16478:20;;;16350:12;;;;16518;;;;16317:223;;;16559:5;16549:15;;;;;;;;16583:37;16616:2;16605:9;16601:18;16583:37;:::i;:::-;16573:47;;15264:1362;;;;;;;:::o;17245:273::-;17301:6;17354:2;17342:9;17333:7;17329:23;17325:32;17322:52;;;17370:1;17367;17360:12;17322:52;17409:9;17396:23;17462:5;17455:13;17448:21;17441:5;17438:32;17428:60;;17484:1;17481;17474:12;17758:952;17860:6;17868;17876;17884;17892;17900;17953:3;17941:9;17932:7;17928:23;17924:33;17921:53;;;17970:1;17967;17960:12;17921:53;18009:9;17996:23;18028:31;18053:5;18028:31;:::i;:::-;18078:5;-1:-1:-1;18135:2:46;18120:18;;18107:32;18183:10;18170:24;;18158:37;;18148:65;;18209:1;18206;18199:12;18148:65;18232:7;-1:-1:-1;18286:2:46;18271:18;;18258:32;;-1:-1:-1;18342:2:46;18327:18;;18314:32;-1:-1:-1;;;;;18377:32:46;;18365:45;;18355:73;;18424:1;18421;18414:12;18355:73;18447:7;-1:-1:-1;18506:3:46;18491:19;;18478:33;18520;18478;18520;:::i;:::-;18572:7;-1:-1:-1;18631:3:46;18616:19;;18603:33;18645;18603;18645;:::i;:::-;18697:7;18687:17;;;17758:952;;;;;;;;:::o;18715:598::-;18801:6;18809;18817;18825;18878:3;18866:9;18857:7;18853:23;18849:33;18846:53;;;18895:1;18892;18885:12;18846:53;18934:9;18921:23;18953:31;18978:5;18953:31;:::i;:::-;19003:5;-1:-1:-1;19060:2:46;19045:18;;19032:32;19073:33;19032:32;19073:33;:::i;:::-;19125:7;-1:-1:-1;19184:2:46;19169:18;;19156:32;19197:33;19156:32;19197:33;:::i;:::-;18715:598;;;;-1:-1:-1;19249:7:46;;19303:2;19288:18;19275:32;;-1:-1:-1;;18715:598:46:o;19318:802::-;19480:4;19509:2;19549;19538:9;19534:18;19579:2;19568:9;19561:21;19602:6;19637;19631:13;19668:6;19660;19653:22;19706:2;19695:9;19691:18;19684:25;;19768:2;19758:6;19755:1;19751:14;19740:9;19736:30;19732:39;19718:53;;19806:2;19798:6;19794:15;19827:1;19837:254;19851:6;19848:1;19845:13;19837:254;;;19944:2;19940:7;19928:9;19920:6;19916:22;19912:36;19907:3;19900:49;19972:39;20004:6;19995;19989:13;19972:39;:::i;:::-;19962:49;-1:-1:-1;20069:12:46;;;;20034:15;;;;19873:1;19866:9;19837:254;;;-1:-1:-1;20108:6:46;;19318:802;-1:-1:-1;;;;;;;19318:802:46:o;20322:127::-;20383:10;20378:3;20374:20;20371:1;20364:31;20414:4;20411:1;20404:15;20438:4;20435:1;20428:15;20586:127;20647:10;20642:3;20638:20;20635:1;20628:31;20678:4;20675:1;20668:15;20702:4;20699:1;20692:15;20718:217;20758:1;20784;20774:132;;20828:10;20823:3;20819:20;20816:1;20809:31;20863:4;20860:1;20853:15;20891:4;20888:1;20881:15;20774:132;-1:-1:-1;20920:9:46;;20718:217::o;20940:380::-;21019:1;21015:12;;;;21062;;;21083:61;;21137:4;21129:6;21125:17;21115:27;;21083:61;21190:2;21182:6;21179:14;21159:18;21156:38;21153:161;;21236:10;21231:3;21227:20;21224:1;21217:31;21271:4;21268:1;21261:15;21299:4;21296:1;21289:15;21153:161;;20940:380;;;:::o;21578:135::-;21617:3;21638:17;;;21635:43;;21658:18;;:::i;:::-;-1:-1:-1;21705:1:46;21694:13;;21578:135::o;21843:544::-;21944:2;21939:3;21936:11;21933:448;;;21980:1;22005:5;22001:2;21994:17;22050:4;22046:2;22036:19;22120:2;22108:10;22104:19;22101:1;22097:27;22091:4;22087:38;22156:4;22144:10;22141:20;22138:47;;;-1:-1:-1;22179:4:46;22138:47;22234:2;22229:3;22225:12;22222:1;22218:20;22212:4;22208:31;22198:41;;22289:82;22307:2;22300:5;22297:13;22289:82;;;22352:17;;;22333:1;22322:13;22289:82;;;22293:3;;;21843:544;;;:::o;22563:1348::-;22687:3;22681:10;-1:-1:-1;;;;;22706:6:46;22703:30;22700:56;;;22736:18;;:::i;:::-;22765:96;22854:6;22814:38;22846:4;22840:11;22814:38;:::i;:::-;22808:4;22765:96;:::i;:::-;22916:4;;22980:2;22969:14;;22997:1;22992:662;;;;23698:1;23715:6;23712:89;;;-1:-1:-1;23767:19:46;;;23761:26;23712:89;-1:-1:-1;;22520:1:46;22516:11;;;22512:24;22508:29;22498:40;22544:1;22540:11;;;22495:57;23814:81;;22962:943;;22992:662;21790:1;21783:14;;;21827:4;21814:18;;-1:-1:-1;;23028:20:46;;;23145:236;23159:7;23156:1;23153:14;23145:236;;;23248:19;;;23242:26;23227:42;;23340:27;;;;23308:1;23296:14;;;;23175:19;;23145:236;;;23149:3;23409:6;23400:7;23397:19;23394:201;;;23470:19;;;23464:26;-1:-1:-1;;23553:1:46;23549:14;;;23565:3;23545:24;23541:37;23537:42;23522:58;23507:74;;23394:201;-1:-1:-1;;;;;23641:1:46;23625:14;;;23621:22;23608:36;;-1:-1:-1;22563:1348:46:o;23916:377::-;24109:2;24098:9;24091:21;24072:4;24135:44;24175:2;24164:9;24160:18;24152:6;24135:44;:::i;:::-;24227:9;24219:6;24215:22;24210:2;24199:9;24195:18;24188:50;24255:32;24280:6;24272;24255:32;:::i;24298:545::-;24391:4;24397:6;24457:11;24444:25;24551:2;24547:7;24536:8;24520:14;24516:29;24512:43;24492:18;24488:68;24478:96;;24570:1;24567;24560:12;24478:96;24597:33;;24649:20;;;-1:-1:-1;;;;;;24681:30:46;;24678:50;;;24724:1;24721;24714:12;24678:50;24757:4;24745:17;;-1:-1:-1;24808:1:46;24804:14;;;24788;24784:35;24774:46;;24771:66;;;24833:1;24830;24823:12;25101:772;25151:3;25192:5;25186:12;25221:36;25247:9;25221:36;:::i;:::-;25266:19;;;25304:4;25327:1;25344:18;;;25371:146;;;;25531:1;25526:341;;;;25337:530;;25371:146;-1:-1:-1;;25413:24:46;;25399:12;;;25392:46;25485:14;;25478:22;25475:1;25471:30;25462:40;;25458:49;;;-1:-1:-1;25371:146:46;;25526:341;25557:5;25554:1;25547:16;25604:2;25601:1;25591:16;25629:1;25643:174;25657:6;25654:1;25651:13;25643:174;;;25744:14;;25726:11;;;25722:20;;25715:44;25787:16;;;;25672:10;;25643:174;;;25841:11;;25837:20;;;-1:-1:-1;;25337:530:46;;;;;;25101:772;;;;:::o;25878:2177::-;26264:4;26293:3;26323:6;26312:9;26305:25;26349:2;26387;26382;26371:9;26367:18;26360:30;26413:53;26462:2;26451:9;26447:18;26439:6;26413:53;:::i;:::-;26485:2;26535:9;26527:6;26523:22;26518:2;26507:9;26503:18;26496:50;26569:41;26603:6;26595;26569:41;:::i;:::-;26555:55;;26629:2;26667:1;26663;26658:3;26654:11;26650:19;26717:2;26709:6;26705:15;26700:2;26689:9;26685:18;26678:43;26740:3;26779:6;26774:2;26763:9;26759:18;26752:34;26805:3;26856:9;26848:6;26844:22;26839:2;26828:9;26824:18;26817:50;26887:6;26922;26916:13;26953:6;26945;26938:22;26988:2;26980:6;26976:15;26969:22;;27047:2;27037:6;27034:1;27030:14;27022:6;27018:27;27014:36;27085:2;27077:6;27073:15;27106:1;27116:910;27130:6;27127:1;27124:13;27116:910;;;-1:-1:-1;;27195:19:46;;;27191:33;27179:46;;27248:13;;27320:9;;27316:18;;27301:34;;27382:11;;;27376:18;27372:27;;27355:15;;;27348:52;27447:11;;;27441:18;27437:27;;27420:15;;;27413:52;27504:11;;;27498:18;-1:-1:-1;;;;;80:31:46;27562:15;;;68:44;27621:11;;;27615:18;27598:15;;;27591:43;27675:11;;;27669:18;27284:4;27707:15;;;27700:27;;;27284:4;27754:49;27787:15;;;27669:18;27754:49;:::i;:::-;27740:63;;;27852:2;27848;27844:11;27838:18;27816:40;;27869:48;27913:2;27905:6;27901:15;27885:14;4389:13;4382:21;4370:34;;4319:91;27869:48;28004:12;;;;27940:6;-1:-1:-1;;27969:15:46;;;;27152:1;27145:9;27116:910;;;27120:3;;28043:6;28035:14;;;;;;;;;;;;;25878:2177;;;;;;;;;:::o;28449:248::-;28517:6;28525;28578:2;28566:9;28557:7;28553:23;28549:32;28546:52;;;28594:1;28591;28584:12;28546:52;-1:-1:-1;;28617:23:46;;;28687:2;28672:18;;;28659:32;;-1:-1:-1;28449:248:46:o;28702:125::-;28767:9;;;28788:10;;;28785:36;;;28801:18;;:::i;31040:398::-;31242:2;31224:21;;;31281:2;31261:18;;;31254:30;31320:34;31315:2;31300:18;;31293:62;-1:-1:-1;;;31386:2:46;31371:18;;31364:32;31428:3;31413:19;;31040:398::o;31800:403::-;32002:2;31984:21;;;32041:2;32021:18;;;32014:30;32080:34;32075:2;32060:18;;32053:62;-1:-1:-1;;;32146:2:46;32131:18;;32124:37;32193:3;32178:19;;31800:403::o;32208:1005::-;32427:2;32409:21;;;32508:13;;-1:-1:-1;;;;;32504:22:46;;;32484:18;;;32477:50;32585:4;32573:17;;32567:24;32563:33;32558:2;32543:18;;32536:61;32632:15;;32626:22;32390:4;;32657:53;32705:3;32690:19;;32626:22;-1:-1:-1;;;;;80:31:46;68:44;;14:104;32657:53;;32765:2;32757:6;32753:15;32747:22;32741:3;32730:9;32726:19;32719:51;32825:3;32817:6;32813:16;32807:23;32801:3;32790:9;32786:19;32779:52;32886:3;32878:6;32874:16;32868:23;32862:3;32851:9;32847:19;32840:52;32929:3;32921:6;32917:16;32911:23;32953:6;32995:2;32990;32979:9;32975:18;32968:30;33047:3;33039:6;33035:16;33029:23;33007:45;;33089:2;33083:3;33072:9;33068:19;33061:31;;33109:53;33157:3;33146:9;33142:19;33126:14;33109:53;:::i;:::-;33101:61;;;33200:6;33193:4;33182:9;33178:20;33171:36;32208:1005;;;;;:::o;33218:128::-;33285:9;;;33306:11;;;33303:37;;;33320:18;;:::i;34538:1116::-;34758:2;34747:9;34740:21;34770:97;34863:2;34852:9;34848:18;34789:57;34838:6;34832:13;-1:-1:-1;;;;;34491:36:46;;34395:138;34789:57;-1:-1:-1;;;;;80:31:46;68:44;;14:104;34770:97;34721:4;34896:68;34957:4;34949:6;34945:17;34939:24;-1:-1:-1;;;;;34491:36:46;;34395:138;34896:68;-1:-1:-1;;;;;80:31:46;;;35021:2;35006:18;;68:44;35117:4;35105:17;;35099:24;34491:36;35183:3;35168:19;;68:44;35243:4;35231:17;;35225:24;35219:3;35204:19;;35197:53;35305:4;35293:17;;35287:24;35281:3;35266:19;;35259:53;35367:4;35355:17;;35349:24;35343:3;35328:19;;35321:53;35411:4;35399:17;;35393:24;35436:6;35458:18;;;35451:30;;;;35512:3;35497:19;;35490:31;35538:65;35598:3;35583:19;;35576:4;35564:17;;35538:65;:::i;:::-;35530:73;;35641:6;35634:4;35623:9;35619:20;35612:36;34538:1116;;;;;:::o;36010:383::-;36167:3;36205:6;36199:13;36221:66;36280:6;36275:3;36268:4;36260:6;36256:17;36221:66;:::i;:::-;36309:16;;;;36334:21;;;-1:-1:-1;36382:4:46;36371:16;;36010:383;-1:-1:-1;36010:383:46:o;36398:403::-;36555:3;36593:6;36587:13;36609:66;36668:6;36663:3;36656:4;36648:6;36644:17;36609:66;:::i;:::-;-1:-1:-1;;36736:28:46;;;;36697:16;;;;36722:43;;;36792:2;36781:14;;36398:403;-1:-1:-1;;36398:403:46:o;37134:297::-;37252:12;;37299:4;37288:16;;;37282:23;;37252:12;37317:16;;37314:111;;;-1:-1:-1;;37391:4:46;37387:17;;;;37384:1;37380:25;37376:38;37365:50;;37134:297;-1:-1:-1;37134:297:46:o;37735:780::-;38109:10;38104:3;38100:20;38092:6;38088:33;38083:3;38076:46;38151:6;38147:1;38142:3;38138:11;38131:27;38188:6;38183:2;38178:3;38174:12;38167:28;38225:6;38220:2;38215:3;38211:12;38204:28;38263:6;38257:3;38252;38248:13;38241:29;38301:6;38295:3;38290;38286:13;38279:29;38339:6;38333:3;38328;38324:13;38317:29;38058:3;38375:6;38369:13;38391:76;38460:6;38454:3;38449;38445:13;38438:4;38430:6;38426:17;38391:76;:::i;:::-;38487:16;;;;38505:3;38483:26;;37735:780;-1:-1:-1;;;;;;;;;37735:780:46:o;39464:168::-;39537:9;;;39568;;39585:15;;;39579:22;;39565:37;39555:71;;39606:18;;:::i;39989:127::-;40050:10;40045:3;40041:20;40038:1;40031:31;40081:4;40078:1;40071:15;40105:4;40102:1;40095:15",
    "linkReferences": {},
    "immutableReferences": {
      "32882": [
        {
          "start": 1986,
          "length": 32
        }
      ],
      "35048": [
        {
          "start": 950,
          "length": 32
        },
        {
          "start": 8328,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ConcatCalldata(uint256,bytes16,address[],bytes4)": "8ee8306b",
    "_batchQuery(int256)": "0b790986",
    "_mapAddresses(address[])": "cdbd3759",
    "acceptOwnership()": "79ba5097",
    "addressMappinglength()": "d1636095",
    "addressToBytes32(address)": "82c947b7",
    "bytes32tobytes4(bytes32)": "b39ef9c8",
    "checkLog((uint256,uint256,bytes32,uint256,bytes32,address,bytes32[],bytes),bytes)": "40691db4",
    "checkUpkeep(bytes,int256)": "21d1fdd0",
    "createStrategy(address,address,uint256,uint256,uint256)": "549e2b7f",
    "donID()": "6e74336b",
    "fulfillRequest(bytes32,bytes,bytes)": "39b05122",
    "gasLimit()": "f68016b7",
    "generateArgForRequest(address,address,address,uint256)": "de8ce1bd",
    "genericSwapFacet()": "ceff496d",
    "getChainlinkDataFeedLatestAnswer(address,int256)": "289e5bb9",
    "handleOracleFulfillment(bytes32,bytes,bytes)": "0ca76175",
    "init(address,uint32,bytes32,uint64,address,address)": "d201b264",
    "integrator()": "fc2f7cff",
    "isInitialized()": "392e53cd",
    "isPaused()": "b187bd26",
    "lifiDiamond()": "2bd16c8f",
    "mapAddresses(address[])": "5591ddc6",
    "owner()": "8da5cb5b",
    "performUpkeep(bytes)": "4585e33b",
    "readResponseAndSwap(bytes,uint256,address,address,address)": "57fa4508",
    "referrer()": "68447c93",
    "removeStrategy(uint256)": "c0cbbca6",
    "requestsIds(bytes32)": "b21ca099",
    "reseizeDecimals(int256)": "0e372ff0",
    "s_usersStrategies(uint256)": "4f8391bc",
    "s_usersStrategiesLength()": "65170a47",
    "sendRequest(uint256)": "31e70508",
    "setPause(bool)": "bedb86fb",
    "setUpkeepForwarders(address,address)": "4ce3fa52",
    "strategyIndex()": "e6446373",
    "subscriptionId()": "09c1ba2e",
    "swap(bytes32,address,uint256,address,address,address,address,uint256,bytes)": "4506fd26",
    "tokenAllowed(address)": "55219d5a",
    "tokenIndexes(address)": "04bc3b1c",
    "transferOwnership(address)": "f2fde38b",
    "uintToBytes32(uint256)": "886d3db9",
    "uintToString(uint256)": "e9395679",
    "unpackBytes(bytes)": "5e92e692",
    "upgradeStrategy(uint256,address,address,uint256,uint256,uint256)": "71bdb5de",
    "upkeepContract1()": "a854af2c",
    "upkeepContract2()": "52f61f41",
    "usdcAddress()": "02d45457"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EmptyArgs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySource\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"automationRegistry\",\"type\":\"address\"}],\"name\":\"NotAllowedCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyRouterCanFulfill\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextExecution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"lastResponse\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct ILighterFi.UserStrategy\",\"name\":\"userStrategy\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyIndex\",\"type\":\"uint256\"}],\"name\":\"NewUserStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyIndex\",\"type\":\"uint256\"}],\"name\":\"RemovedUserStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyIndex\",\"type\":\"uint256\"}],\"name\":\"RequestReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"Response\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"SwapExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextExecution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"lastResponse\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct ILighterFi.UserStrategy\",\"name\":\"userStrategy\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategyIndex\",\"type\":\"uint256\"}],\"name\":\"UpdatedUserStrategy\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"bytes16\",\"name\":\"minAmount\",\"type\":\"bytes16\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"bytes4\",\"name\":\"routerSelector\",\"type\":\"bytes4\"}],\"name\":\"ConcatCalldata\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"fuzz\",\"type\":\"int256\"}],\"name\":\"_batchQuery\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"_mapAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressMappinglength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addressToBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"b32\",\"type\":\"bytes32\"}],\"name\":\"bytes32tobytes4\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Log\",\"name\":\"log\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkLog\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"fuzz\",\"type\":\"int256\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenInAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"createStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"fulfillRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"generateArgForRequest\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"genericSwapFacet\",\"outputs\":[{\"internalType\":\"contract IGenericSwapFacet\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feedAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"}],\"name\":\"getChainlinkDataFeedLatestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"handleOracleFulfillment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_gasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_donID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_upkeepContract1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_upkeepContract2\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"integrator\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lifiDiamond\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"mapAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenTo\",\"type\":\"address\"}],\"name\":\"readResponseAndSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referrer\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"removeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"requestsIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"name\":\"reseizeDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_usersStrategies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextExecution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"lastResponse\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_usersStrategiesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"sendRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_upkeepContract1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_upkeepContract2\",\"type\":\"address\"}],\"name\":\"setUpkeepForwarders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscriptionId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_callTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_approveTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receivingAssetId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fromAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenIndexes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"u256\",\"type\":\"uint256\"}],\"name\":\"uintToBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"uintToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unpackBytes\",\"outputs\":[{\"internalType\":\"bytes32[2]\",\"name\":\"\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes16[1]\",\"name\":\"\",\"type\":\"bytes16[1]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"bytes4[1]\",\"name\":\"\",\"type\":\"bytes4[1]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"upgradeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upkeepContract1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upkeepContract2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ConcatCalldata(uint256,bytes16,address[],bytes4)\":{\"details\":\"Concatenates the input parameters into a calldata structure to input into Swapdata.callData\",\"params\":{\"amountIn\":\"The amount to be processed in the function.\",\"minAmount\":\"The minimum amount specified in the function.\",\"path\":\"An array of addresses representing the token path.\",\"routerSelector\":\"The 4-byte router selector for the function.\"},\"returns\":{\"_0\":\"bytes array containing the concatenated calldata structure. This function combines the provided parameters into a calldata structure suitable for lifi Swapdata.callData. The calldata structure includes the method signature, amountIn, minAmount, constant, contract address, router selector, hops counter, and the dynamically sized path array. The path array is structured as tokenFrom, middleToken1, middleToken2, tokenTo. \"}},\"_batchQuery(int256)\":{\"details\":\"Internal function to batch query price data from multiple data feeds.\",\"returns\":{\"_0\":\"prices An array of price values retrieved from data feeds.\"}},\"_mapAddresses(address[])\":{\"details\":\"Maps unique addresses to their respective indexes in the `tokenIndexes` mapping.\",\"params\":{\"tokenAddresses\":\"An array of Ethereum addresses to be mapped.\"}},\"addressToBytes32(address)\":{\"details\":\"Converts an Ethereum address to a bytes32 representation.\",\"params\":{\"addr\":\"The Ethereum address to be converted.\"},\"returns\":{\"_0\":\"bytes32 representation of the input Ethereum address.\"}},\"bytes32tobytes4(bytes32)\":{\"details\":\"Converts a uint256 value to a bytes32 representation.\",\"params\":{\"b32\":\"The uint256 value to be converted.\"},\"returns\":{\"_0\":\"bytes32 representation of the input uint256 value.\"}},\"checkLog((uint256,uint256,bytes32,uint256,bytes32,address,bytes32[],bytes),bytes)\":{\"details\":\"checkLog function called off-chain by Chainlink Automation infrastructureIt checks if the Response event by fulfillRequest function is emitted in order to perform the actual swap\",\"returns\":{\"performData\":\"The performData parameter triggering the performUpkeep\",\"upkeepNeeded\":\"A boolean indicating whether upkeep is needed.\"}},\"checkUpkeep(bytes,int256)\":{\"details\":\"checkUpkeep function called off-chain by Chainlink Automation infrastructureIt checks for any s_usersStrategies if they are executable (timeCondition, balanceCondition and allowanceCondition)\",\"returns\":{\"performData\":\"The performData parameter triggering the performUpkeep\",\"upkeepNeeded\":\"A boolean indicating whether upkeep is needed.\"}},\"constructor\":{\"details\":\"Constructor to initialize the contract with the specified router address.\",\"params\":{\"_router\":\"Address of the router to use for function calls.\"}},\"createStrategy(address,address,uint256,uint256,uint256)\":{\"details\":\"Create a new user strategy for automated actions.\",\"params\":{\"timeInterval\":\"The time interval between strategy executions, in seconds.\",\"tokenInAmount\":\"The amount of input tokens for the strategy.\",\"tokenTo\":\"The address of the token to receive in the strategy.\"}},\"fulfillRequest(bytes32,bytes,bytes)\":{\"params\":{\"err\":\"Any errors from the Functions request\",\"requestId\":\"The ID of the request to fulfill\",\"response\":\"The HTTP response data\"}},\"generateArgForRequest(address,address,address,uint256)\":{\"details\":\"Generates arguments for a request, converting token and user addresses, and amount to strings.\",\"params\":{\"_tokenFrom\":\"The address of the tokenFrom.\",\"_tokenTo\":\"The address of the tokenTo.\",\"amount\":\"The amount of the token as a uint256.\",\"user\":\"The user's address.\"},\"returns\":{\"_0\":\"An array of strings representing the converted token address, user address, and amount.\"}},\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"details\":\"Either response or error parameter will be set, but never both.\",\"params\":{\"err\":\"Aggregated error either from the request's source code or from the execution pipeline.\",\"requestId\":\"The requestId returned by FunctionsClient.sendRequest().\",\"response\":\"Aggregated response from the request's source code.\"}},\"init(address,uint32,bytes32,uint64,address,address)\":{\"details\":\"Initialize the contract with various parameters.\",\"params\":{\"_donID\":\"ID associated with the contract.\",\"_gasLimit\":\"Gas limit to use for transactions.\",\"_subscriptionId\":\"ID of the subscription.\",\"_upkeepContract1\":\"Address of the first upkeep contract.\",\"_upkeepContract2\":\"Address of the second upkeep contract.\",\"_usdcAddress\":\"Address of the USDC token.\"}},\"performUpkeep(bytes)\":{\"details\":\"performUpkeep function called by Chainlink Automation infrastructure after checkUpkeep and checkLog off-chain checks\",\"params\":{\"performData\":\"the data inputed by Chainlink Automation retrieved by checkUpkeep and checkLog output\"}},\"readResponseAndSwap(bytes,uint256,address,address,address)\":{\"details\":\"Reads the response data and initiates a token swap operation.\",\"params\":{\"amountIn\":\"The amount of tokens to be sent in the swap.\",\"data\":\"The response data containing information about the swap.\",\"receiver\":\"The address to receive the swapped tokens.\",\"tokenFrom\":\"The address of the asset to be sent in the swap.\",\"tokenTo\":\"The address of the asset to be received in the swap. This function unpacks the provided response data using the public `unpackBytes` function. It constructs the path array for the swap operation, including tokenFrom, middleTokens, and tokenTo. The calldata for the swap is then generated using the public `ConcatCalldata` function. Finally, the swap operation is initiated using the public `swap` function, passing relevant parameters.\"}},\"removeStrategy(uint256)\":{\"details\":\"Remove a user strategy at a specified index.\",\"params\":{\"index\":\"The index of the user strategy to be removed.\"}},\"reseizeDecimals(int256)\":{\"details\":\"Internal function to resize price values from 8 to 6 decimals.\",\"params\":{\"price\":\"The price value to be resized.\"},\"returns\":{\"_0\":\"The resized price value.\"}},\"sendRequest(uint256)\":{\"params\":{\"index\":\"the index of the user strategy containing the data to pass to the LIFI API call.\"}},\"setPause(bool)\":{\"details\":\"Set or unset the pause status of the contract.\",\"params\":{\"pause\":\"A boolean value to determine whether to pause or resume the contract.\"},\"returns\":{\"_0\":\"The current pause status after the operation.\"}},\"setUpkeepForwarders(address,address)\":{\"details\":\"Set the addresses of the automation cron contracts.\",\"params\":{\"_upkeepContract1\":\"Address of the first automation cron contract.\",\"_upkeepContract2\":\"Address of the second automation log contract.\"}},\"swap(bytes32,address,uint256,address,address,address,address,uint256,bytes)\":{\"details\":\"Executes LiFI's token swap operation based on provided parameters.\",\"params\":{\"_approveTo\":\"The address to approve token spending (if necessary) before the swap.\",\"_callTo\":\"The target contract to call for the swap.\",\"_calldata\":\"The calldata to be used in the swap function call.\",\"_fromAmount\":\"The amount of tokens to be sent in the swap.\",\"_minAmount\":\"The minimum amount expected to be received from the swap.\",\"_receiver\":\"The address to receive the swapped tokens.\",\"_receivingAssetId\":\"The address of the asset to be received in the swap.\",\"_sendingAssetId\":\"The address of the asset to be sent in the swap.\",\"_transactionId\":\"The unique identifier for the swap transaction.\"}},\"uintToBytes32(uint256)\":{\"details\":\"Converts a uint256 value to a bytes32 representation.\",\"params\":{\"u256\":\"The uint256 value to be converted.\"},\"returns\":{\"_0\":\"bytes32 representation of the input uint256 value.\"}},\"uintToString(uint256)\":{\"details\":\"Converts a uint256 value to a string.\",\"params\":{\"value\":\"The uint256 value to be converted.\"},\"returns\":{\"_0\":\"The uint256 value as a string.\"}},\"unpackBytes(bytes)\":{\"details\":\"Unpacks the provided LiFi byte data from the Chainlink functions call into structured variables.\",\"params\":{\"data\":\"The byte data to be unpacked.\"},\"returns\":{\"_0\":\"properties An array of two 32-byte properties extracted from the input data.\",\"_1\":\"minAmount A single 16-byte minAmount extracted from the input data.\",\"_2\":\"middleTokenDynamic An array of non-zero Ethereum addresses extracted from the input data.\",\"_3\":\"routerSelector A 4-byte router function selector extracted from the input data. The input data must be at least 72 bytes in length. The function extracts information such as transaction ID, minimum amount, router address, router selector, and optional middle path tokens. The extracted middle tokens are dynamically sized based on the number of non-zero addresses present.\"}},\"upgradeStrategy(uint256,address,address,uint256,uint256,uint256)\":{\"details\":\"Upgrade an existing user strategy with new parameters.\",\"params\":{\"amountTokenIn\":\"The new amount of input tokens for the strategy.\",\"index\":\"The index of the user strategy to be upgraded.\",\"timeInterval\":\"The new time interval between strategy executions, in seconds.\",\"tokenTo\":\"The new address of the token to receive in the strategy.\"}}},\"stateVariables\":{\"source\":{\"details\":\"source string for Chainlink Function call\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"checkLog((uint256,uint256,bytes32,uint256,bytes32,address,bytes32[],bytes),bytes)\":{\"notice\":\"This function is external, view, and implements the Upkeep interface.\"},\"checkUpkeep(bytes,int256)\":{\"notice\":\"This function is external, view, and implements the Upkeep interface.\"},\"createStrategy(address,address,uint256,uint256,uint256)\":{\"notice\":\"This function can only be called when the contract is not paused and with valid parameters.\"},\"fulfillRequest(bytes32,bytes,bytes)\":{\"notice\":\"Callback function for fulfilling a request\"},\"generateArgForRequest(address,address,address,uint256)\":{\"notice\":\"This function is internal and pure, meaning it does not modify state and can only be called within the contract.\"},\"getChainlinkDataFeedLatestAnswer(address,int256)\":{\"notice\":\"Returns the latest answer.\"},\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"notice\":\"Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"performUpkeep(bytes)\":{\"notice\":\"This function is external and it's used both to call the sendRequest (to call the LIFI API) and to perform the actual user swap (using the calldata retrieved by the fulfillRequest) \"},\"removeStrategy(uint256)\":{\"notice\":\"Only the user who created the strategy can remove it.\"},\"sendRequest(uint256)\":{\"notice\":\"Sends an HTTP request using Chainlink Functions infrastructure\"},\"setPause(bool)\":{\"notice\":\"Only the contract owner can call this function to toggle the pause status.\"},\"setUpkeepForwarders(address,address)\":{\"notice\":\"Only the contract owner can call this function to update the addresses.\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"},\"uintToString(uint256)\":{\"notice\":\"This function is internal and pure, meaning it does not modify state and can only be called within the contract.\"},\"upgradeStrategy(uint256,address,address,uint256,uint256,uint256)\":{\"notice\":\"Only the user who created the strategy can upgrade it.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mocks/LighterFiMock.sol\":\"LighterFi\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/chainlink/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":std/=lib/forge-std/src/\"]},\"sources\":{\"lib/chainlink/contracts/src/v0.8/automation/interfaces/ILogAutomation.sol\":{\"keccak256\":\"0x6efb298ce2d8d406fa48686a169ea7e50192878e25d3a2f9c102cfdeae340e34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4de346eeefaef7c0655dbb22e7e3d75df163ede488d578f101d70ab03cebc1ec\",\"dweb:/ipfs/QmYVrPMe5GVEUeTEZVFsubNkqXLUjYToNb8jAXfKLsh2Ni\"]},\"lib/chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":{\"keccak256\":\"0xeddc6ac3b2ceaff1e2afac899e8f55b2f53e43f299d4b654566836dea6544e32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5718b02a5defe68505e459cd94dac0ec28acdd1f9a42a1bf4c0d6abd44eacc43\",\"dweb:/ipfs/Qmbm6z5Veck7ghTRgLnoDQYu5q4ytA3a39V4Ff9obitVXN\"]},\"lib/chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":{\"keccak256\":\"0x523c76e2198e42218a5492fd1968fd52e05999e442a0e22f7d0ede05800b0a76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e40065f4956acf248d55aed9c9851d8651dcca1c167d3c96875e2e56494a55dd\",\"dweb:/ipfs/Qma4cgJbShcdFk67Uqyry2K8LBB2QdphtpEj5UWtmyh63U\"]},\"lib/chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":{\"keccak256\":\"0xdc64d1ef4d6741ddad1fc4e7ffb7f2302abe229e890b0e886aa1933635c985eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d674f667058740c6269a6de8519374eb8e3fed7e8e2d58fa7afb2c51a939f962\",\"dweb:/ipfs/QmZcCkhC55kDqLmBYzzHTWrCyKeAWFT8yUdRvfEciNj64G\"]},\"lib/chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"keccak256\":\"0x151d166369f6f57ba409f22c17c2632e56481ad411151ce4d33a1f3347542645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52d1ef3c10748f26c05e638425bfc1953d241310c0b20edc11072137307a7d28\",\"dweb:/ipfs/QmP7pGDzSyBvUWrK1UiMxgcJagssoRqYAZQM7KdLaoKEa3\"]},\"lib/chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0x9c49394a470172761841c217056836239046be1c3228acc824dd854820814347\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b40711fd25560ec805f5ff098ddd344ec5174caab24dc0b6d34b4b25b0b88b6\",\"dweb:/ipfs/QmYsbvhbRikSaR8iknVZqrSZkbwNtHdKUEucBrcjGeS2so\"]},\"lib/chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x345b3f4a2030f0125a17f66794ca8e820a6e32389b957bc62a34afb35f8bb623\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4036ac25eb69a190c9b50369edbd04b8499a2be3c346d1ada2bc417d4226d90c\",\"dweb:/ipfs/QmTPrP7rY8hbj24riuvvXGnnNUPhUyq835KyfLBbhGA1mD\"]},\"lib/chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"lib/chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8\",\"dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG\"]},\"lib/chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39c9937cf45f840cf3a45a83dec3719dbd2f1d71198088db48b909ec656f77dd\",\"dweb:/ipfs/QmQx9mEREaFyJGC2KpqWBqBV712NY8vUBrcqTR4RdVNBiu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"src/interfaces/ILighterFi.sol\":{\"keccak256\":\"0xf7beaed81657fc1e21c73277a615bd1b35eeebda7640ce3069bdb068b49f44a9\",\"urls\":[\"bzz-raw://ccad25c0572cec2c250fa737562138bb5b2c6067414a60afa94abc16b0d08b67\",\"dweb:/ipfs/QmYbw8t2EiGGnVBigV7VEf4WXcRiSiTWycde6PqzVURdf6\"]},\"src/mocks/AutomationCompatibleInterfaceMock.sol\":{\"keccak256\":\"0xf94c0c78bf6b8ecf728e3f951d3aa0444ac15820349ca50efbeeffd0b6573cac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://110834b3ffba6d09500f9aeb62ce7eeda999f71a1dc790dc45319eebab9e6e0b\",\"dweb:/ipfs/QmSnw9xgMw6SuraHp2LwZW6i3gDyHD7uUKufsN97xaZdYm\"]},\"src/mocks/DataConsumerV3.sol\":{\"keccak256\":\"0x042fe9c884aeff3f132bec40afa4f0b1ec5d2c0c24298bd13c5eeb2e6d4a2015\",\"urls\":[\"bzz-raw://710e8372d222a5dbea9a72fb5ecbbe589fc8f2e76bcb04dc24e8d220446f6b98\",\"dweb:/ipfs/QmVW1nCWqPH3JQ5iYEjLfurYe3g5SbFdBGAJoR34W5JGkX\"]},\"src/mocks/FunctionsClientMock.sol\":{\"keccak256\":\"0xa2f7f6b460b277887047cf8c20df11476ad36f3c83879a4a6ccda5ab42480c9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://484a56a58b928afcf97a5c849f8d03be04233b24940a9fa5d59d39c55e855cb3\",\"dweb:/ipfs/QmbB8zHSipmQCiK15Ez16n6Rx2MxALzTHUhGuFDE9W8BMo\"]},\"src/mocks/LighterFiMock.sol\":{\"keccak256\":\"0x733514c0b00b6e5023716167fbba78b11c1184080e8f3ddfb212ed49119dbf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://663be53930af52f0e61f3efc2e7a0b1ce66157763c6a3970c8eb00ae96711f6a\",\"dweb:/ipfs/QmUYaZFdxf4rUxgMzxSyP6YVxmvLNyG2NAbkhiaJRTj7rB\"]},\"src/mocks/Math.sol\":{\"keccak256\":\"0x06058ecd3be8784941eb6952887fcbff8001fea59cb6863d58425a6b91b1a7dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa1fab5af796a3b5657a30bb84f726fe725c045ba4f2e5c3a2ac61c1199b93a4\",\"dweb:/ipfs/QmXT6Arg6uXLAeJx47dLMPyupiGuJuMWueLn1GuR9Vx9Hh\"]},\"src/mocks/SwapperMock.sol\":{\"keccak256\":\"0x78bb9c80592b50cb5460a10d7626667876a89857cf324dfb372f484e871767fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://385b8d4dafc0774991f3d4f8364da68022c6ad0c130862690ab27deba89564a8\",\"dweb:/ipfs/QmSqYCg1M1ib4dvtqggYk2Nx61DLyY7ttskCgD7Yh24DLL\"]},\"src/mocks/UtilsMock.sol\":{\"keccak256\":\"0x59a5378562ec743aebc7eede82df00e626a4836b7da145fb0624d04b70ce5f7f\",\"urls\":[\"bzz-raw://bc50bd9549a038e7058bb66cd7979eff0bc772235dc65c7214892abe170c5b20\",\"dweb:/ipfs/Qmc24zpLa8KiYF8RqxMk5xSaA4wsxwNRfb162jFLEbzbwn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_router",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyArgs"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptySource"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "automationRegistry",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NotAllowedCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyRouterCanFulfill"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct ILighterFi.UserStrategy",
              "name": "userStrategy",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timeInterval",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nextExecution",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "lastResponse",
                  "type": "bytes"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "strategyIndex",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewUserStrategy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "strategyIndex",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemovedUserStrategy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RequestFulfilled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "requestId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "strategyIndex",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RequestReceived",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RequestSent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "requestId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "response",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "err",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Response",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "requestId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "strategyIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwapExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct ILighterFi.UserStrategy",
              "name": "userStrategy",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timeInterval",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nextExecution",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "lastResponse",
                  "type": "bytes"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "strategyIndex",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedUserStrategy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "bytes16",
              "name": "minAmount",
              "type": "bytes16"
            },
            {
              "internalType": "address[]",
              "name": "path",
              "type": "address[]"
            },
            {
              "internalType": "bytes4",
              "name": "routerSelector",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ConcatCalldata",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "fuzz",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "_batchQuery",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tokenAddresses",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_mapAddresses"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "addressMappinglength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "addressToBytes32",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "b32",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "bytes32tobytes4",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Log",
              "name": "log",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "txHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "blockHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "source",
                  "type": "address"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "topics",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "checkLog",
          "outputs": [
            {
              "internalType": "bool",
              "name": "upkeepNeeded",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "performData",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "int256",
              "name": "fuzz",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkUpkeep",
          "outputs": [
            {
              "internalType": "bool",
              "name": "upkeepNeeded",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "performData",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenFrom",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenTo",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeInterval",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenInAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createStrategy"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "donID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "requestId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "response",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "err",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "fulfillRequest"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gasLimit",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenFrom",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_tokenTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "generateArgForRequest",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "genericSwapFacet",
          "outputs": [
            {
              "internalType": "contract IGenericSwapFacet",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feedAddress",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "answer",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getChainlinkDataFeedLatestAnswer",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "requestId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "response",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "err",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "handleOracleFulfillment"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_usdcAddress",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_gasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "_donID",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "_subscriptionId",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "_upkeepContract1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_upkeepContract2",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "integrator",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isInitialized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isPaused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lifiDiamond",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tokenAddresses",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mapAddresses"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "performData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "performUpkeep"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenFrom",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenTo",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "readResponseAndSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "referrer",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeStrategy"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requestsIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "price",
              "type": "int256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "reseizeDecimals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "s_usersStrategies",
          "outputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeInterval",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextExecution",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "lastResponse",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_usersStrategiesLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendRequest"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "pause",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPause",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_upkeepContract1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_upkeepContract2",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUpkeepForwarders"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "subscriptionId",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_transactionId",
              "type": "bytes32"
            },
            {
              "internalType": "address payable",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_callTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_approveTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_sendingAssetId",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_receivingAssetId",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_fromAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenAllowed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenIndexes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "u256",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "uintToBytes32",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "uintToString",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "unpackBytes",
          "outputs": [
            {
              "internalType": "bytes32[2]",
              "name": "",
              "type": "bytes32[2]"
            },
            {
              "internalType": "bytes16[1]",
              "name": "",
              "type": "bytes16[1]"
            },
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "bytes4[1]",
              "name": "",
              "type": "bytes4[1]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenFrom",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenTo",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeInterval",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountTokenIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeStrategy"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "upkeepContract1",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "upkeepContract2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "usdcAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ConcatCalldata(uint256,bytes16,address[],bytes4)": {
            "details": "Concatenates the input parameters into a calldata structure to input into Swapdata.callData",
            "params": {
              "amountIn": "The amount to be processed in the function.",
              "minAmount": "The minimum amount specified in the function.",
              "path": "An array of addresses representing the token path.",
              "routerSelector": "The 4-byte router selector for the function."
            },
            "returns": {
              "_0": "bytes array containing the concatenated calldata structure. This function combines the provided parameters into a calldata structure suitable for lifi Swapdata.callData. The calldata structure includes the method signature, amountIn, minAmount, constant, contract address, router selector, hops counter, and the dynamically sized path array. The path array is structured as tokenFrom, middleToken1, middleToken2, tokenTo. "
            }
          },
          "_batchQuery(int256)": {
            "details": "Internal function to batch query price data from multiple data feeds.",
            "returns": {
              "_0": "prices An array of price values retrieved from data feeds."
            }
          },
          "_mapAddresses(address[])": {
            "details": "Maps unique addresses to their respective indexes in the `tokenIndexes` mapping.",
            "params": {
              "tokenAddresses": "An array of Ethereum addresses to be mapped."
            }
          },
          "addressToBytes32(address)": {
            "details": "Converts an Ethereum address to a bytes32 representation.",
            "params": {
              "addr": "The Ethereum address to be converted."
            },
            "returns": {
              "_0": "bytes32 representation of the input Ethereum address."
            }
          },
          "bytes32tobytes4(bytes32)": {
            "details": "Converts a uint256 value to a bytes32 representation.",
            "params": {
              "b32": "The uint256 value to be converted."
            },
            "returns": {
              "_0": "bytes32 representation of the input uint256 value."
            }
          },
          "checkLog((uint256,uint256,bytes32,uint256,bytes32,address,bytes32[],bytes),bytes)": {
            "details": "checkLog function called off-chain by Chainlink Automation infrastructureIt checks if the Response event by fulfillRequest function is emitted in order to perform the actual swap",
            "returns": {
              "performData": "The performData parameter triggering the performUpkeep",
              "upkeepNeeded": "A boolean indicating whether upkeep is needed."
            }
          },
          "checkUpkeep(bytes,int256)": {
            "details": "checkUpkeep function called off-chain by Chainlink Automation infrastructureIt checks for any s_usersStrategies if they are executable (timeCondition, balanceCondition and allowanceCondition)",
            "returns": {
              "performData": "The performData parameter triggering the performUpkeep",
              "upkeepNeeded": "A boolean indicating whether upkeep is needed."
            }
          },
          "constructor": {
            "details": "Constructor to initialize the contract with the specified router address.",
            "params": {
              "_router": "Address of the router to use for function calls."
            }
          },
          "createStrategy(address,address,uint256,uint256,uint256)": {
            "details": "Create a new user strategy for automated actions.",
            "params": {
              "timeInterval": "The time interval between strategy executions, in seconds.",
              "tokenInAmount": "The amount of input tokens for the strategy.",
              "tokenTo": "The address of the token to receive in the strategy."
            }
          },
          "fulfillRequest(bytes32,bytes,bytes)": {
            "params": {
              "err": "Any errors from the Functions request",
              "requestId": "The ID of the request to fulfill",
              "response": "The HTTP response data"
            }
          },
          "generateArgForRequest(address,address,address,uint256)": {
            "details": "Generates arguments for a request, converting token and user addresses, and amount to strings.",
            "params": {
              "_tokenFrom": "The address of the tokenFrom.",
              "_tokenTo": "The address of the tokenTo.",
              "amount": "The amount of the token as a uint256.",
              "user": "The user's address."
            },
            "returns": {
              "_0": "An array of strings representing the converted token address, user address, and amount."
            }
          },
          "handleOracleFulfillment(bytes32,bytes,bytes)": {
            "details": "Either response or error parameter will be set, but never both.",
            "params": {
              "err": "Aggregated error either from the request's source code or from the execution pipeline.",
              "requestId": "The requestId returned by FunctionsClient.sendRequest().",
              "response": "Aggregated response from the request's source code."
            }
          },
          "init(address,uint32,bytes32,uint64,address,address)": {
            "details": "Initialize the contract with various parameters.",
            "params": {
              "_donID": "ID associated with the contract.",
              "_gasLimit": "Gas limit to use for transactions.",
              "_subscriptionId": "ID of the subscription.",
              "_upkeepContract1": "Address of the first upkeep contract.",
              "_upkeepContract2": "Address of the second upkeep contract.",
              "_usdcAddress": "Address of the USDC token."
            }
          },
          "performUpkeep(bytes)": {
            "details": "performUpkeep function called by Chainlink Automation infrastructure after checkUpkeep and checkLog off-chain checks",
            "params": {
              "performData": "the data inputed by Chainlink Automation retrieved by checkUpkeep and checkLog output"
            }
          },
          "readResponseAndSwap(bytes,uint256,address,address,address)": {
            "details": "Reads the response data and initiates a token swap operation.",
            "params": {
              "amountIn": "The amount of tokens to be sent in the swap.",
              "data": "The response data containing information about the swap.",
              "receiver": "The address to receive the swapped tokens.",
              "tokenFrom": "The address of the asset to be sent in the swap.",
              "tokenTo": "The address of the asset to be received in the swap. This function unpacks the provided response data using the public `unpackBytes` function. It constructs the path array for the swap operation, including tokenFrom, middleTokens, and tokenTo. The calldata for the swap is then generated using the public `ConcatCalldata` function. Finally, the swap operation is initiated using the public `swap` function, passing relevant parameters."
            }
          },
          "removeStrategy(uint256)": {
            "details": "Remove a user strategy at a specified index.",
            "params": {
              "index": "The index of the user strategy to be removed."
            }
          },
          "reseizeDecimals(int256)": {
            "details": "Internal function to resize price values from 8 to 6 decimals.",
            "params": {
              "price": "The price value to be resized."
            },
            "returns": {
              "_0": "The resized price value."
            }
          },
          "sendRequest(uint256)": {
            "params": {
              "index": "the index of the user strategy containing the data to pass to the LIFI API call."
            }
          },
          "setPause(bool)": {
            "details": "Set or unset the pause status of the contract.",
            "params": {
              "pause": "A boolean value to determine whether to pause or resume the contract."
            },
            "returns": {
              "_0": "The current pause status after the operation."
            }
          },
          "setUpkeepForwarders(address,address)": {
            "details": "Set the addresses of the automation cron contracts.",
            "params": {
              "_upkeepContract1": "Address of the first automation cron contract.",
              "_upkeepContract2": "Address of the second automation log contract."
            }
          },
          "swap(bytes32,address,uint256,address,address,address,address,uint256,bytes)": {
            "details": "Executes LiFI's token swap operation based on provided parameters.",
            "params": {
              "_approveTo": "The address to approve token spending (if necessary) before the swap.",
              "_callTo": "The target contract to call for the swap.",
              "_calldata": "The calldata to be used in the swap function call.",
              "_fromAmount": "The amount of tokens to be sent in the swap.",
              "_minAmount": "The minimum amount expected to be received from the swap.",
              "_receiver": "The address to receive the swapped tokens.",
              "_receivingAssetId": "The address of the asset to be received in the swap.",
              "_sendingAssetId": "The address of the asset to be sent in the swap.",
              "_transactionId": "The unique identifier for the swap transaction."
            }
          },
          "uintToBytes32(uint256)": {
            "details": "Converts a uint256 value to a bytes32 representation.",
            "params": {
              "u256": "The uint256 value to be converted."
            },
            "returns": {
              "_0": "bytes32 representation of the input uint256 value."
            }
          },
          "uintToString(uint256)": {
            "details": "Converts a uint256 value to a string.",
            "params": {
              "value": "The uint256 value to be converted."
            },
            "returns": {
              "_0": "The uint256 value as a string."
            }
          },
          "unpackBytes(bytes)": {
            "details": "Unpacks the provided LiFi byte data from the Chainlink functions call into structured variables.",
            "params": {
              "data": "The byte data to be unpacked."
            },
            "returns": {
              "_0": "properties An array of two 32-byte properties extracted from the input data.",
              "_1": "minAmount A single 16-byte minAmount extracted from the input data.",
              "_2": "middleTokenDynamic An array of non-zero Ethereum addresses extracted from the input data.",
              "_3": "routerSelector A 4-byte router function selector extracted from the input data. The input data must be at least 72 bytes in length. The function extracts information such as transaction ID, minimum amount, router address, router selector, and optional middle path tokens. The extracted middle tokens are dynamically sized based on the number of non-zero addresses present."
            }
          },
          "upgradeStrategy(uint256,address,address,uint256,uint256,uint256)": {
            "details": "Upgrade an existing user strategy with new parameters.",
            "params": {
              "amountTokenIn": "The new amount of input tokens for the strategy.",
              "index": "The index of the user strategy to be upgraded.",
              "timeInterval": "The new time interval between strategy executions, in seconds.",
              "tokenTo": "The new address of the token to receive in the strategy."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptOwnership()": {
            "notice": "Allows an ownership transfer to be completed by the recipient."
          },
          "checkLog((uint256,uint256,bytes32,uint256,bytes32,address,bytes32[],bytes),bytes)": {
            "notice": "This function is external, view, and implements the Upkeep interface."
          },
          "checkUpkeep(bytes,int256)": {
            "notice": "This function is external, view, and implements the Upkeep interface."
          },
          "createStrategy(address,address,uint256,uint256,uint256)": {
            "notice": "This function can only be called when the contract is not paused and with valid parameters."
          },
          "fulfillRequest(bytes32,bytes,bytes)": {
            "notice": "Callback function for fulfilling a request"
          },
          "generateArgForRequest(address,address,address,uint256)": {
            "notice": "This function is internal and pure, meaning it does not modify state and can only be called within the contract."
          },
          "getChainlinkDataFeedLatestAnswer(address,int256)": {
            "notice": "Returns the latest answer."
          },
          "handleOracleFulfillment(bytes32,bytes,bytes)": {
            "notice": "Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round."
          },
          "owner()": {
            "notice": "Get the current owner"
          },
          "performUpkeep(bytes)": {
            "notice": "This function is external and it's used both to call the sendRequest (to call the LIFI API) and to perform the actual user swap (using the calldata retrieved by the fulfillRequest) "
          },
          "removeStrategy(uint256)": {
            "notice": "Only the user who created the strategy can remove it."
          },
          "sendRequest(uint256)": {
            "notice": "Sends an HTTP request using Chainlink Functions infrastructure"
          },
          "setPause(bool)": {
            "notice": "Only the contract owner can call this function to toggle the pause status."
          },
          "setUpkeepForwarders(address,address)": {
            "notice": "Only the contract owner can call this function to update the addresses."
          },
          "transferOwnership(address)": {
            "notice": "Allows an owner to begin transferring ownership to a new address, pending."
          },
          "uintToString(uint256)": {
            "notice": "This function is internal and pure, meaning it does not modify state and can only be called within the contract."
          },
          "upgradeStrategy(uint256,address,address,uint256,uint256,uint256)": {
            "notice": "Only the user who created the strategy can upgrade it."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=lib/chainlink/contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":chainlink/=lib/chainlink/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/mocks/LighterFiMock.sol": "LighterFi"
      },
      "libraries": {}
    },
    "sources": {
      "lib/chainlink/contracts/src/v0.8/automation/interfaces/ILogAutomation.sol": {
        "keccak256": "0x6efb298ce2d8d406fa48686a169ea7e50192878e25d3a2f9c102cfdeae340e34",
        "urls": [
          "bzz-raw://4de346eeefaef7c0655dbb22e7e3d75df163ede488d578f101d70ab03cebc1ec",
          "dweb:/ipfs/QmYVrPMe5GVEUeTEZVFsubNkqXLUjYToNb8jAXfKLsh2Ni"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol": {
        "keccak256": "0xeddc6ac3b2ceaff1e2afac899e8f55b2f53e43f299d4b654566836dea6544e32",
        "urls": [
          "bzz-raw://5718b02a5defe68505e459cd94dac0ec28acdd1f9a42a1bf4c0d6abd44eacc43",
          "dweb:/ipfs/Qmbm6z5Veck7ghTRgLnoDQYu5q4ytA3a39V4Ff9obitVXN"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol": {
        "keccak256": "0x523c76e2198e42218a5492fd1968fd52e05999e442a0e22f7d0ede05800b0a76",
        "urls": [
          "bzz-raw://e40065f4956acf248d55aed9c9851d8651dcca1c167d3c96875e2e56494a55dd",
          "dweb:/ipfs/Qma4cgJbShcdFk67Uqyry2K8LBB2QdphtpEj5UWtmyh63U"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol": {
        "keccak256": "0xdc64d1ef4d6741ddad1fc4e7ffb7f2302abe229e890b0e886aa1933635c985eb",
        "urls": [
          "bzz-raw://d674f667058740c6269a6de8519374eb8e3fed7e8e2d58fa7afb2c51a939f962",
          "dweb:/ipfs/QmZcCkhC55kDqLmBYzzHTWrCyKeAWFT8yUdRvfEciNj64G"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol": {
        "keccak256": "0x151d166369f6f57ba409f22c17c2632e56481ad411151ce4d33a1f3347542645",
        "urls": [
          "bzz-raw://52d1ef3c10748f26c05e638425bfc1953d241310c0b20edc11072137307a7d28",
          "dweb:/ipfs/QmP7pGDzSyBvUWrK1UiMxgcJagssoRqYAZQM7KdLaoKEa3"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
        "keccak256": "0x9c49394a470172761841c217056836239046be1c3228acc824dd854820814347",
        "urls": [
          "bzz-raw://5b40711fd25560ec805f5ff098ddd344ec5174caab24dc0b6d34b4b25b0b88b6",
          "dweb:/ipfs/QmYsbvhbRikSaR8iknVZqrSZkbwNtHdKUEucBrcjGeS2so"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
        "keccak256": "0x345b3f4a2030f0125a17f66794ca8e820a6e32389b957bc62a34afb35f8bb623",
        "urls": [
          "bzz-raw://4036ac25eb69a190c9b50369edbd04b8499a2be3c346d1ada2bc417d4226d90c",
          "dweb:/ipfs/QmTPrP7rY8hbj24riuvvXGnnNUPhUyq835KyfLBbhGA1mD"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
        "keccak256": "0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767",
        "urls": [
          "bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921",
          "dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol": {
        "keccak256": "0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0",
        "urls": [
          "bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8",
          "dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG"
        ],
        "license": "BSD-2-Clause"
      },
      "lib/chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol": {
        "keccak256": "0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715",
        "urls": [
          "bzz-raw://39c9937cf45f840cf3a45a83dec3719dbd2f1d71198088db48b909ec656f77dd",
          "dweb:/ipfs/QmQx9mEREaFyJGC2KpqWBqBV712NY8vUBrcqTR4RdVNBiu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILighterFi.sol": {
        "keccak256": "0xf7beaed81657fc1e21c73277a615bd1b35eeebda7640ce3069bdb068b49f44a9",
        "urls": [
          "bzz-raw://ccad25c0572cec2c250fa737562138bb5b2c6067414a60afa94abc16b0d08b67",
          "dweb:/ipfs/QmYbw8t2EiGGnVBigV7VEf4WXcRiSiTWycde6PqzVURdf6"
        ],
        "license": null
      },
      "src/mocks/AutomationCompatibleInterfaceMock.sol": {
        "keccak256": "0xf94c0c78bf6b8ecf728e3f951d3aa0444ac15820349ca50efbeeffd0b6573cac",
        "urls": [
          "bzz-raw://110834b3ffba6d09500f9aeb62ce7eeda999f71a1dc790dc45319eebab9e6e0b",
          "dweb:/ipfs/QmSnw9xgMw6SuraHp2LwZW6i3gDyHD7uUKufsN97xaZdYm"
        ],
        "license": "MIT"
      },
      "src/mocks/DataConsumerV3.sol": {
        "keccak256": "0x042fe9c884aeff3f132bec40afa4f0b1ec5d2c0c24298bd13c5eeb2e6d4a2015",
        "urls": [
          "bzz-raw://710e8372d222a5dbea9a72fb5ecbbe589fc8f2e76bcb04dc24e8d220446f6b98",
          "dweb:/ipfs/QmVW1nCWqPH3JQ5iYEjLfurYe3g5SbFdBGAJoR34W5JGkX"
        ],
        "license": null
      },
      "src/mocks/FunctionsClientMock.sol": {
        "keccak256": "0xa2f7f6b460b277887047cf8c20df11476ad36f3c83879a4a6ccda5ab42480c9f",
        "urls": [
          "bzz-raw://484a56a58b928afcf97a5c849f8d03be04233b24940a9fa5d59d39c55e855cb3",
          "dweb:/ipfs/QmbB8zHSipmQCiK15Ez16n6Rx2MxALzTHUhGuFDE9W8BMo"
        ],
        "license": "MIT"
      },
      "src/mocks/LighterFiMock.sol": {
        "keccak256": "0x733514c0b00b6e5023716167fbba78b11c1184080e8f3ddfb212ed49119dbf87",
        "urls": [
          "bzz-raw://663be53930af52f0e61f3efc2e7a0b1ce66157763c6a3970c8eb00ae96711f6a",
          "dweb:/ipfs/QmUYaZFdxf4rUxgMzxSyP6YVxmvLNyG2NAbkhiaJRTj7rB"
        ],
        "license": "MIT"
      },
      "src/mocks/Math.sol": {
        "keccak256": "0x06058ecd3be8784941eb6952887fcbff8001fea59cb6863d58425a6b91b1a7dd",
        "urls": [
          "bzz-raw://aa1fab5af796a3b5657a30bb84f726fe725c045ba4f2e5c3a2ac61c1199b93a4",
          "dweb:/ipfs/QmXT6Arg6uXLAeJx47dLMPyupiGuJuMWueLn1GuR9Vx9Hh"
        ],
        "license": "MIT"
      },
      "src/mocks/SwapperMock.sol": {
        "keccak256": "0x78bb9c80592b50cb5460a10d7626667876a89857cf324dfb372f484e871767fa",
        "urls": [
          "bzz-raw://385b8d4dafc0774991f3d4f8364da68022c6ad0c130862690ab27deba89564a8",
          "dweb:/ipfs/QmSqYCg1M1ib4dvtqggYk2Nx61DLyY7ttskCgD7Yh24DLL"
        ],
        "license": "MIT"
      },
      "src/mocks/UtilsMock.sol": {
        "keccak256": "0x59a5378562ec743aebc7eede82df00e626a4836b7da145fb0624d04b70ce5f7f",
        "urls": [
          "bzz-raw://bc50bd9549a038e7058bb66cd7979eff0bc772235dc65c7214892abe170c5b20",
          "dweb:/ipfs/Qmc24zpLa8KiYF8RqxMk5xSaA4wsxwNRfb162jFLEbzbwn"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/mocks/LighterFiMock.sol",
    "id": 33950,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        32676
      ],
      "AutomationCompatibleInterface": [
        32660
      ],
      "ConfirmedOwner": [
        730
      ],
      "DataConsumerV3": [
        32832
      ],
      "FunctionsClient": [
        32982
      ],
      "FunctionsRequest": [
        651
      ],
      "IERC20": [
        29322
      ],
      "IGenericSwapFacet": [
        35040
      ],
      "ILighterFi": [
        32639
      ],
      "ILogAutomation": [
        40
      ],
      "LighterFi": [
        33949
      ],
      "Log": [
        20
      ],
      "Math": [
        35004
      ],
      "Swapper": [
        35618
      ],
      "Utils": [
        35861
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:17929:41",
    "nodes": [
      {
        "id": 32984,
        "nodeType": "PragmaDirective",
        "src": "33:24:41",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 32986,
        "nodeType": "ImportDirective",
        "src": "61:58:41",
        "nodes": [],
        "absolutePath": "src/mocks/FunctionsClientMock.sol",
        "file": "./FunctionsClientMock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33950,
        "sourceUnit": 32983,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32985,
              "name": "FunctionsClient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32982,
              "src": "69:15:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32988,
        "nodeType": "ImportDirective",
        "src": "121:84:41",
        "nodes": [],
        "absolutePath": "lib/chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        "file": "@chainlink/src/v0.8/shared/access/ConfirmedOwner.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33950,
        "sourceUnit": 731,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32987,
              "name": "ConfirmedOwner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 730,
              "src": "129:14:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32990,
        "nodeType": "ImportDirective",
        "src": "207:101:41",
        "nodes": [],
        "absolutePath": "lib/chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol",
        "file": "@chainlink/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33950,
        "sourceUnit": 652,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32989,
              "name": "FunctionsRequest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 651,
              "src": "215:16:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32991,
        "nodeType": "ImportDirective",
        "src": "310:70:41",
        "nodes": [],
        "absolutePath": "lib/chainlink/contracts/src/v0.8/automation/interfaces/ILogAutomation.sol",
        "file": "@chainlink/src/v0.8/automation/interfaces/ILogAutomation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33950,
        "sourceUnit": 41,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32992,
        "nodeType": "ImportDirective",
        "src": "382:49:41",
        "nodes": [],
        "absolutePath": "src/mocks/AutomationCompatibleInterfaceMock.sol",
        "file": "./AutomationCompatibleInterfaceMock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33950,
        "sourceUnit": 32661,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32993,
        "nodeType": "ImportDirective",
        "src": "433:56:41",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33950,
        "sourceUnit": 29323,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32994,
        "nodeType": "ImportDirective",
        "src": "493:30:41",
        "nodes": [],
        "absolutePath": "src/mocks/DataConsumerV3.sol",
        "file": "./DataConsumerV3.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33950,
        "sourceUnit": 32833,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32995,
        "nodeType": "ImportDirective",
        "src": "525:27:41",
        "nodes": [],
        "absolutePath": "src/mocks/SwapperMock.sol",
        "file": "./SwapperMock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33950,
        "sourceUnit": 35619,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32996,
        "nodeType": "ImportDirective",
        "src": "554:38:41",
        "nodes": [],
        "absolutePath": "src/interfaces/ILighterFi.sol",
        "file": "../interfaces/ILighterFi.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33950,
        "sourceUnit": 32640,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32997,
        "nodeType": "ImportDirective",
        "src": "594:25:41",
        "nodes": [],
        "absolutePath": "src/mocks/UtilsMock.sol",
        "file": "./UtilsMock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33950,
        "sourceUnit": 35862,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33949,
        "nodeType": "ContractDefinition",
        "src": "625:17337:41",
        "nodes": [
          {
            "id": 33017,
            "nodeType": "UsingForDirective",
            "src": "782:52:41",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 33014,
              "name": "FunctionsRequest",
              "nameLocations": [
                "788:16:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 651,
              "src": "788:16:41"
            },
            "typeName": {
              "id": 33016,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33015,
                "name": "FunctionsRequest.Request",
                "nameLocations": [
                  "809:16:41",
                  "826:7:41"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 229,
                "src": "809:24:41"
              },
              "referencedDeclaration": 229,
              "src": "809:24:41",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Request_$229_storage_ptr",
                "typeString": "struct FunctionsRequest.Request"
              }
            }
          },
          {
            "id": 33019,
            "nodeType": "VariableDeclaration",
            "src": "842:38:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "65170a47",
            "mutability": "mutable",
            "name": "s_usersStrategiesLength",
            "nameLocation": "857:23:41",
            "scope": 33949,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33018,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "842:7:41",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33021,
            "nodeType": "VariableDeclaration",
            "src": "887:20:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "6e74336b",
            "mutability": "mutable",
            "name": "donID",
            "nameLocation": "902:5:41",
            "scope": 33949,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 33020,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "887:7:41",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33023,
            "nodeType": "VariableDeclaration",
            "src": "914:22:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "f68016b7",
            "mutability": "mutable",
            "name": "gasLimit",
            "nameLocation": "928:8:41",
            "scope": 33949,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 33022,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "914:6:41",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33025,
            "nodeType": "VariableDeclaration",
            "src": "943:30:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "a854af2c",
            "mutability": "mutable",
            "name": "upkeepContract1",
            "nameLocation": "958:15:41",
            "scope": 33949,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33024,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "943:7:41",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33027,
            "nodeType": "VariableDeclaration",
            "src": "980:28:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "09c1ba2e",
            "mutability": "mutable",
            "name": "subscriptionId",
            "nameLocation": "994:14:41",
            "scope": 33949,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 33026,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "980:6:41",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33029,
            "nodeType": "VariableDeclaration",
            "src": "1015:30:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "52f61f41",
            "mutability": "mutable",
            "name": "upkeepContract2",
            "nameLocation": "1030:15:41",
            "scope": 33949,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33028,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1015:7:41",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33031,
            "nodeType": "VariableDeclaration",
            "src": "1054:28:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "e6446373",
            "mutability": "mutable",
            "name": "strategyIndex",
            "nameLocation": "1069:13:41",
            "scope": 33949,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33030,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1054:7:41",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33033,
            "nodeType": "VariableDeclaration",
            "src": "1089:26:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "02d45457",
            "mutability": "mutable",
            "name": "usdcAddress",
            "nameLocation": "1104:11:41",
            "scope": 33949,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33032,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1089:7:41",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33035,
            "nodeType": "VariableDeclaration",
            "src": "1122:20:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "b187bd26",
            "mutability": "mutable",
            "name": "isPaused",
            "nameLocation": "1134:8:41",
            "scope": 33949,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 33034,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1122:4:41",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33037,
            "nodeType": "VariableDeclaration",
            "src": "1149:25:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "392e53cd",
            "mutability": "mutable",
            "name": "isInitialized",
            "nameLocation": "1161:13:41",
            "scope": 33949,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 33036,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1149:4:41",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33042,
            "nodeType": "VariableDeclaration",
            "src": "1187:55:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "4f8391bc",
            "mutability": "mutable",
            "name": "s_usersStrategies",
            "nameLocation": "1225:17:41",
            "scope": 33949,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserStrategy_$32578_storage_$",
              "typeString": "mapping(uint256 => struct ILighterFi.UserStrategy)"
            },
            "typeName": {
              "id": 33041,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 33038,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1195:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1187:30:41",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserStrategy_$32578_storage_$",
                "typeString": "mapping(uint256 => struct ILighterFi.UserStrategy)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 33040,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 33039,
                  "name": "UserStrategy",
                  "nameLocations": [
                    "1204:12:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32578,
                  "src": "1204:12:41"
                },
                "referencedDeclaration": 32578,
                "src": "1204:12:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                  "typeString": "struct ILighterFi.UserStrategy"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 33046,
            "nodeType": "VariableDeclaration",
            "src": "1249:44:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "b21ca099",
            "mutability": "mutable",
            "name": "requestsIds",
            "nameLocation": "1282:11:41",
            "scope": 33949,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 33045,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 33043,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1257:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1249:25:41",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 33044,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1266:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 33050,
            "nodeType": "VariableDeclaration",
            "src": "1359:1445:41",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 33047,
              "nodeType": "StructuredDocumentation",
              "src": "1302:51:41",
              "text": "@dev source string for Chainlink Function call"
            },
            "mutability": "mutable",
            "name": "source",
            "nameLocation": "1366:6:41",
            "scope": 33949,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 33048,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1359:6:41",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "636f6e73742066433d2027706f6c273b636f6e73742066543d617267735b305d3b636f6e73742074543d617267735b315d3b636f6e7374206641643d617267735b325d3b636f6e73742066416d3d617267735b335d3b636f6e7374206c5255726c203d206068747470733a2f2f6c692e71756573742f76312f71756f74653f66726f6d436861696e3d247b66437d26746f436861696e3d247b66437d2666726f6d546f6b656e3d247b66547d26746f546f6b656e3d247b74547d2666726f6d416464726573733d247b6641647d2666726f6d416d6f756e743d247b66416d7d603b636f6e7374206c52203d2061776169742046756e6374696f6e732e6d616b654874747052657175657374287b75726c3a206c5255726c2c6d6574686f643a2027474554272c686561646572733a207b27616363657074273a20276170706c69636174696f6e2f6a736f6e272c7d2c7d293b636f6e73742064617461203d206c522e646174612e7472616e73616374696f6e526571756573742e646174613b636f6e7374207444203d206c522e646174612e696e636c7564656453746570735b305d2e657374696d6174652e746f6f6c446174613b66756e6374696f6e207061727365627328627329207b636f6e7374207473203d2062732e736c696365283130293b636f6e73742074784964203d2074732e736c69636528302c203634293b636f6e7374206d696e4f7574203d2074732e736c696365283238382c20333230293b636f6e737420726f75746572203d2074442e726f75746572416464726573732e736c6963652832293b636f6e73742073656c6563746f72203d2074732e736c69636528313636342c2031363732293b6c6574206d6964646c65546f6b656e31203d2027273b6c6574206d6964646c65546f6b656e32203d2027273b6966202874442e706174682e6c656e677468203d3d3d2033297b6d6964646c65546f6b656e31203d2074442e706174685b315d2e736c6963652832293b7d6966202874442e706174682e6c656e677468203d3d3d2034297b6d6964646c65546f6b656e31203d2074442e706174685b315d2e736c6963652832293b6d6964646c65546f6b656e32203d2074442e706174685b325d2e736c6963652832293b7d72657475726e20747849642b6d696e4f75742b726f757465722b73656c6563746f722b6d6964646c65546f6b656e312b6d6964646c65546f6b656e323b7d72657475726e202846756e6374696f6e732e656e636f6465537472696e67287061727365627328646174612929293b",
              "id": 33049,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1385:1419:41",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_967a286f21a955bd16cf3657b56c7beaa51647c5eaa08009db18e36c549ea2d5",
                "typeString": "literal_string \"const fC= 'pol';const fT=args[0];const tT=args[1];const fAd=args[2];const fAm=args[3];const lRUrl = `https://li.quest/v1/quote?fromChain=${fC}&toChain=${fC}&fromToken=${fT}&toToken=${tT}&fromAddress=${fAd}&fromAmount=${fAm}`;const lR = await Functions.makeHttpRequest({url: lRUrl,method: 'GET',headers: {'accept': 'application/json',},});const data = lR.data.transactionRequest.data;const tD = lR.data.includedSteps[0].estimate.toolData;function parsebs(bs) {const ts = bs.slice(10);const txId = ts.slice(0, 64);const minOut = ts.slice(288, 320);const router = tD.routerAddress.slice(2);const selector = ts.slice(1664, 1672);let middleToken1 = '';let middleToken2 = '';if (tD.path.length === 3){middleToken1 = tD.path[1].slice(2);}if (tD.path.length === 4){middleToken1 = tD.path[1].slice(2);middleToken2 = tD.path[2].slice(2);}return txId+minOut+router+selector+middleToken1+middleToken2;}return (Functions.encodeString(parsebs(data)));\""
              },
              "value": "const fC= 'pol';const fT=args[0];const tT=args[1];const fAd=args[2];const fAm=args[3];const lRUrl = `https://li.quest/v1/quote?fromChain=${fC}&toChain=${fC}&fromToken=${fT}&toToken=${tT}&fromAddress=${fAd}&fromAmount=${fAm}`;const lR = await Functions.makeHttpRequest({url: lRUrl,method: 'GET',headers: {'accept': 'application/json',},});const data = lR.data.transactionRequest.data;const tD = lR.data.includedSteps[0].estimate.toolData;function parsebs(bs) {const ts = bs.slice(10);const txId = ts.slice(0, 64);const minOut = ts.slice(288, 320);const router = tD.routerAddress.slice(2);const selector = ts.slice(1664, 1672);let middleToken1 = '';let middleToken2 = '';if (tD.path.length === 3){middleToken1 = tD.path[1].slice(2);}if (tD.path.length === 4){middleToken1 = tD.path[1].slice(2);middleToken2 = tD.path[2].slice(2);}return txId+minOut+router+selector+middleToken1+middleToken2;}return (Functions.encodeString(parsebs(data)));"
            },
            "visibility": "internal"
          },
          {
            "id": 33078,
            "nodeType": "FunctionDefinition",
            "src": "2987:248:41",
            "nodes": [],
            "body": {
              "id": 33077,
              "nodeType": "Block",
              "src": "3068:167:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33063,
                      "name": "isInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33037,
                      "src": "3079:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 33064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3095:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3079:21:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33066,
                  "nodeType": "ExpressionStatement",
                  "src": "3079:21:41"
                },
                {
                  "expression": {
                    "id": 33071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33067,
                      "name": "genericSwapFacet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35044,
                      "src": "3111:16:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGenericSwapFacet_$35040",
                        "typeString": "contract IGenericSwapFacet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33069,
                          "name": "lifiDiamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35048,
                          "src": "3148:11:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 33068,
                        "name": "IGenericSwapFacet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35040,
                        "src": "3130:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IGenericSwapFacet_$35040_$",
                          "typeString": "type(contract IGenericSwapFacet)"
                        }
                      },
                      "id": 33070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3130:30:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGenericSwapFacet_$35040",
                        "typeString": "contract IGenericSwapFacet"
                      }
                    },
                    "src": "3111:49:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGenericSwapFacet_$35040",
                      "typeString": "contract IGenericSwapFacet"
                    }
                  },
                  "id": 33072,
                  "nodeType": "ExpressionStatement",
                  "src": "3111:49:41"
                },
                {
                  "expression": {
                    "id": 33075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33073,
                      "name": "usdcAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33033,
                      "src": "3171:11:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307832373931426361316632646534363631454438384133304339394137613934343941613834313734",
                      "id": 33074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3185:42:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
                    },
                    "src": "3171:56:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33076,
                  "nodeType": "ExpressionStatement",
                  "src": "3171:56:41"
                }
              ]
            },
            "documentation": {
              "id": 33051,
              "nodeType": "StructuredDocumentation",
              "src": "2813:168:41",
              "text": " @dev Constructor to initialize the contract with the specified router address.\n @param _router Address of the router to use for function calls."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 33056,
                    "name": "_router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33053,
                    "src": "3032:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 33057,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 33055,
                  "name": "FunctionsClient",
                  "nameLocations": [
                    "3016:15:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32982,
                  "src": "3016:15:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "3016:24:41"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 33059,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3056:3:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 33060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3060:6:41",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3056:10:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 33061,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 33058,
                  "name": "ConfirmedOwner",
                  "nameLocations": [
                    "3041:14:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 730,
                  "src": "3041:14:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "3041:26:41"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 33054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33053,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "3007:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33078,
                  "src": "2999:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2999:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2998:17:41"
            },
            "returnParameters": {
              "id": 33062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3068:0:41"
            },
            "scope": 33949,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33131,
            "nodeType": "FunctionDefinition",
            "src": "3681:498:41",
            "nodes": [],
            "body": {
              "id": 33130,
              "nodeType": "Block",
              "src": "3846:333:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3865:14:41",
                        "subExpression": {
                          "id": 33097,
                          "name": "isInitialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33037,
                          "src": "3866:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c69676874657246693a20616c726561647920696e697469616c697a6564",
                        "id": 33099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3881:32:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c018b509fabcb14277e703e18338a21b10ee45e7385e958c80a95ce80aa4a740",
                          "typeString": "literal_string \"LighterFi: already initialized\""
                        },
                        "value": "LighterFi: already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c018b509fabcb14277e703e18338a21b10ee45e7385e958c80a95ce80aa4a740",
                          "typeString": "literal_string \"LighterFi: already initialized\""
                        }
                      ],
                      "id": 33096,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3857:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3857:57:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33101,
                  "nodeType": "ExpressionStatement",
                  "src": "3857:57:41"
                },
                {
                  "expression": {
                    "id": 33104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33102,
                      "name": "usdcAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33033,
                      "src": "3925:11:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33103,
                      "name": "_usdcAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33081,
                      "src": "3939:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3925:26:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33105,
                  "nodeType": "ExpressionStatement",
                  "src": "3925:26:41"
                },
                {
                  "expression": {
                    "id": 33108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33106,
                      "name": "gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33023,
                      "src": "3962:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33107,
                      "name": "_gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33083,
                      "src": "3973:9:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3962:20:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 33109,
                  "nodeType": "ExpressionStatement",
                  "src": "3962:20:41"
                },
                {
                  "expression": {
                    "id": 33112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33110,
                      "name": "donID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33021,
                      "src": "3993:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33111,
                      "name": "_donID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33085,
                      "src": "4001:6:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3993:14:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 33113,
                  "nodeType": "ExpressionStatement",
                  "src": "3993:14:41"
                },
                {
                  "expression": {
                    "id": 33116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33114,
                      "name": "subscriptionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33027,
                      "src": "4018:14:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33115,
                      "name": "_subscriptionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33087,
                      "src": "4035:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4018:32:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 33117,
                  "nodeType": "ExpressionStatement",
                  "src": "4018:32:41"
                },
                {
                  "expression": {
                    "id": 33120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33118,
                      "name": "upkeepContract1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33025,
                      "src": "4061:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33119,
                      "name": "_upkeepContract1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33089,
                      "src": "4079:16:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4061:34:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33121,
                  "nodeType": "ExpressionStatement",
                  "src": "4061:34:41"
                },
                {
                  "expression": {
                    "id": 33124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33122,
                      "name": "upkeepContract2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33029,
                      "src": "4106:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33123,
                      "name": "_upkeepContract2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33091,
                      "src": "4124:16:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4106:34:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33125,
                  "nodeType": "ExpressionStatement",
                  "src": "4106:34:41"
                },
                {
                  "expression": {
                    "id": 33128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33126,
                      "name": "isInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33037,
                      "src": "4151:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 33127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4167:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4151:20:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33129,
                  "nodeType": "ExpressionStatement",
                  "src": "4151:20:41"
                }
              ]
            },
            "documentation": {
              "id": 33079,
              "nodeType": "StructuredDocumentation",
              "src": "3243:432:41",
              "text": " @dev Initialize the contract with various parameters.\n @param _usdcAddress Address of the USDC token.\n @param _gasLimit Gas limit to use for transactions.\n @param _donID ID associated with the contract.\n @param _subscriptionId ID of the subscription.\n @param _upkeepContract1 Address of the first upkeep contract.\n @param _upkeepContract2 Address of the second upkeep contract."
            },
            "functionSelector": "d201b264",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33094,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33093,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3827:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 892,
                  "src": "3827:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "3827:9:41"
              }
            ],
            "name": "init",
            "nameLocation": "3690:4:41",
            "parameters": {
              "id": 33092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33081,
                  "mutability": "mutable",
                  "name": "_usdcAddress",
                  "nameLocation": "3703:12:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33131,
                  "src": "3695:20:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33080,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3695:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33083,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "3724:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33131,
                  "src": "3717:16:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 33082,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3717:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33085,
                  "mutability": "mutable",
                  "name": "_donID",
                  "nameLocation": "3743:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33131,
                  "src": "3735:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 33084,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3735:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33087,
                  "mutability": "mutable",
                  "name": "_subscriptionId",
                  "nameLocation": "3758:15:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33131,
                  "src": "3751:22:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 33086,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3751:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33089,
                  "mutability": "mutable",
                  "name": "_upkeepContract1",
                  "nameLocation": "3783:16:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33131,
                  "src": "3775:24:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3775:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33091,
                  "mutability": "mutable",
                  "name": "_upkeepContract2",
                  "nameLocation": "3809:16:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33131,
                  "src": "3801:24:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3801:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3694:132:41"
            },
            "returnParameters": {
              "id": 33095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3846:0:41"
            },
            "scope": 33949,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33160,
            "nodeType": "ModifierDefinition",
            "src": "4303:221:41",
            "nodes": [],
            "body": {
              "id": 33159,
              "nodeType": "Block",
              "src": "4326:198:41",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 33143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 33134,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4341:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 33135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4345:6:41",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4341:10:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 33136,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 847,
                            "src": "4355:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 33137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4355:7:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4341:21:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 33139,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4366:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 33140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4370:6:41",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4366:10:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 33141,
                          "name": "upkeepContract1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33025,
                          "src": "4380:15:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4366:29:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4341:54:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 33147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 33144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4399:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4403:6:41",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4399:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 33146,
                        "name": "upkeepContract2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33029,
                        "src": "4413:15:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4399:29:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4341:87:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33157,
                  "nodeType": "IfStatement",
                  "src": "4337:167:41",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 33150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4467:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 33151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4471:6:41",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4467:10:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 33152,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 847,
                            "src": "4479:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 33153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4479:7:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 33154,
                          "name": "upkeepContract1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33025,
                          "src": "4488:15:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 33149,
                        "name": "NotAllowedCaller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32586,
                        "src": "4450:16:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_address_$returns$__$",
                          "typeString": "function (address,address,address) pure"
                        }
                      },
                      "id": 33155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4450:54:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 33156,
                    "nodeType": "RevertStatement",
                    "src": "4443:61:41"
                  }
                },
                {
                  "id": 33158,
                  "nodeType": "PlaceholderStatement",
                  "src": "4515:1:41"
                }
              ]
            },
            "documentation": {
              "id": 33132,
              "nodeType": "StructuredDocumentation",
              "src": "4187:110:41",
              "text": " @notice Reverts if called by anyone other than the contract owner or automation registry."
            },
            "name": "onlyAllowed",
            "nameLocation": "4312:11:41",
            "parameters": {
              "id": 33133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4323:2:41"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 33179,
            "nodeType": "FunctionDefinition",
            "src": "4856:198:41",
            "nodes": [],
            "body": {
              "id": 33178,
              "nodeType": "Block",
              "src": "4956:98:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33170,
                      "name": "upkeepContract1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33025,
                      "src": "4967:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33171,
                      "name": "_upkeepContract1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33163,
                      "src": "4985:16:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4967:34:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33173,
                  "nodeType": "ExpressionStatement",
                  "src": "4967:34:41"
                },
                {
                  "expression": {
                    "id": 33176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33174,
                      "name": "upkeepContract2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33029,
                      "src": "5012:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33175,
                      "name": "_upkeepContract2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33165,
                      "src": "5030:16:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5012:34:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33177,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:34:41"
                }
              ]
            },
            "documentation": {
              "id": 33161,
              "nodeType": "StructuredDocumentation",
              "src": "4532:318:41",
              "text": " @dev Set the addresses of the automation cron contracts.\n @param _upkeepContract1 Address of the first automation cron contract.\n @param _upkeepContract2 Address of the second automation log contract.\n @notice Only the contract owner can call this function to update the addresses."
            },
            "functionSelector": "4ce3fa52",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33168,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33167,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4946:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 892,
                  "src": "4946:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "4946:9:41"
              }
            ],
            "name": "setUpkeepForwarders",
            "nameLocation": "4865:19:41",
            "parameters": {
              "id": 33166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33163,
                  "mutability": "mutable",
                  "name": "_upkeepContract1",
                  "nameLocation": "4893:16:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33179,
                  "src": "4885:24:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4885:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33165,
                  "mutability": "mutable",
                  "name": "_upkeepContract2",
                  "nameLocation": "4919:16:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33179,
                  "src": "4911:24:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4911:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4884:52:41"
            },
            "returnParameters": {
              "id": 33169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4956:0:41"
            },
            "scope": 33949,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33197,
            "nodeType": "FunctionDefinition",
            "src": "5379:126:41",
            "nodes": [],
            "body": {
              "id": 33196,
              "nodeType": "Block",
              "src": "5442:63:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33189,
                      "name": "isPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33035,
                      "src": "5453:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33190,
                      "name": "pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33182,
                      "src": "5464:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5453:16:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33192,
                  "nodeType": "ExpressionStatement",
                  "src": "5453:16:41"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 33193,
                        "name": "isPaused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33035,
                        "src": "5488:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 33194,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5487:10:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 33188,
                  "id": 33195,
                  "nodeType": "Return",
                  "src": "5480:17:41"
                }
              ]
            },
            "documentation": {
              "id": 33180,
              "nodeType": "StructuredDocumentation",
              "src": "5062:311:41",
              "text": " @dev Set or unset the pause status of the contract.\n @param pause A boolean value to determine whether to pause or resume the contract.\n @return The current pause status after the operation.\n @notice Only the contract owner can call this function to toggle the pause status."
            },
            "functionSelector": "bedb86fb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33185,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33184,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5418:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 892,
                  "src": "5418:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "5418:9:41"
              }
            ],
            "name": "setPause",
            "nameLocation": "5388:8:41",
            "parameters": {
              "id": 33183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33182,
                  "mutability": "mutable",
                  "name": "pause",
                  "nameLocation": "5402:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33197,
                  "src": "5397:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33181,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5397:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5396:12:41"
            },
            "returnParameters": {
              "id": 33188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33197,
                  "src": "5436:4:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33186,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5436:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5435:6:41"
            },
            "scope": 33949,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33334,
            "nodeType": "FunctionDefinition",
            "src": "5933:1891:41",
            "nodes": [],
            "body": {
              "id": 33333,
              "nodeType": "Block",
              "src": "6062:1762:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6109:9:41",
                        "subExpression": {
                          "id": 33212,
                          "name": "isPaused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33035,
                          "src": "6110:8:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6e747261637420706175736564",
                        "id": 33214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6120:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca2336b30543d95ffd635b46825468e9d9a826c6a0b27078e4f4bdde94c6e83e",
                          "typeString": "literal_string \"contract paused\""
                        },
                        "value": "contract paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca2336b30543d95ffd635b46825468e9d9a826c6a0b27078e4f4bdde94c6e83e",
                          "typeString": "literal_string \"contract paused\""
                        }
                      ],
                      "id": 33211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6101:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6101:37:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33216,
                  "nodeType": "ExpressionStatement",
                  "src": "6101:37:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33218,
                          "name": "tokenInAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33206,
                          "src": "6157:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 33219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6173:1:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6157:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420737472617465677920706172616d20616d6f756e74",
                        "id": 33221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6176:31:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a7b6ac9da30b158047d40aa0f1d16f425bc993cf39c55ea737e739c930d85c9",
                          "typeString": "literal_string \"invalid strategy param amount\""
                        },
                        "value": "invalid strategy param amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a7b6ac9da30b158047d40aa0f1d16f425bc993cf39c55ea737e739c930d85c9",
                          "typeString": "literal_string \"invalid strategy param amount\""
                        }
                      ],
                      "id": 33217,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6149:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6149:59:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33223,
                  "nodeType": "ExpressionStatement",
                  "src": "6149:59:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 33225,
                          "name": "tokenAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32697,
                          "src": "6227:12:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 33227,
                        "indexExpression": {
                          "id": 33226,
                          "name": "tokenTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33202,
                          "src": "6240:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6227:21:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420737472617465677920706172616d20746f6b656e546f",
                        "id": 33228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6250:32:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74741639ae978dc0710cba15b30602e30dccad39cc4318d7b24d49dbff302c5c",
                          "typeString": "literal_string \"invalid strategy param tokenTo\""
                        },
                        "value": "invalid strategy param tokenTo"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74741639ae978dc0710cba15b30602e30dccad39cc4318d7b24d49dbff302c5c",
                          "typeString": "literal_string \"invalid strategy param tokenTo\""
                        }
                      ],
                      "id": 33224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6219:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6219:64:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33230,
                  "nodeType": "ExpressionStatement",
                  "src": "6219:64:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 33232,
                          "name": "tokenAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32697,
                          "src": "6302:12:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 33234,
                        "indexExpression": {
                          "id": 33233,
                          "name": "tokenFrom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33200,
                          "src": "6315:9:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6302:23:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420737472617465677920706172616d20746f6b656e46726f6d",
                        "id": 33235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6327:34:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c3b93c685a1791c63ea612b762b2a6fba51412c5ea2f6d2762ea926ac4f6fbb",
                          "typeString": "literal_string \"invalid strategy param tokenFrom\""
                        },
                        "value": "invalid strategy param tokenFrom"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c3b93c685a1791c63ea612b762b2a6fba51412c5ea2f6d2762ea926ac4f6fbb",
                          "typeString": "literal_string \"invalid strategy param tokenFrom\""
                        }
                      ],
                      "id": 33231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6294:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6294:68:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33237,
                  "nodeType": "ExpressionStatement",
                  "src": "6294:68:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 33245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33239,
                            "name": "timeInterval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33204,
                            "src": "6381:12:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 33240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6397:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6381:17:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33242,
                            "name": "limit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33208,
                            "src": "6402:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 33243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6411:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6402:10:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6381:31:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4569746865722073657420612074696d65496e74657276616c206f72204c696d6974",
                        "id": 33246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6414:36:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc07581445ccb721fa01aca40a394078d2868f3019c267f27ba5bb1924867a86",
                          "typeString": "literal_string \"Either set a timeInterval or Limit\""
                        },
                        "value": "Either set a timeInterval or Limit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc07581445ccb721fa01aca40a394078d2868f3019c267f27ba5bb1924867a86",
                          "typeString": "literal_string \"Either set a timeInterval or Limit\""
                        }
                      ],
                      "id": 33238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6373:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6373:78:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33248,
                  "nodeType": "ExpressionStatement",
                  "src": "6373:78:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6470:33:41",
                        "subExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 33256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 33252,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 33250,
                                  "name": "timeInterval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33204,
                                  "src": "6472:12:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 33251,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6488:1:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6472:17:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 33255,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 33253,
                                  "name": "limit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33208,
                                  "src": "6493:5:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 33254,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6501:1:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6493:9:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6472:30:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 33257,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6471:32:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696d697420616e642054696d65496e74657276616c206172652030",
                        "id": 33259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6505:30:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c3d2d425febbfa3fdd646c7172ce632ad3e0d76f2d751641f26e9ccf8612eb6",
                          "typeString": "literal_string \"Limit and TimeInterval are 0\""
                        },
                        "value": "Limit and TimeInterval are 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c3d2d425febbfa3fdd646c7172ce632ad3e0d76f2d751641f26e9ccf8612eb6",
                          "typeString": "literal_string \"Limit and TimeInterval are 0\""
                        }
                      ],
                      "id": 33249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6462:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6462:74:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33261,
                  "nodeType": "ExpressionStatement",
                  "src": "6462:74:41"
                },
                {
                  "assignments": [
                    33263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33263,
                      "mutability": "mutable",
                      "name": "nextExecution",
                      "nameLocation": "6552:13:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33333,
                      "src": "6547:18:41",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33262,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6547:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33264,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6547:18:41"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33265,
                      "name": "timeInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33204,
                      "src": "6580:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 33266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6595:1:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6580:16:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33276,
                  "nodeType": "IfStatement",
                  "src": "6576:96:41",
                  "trueBody": {
                    "id": 33275,
                    "nodeType": "Block",
                    "src": "6598:74:41",
                    "statements": [
                      {
                        "expression": {
                          "id": 33273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 33268,
                            "name": "nextExecution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33263,
                            "src": "6613:13:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 33269,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "6629:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 33270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6635:9:41",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "6629:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 33271,
                              "name": "timeInterval",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33204,
                              "src": "6647:12:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6629:30:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6613:46:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33274,
                        "nodeType": "ExpressionStatement",
                        "src": "6613:46:41"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    33279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33279,
                      "mutability": "mutable",
                      "name": "newStrategy",
                      "nameLocation": "6740:11:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33333,
                      "src": "6720:31:41",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                        "typeString": "struct ILighterFi.UserStrategy"
                      },
                      "typeName": {
                        "id": 33278,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33277,
                          "name": "UserStrategy",
                          "nameLocations": [
                            "6720:12:41"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32578,
                          "src": "6720:12:41"
                        },
                        "referencedDeclaration": 32578,
                        "src": "6720:12:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                          "typeString": "struct ILighterFi.UserStrategy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33296,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 33281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6788:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6792:6:41",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6788:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33283,
                            "name": "timeInterval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33204,
                            "src": "6823:12:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 33284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6838:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6823:16:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 33287,
                          "name": "tokenFrom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33200,
                          "src": "6856:9:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "6823:42:41",
                        "trueExpression": {
                          "id": 33286,
                          "name": "usdcAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33033,
                          "src": "6842:11:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33289,
                        "name": "tokenTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33202,
                        "src": "6954:7:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33290,
                        "name": "timeInterval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33204,
                        "src": "7047:12:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33291,
                        "name": "nextExecution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33263,
                        "src": "7089:13:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33292,
                        "name": "tokenInAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33206,
                        "src": "7125:13:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33293,
                        "name": "limit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33208,
                        "src": "7160:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "00",
                        "id": 33294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7194:7:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a",
                          "typeString": "literal_string hex\"00\""
                        },
                        "value": "\u0000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a",
                          "typeString": "literal_string hex\"00\""
                        }
                      ],
                      "id": 33280,
                      "name": "UserStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32578,
                      "src": "6754:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_UserStrategy_$32578_storage_ptr_$",
                        "typeString": "type(struct ILighterFi.UserStrategy storage pointer)"
                      }
                    },
                    "id": 33295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "6782:4:41",
                      "6813:7:41",
                      "6944:8:41",
                      "7033:12:41",
                      "7074:13:41",
                      "7117:6:41",
                      "7153:5:41",
                      "7180:12:41"
                    ],
                    "names": [
                      "user",
                      "tokenIn",
                      "tokenOut",
                      "timeInterval",
                      "nextExecution",
                      "amount",
                      "limit",
                      "lastResponse"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6754:459:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                      "typeString": "struct ILighterFi.UserStrategy memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6720:493:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 33302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 33298,
                                "name": "newStrategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33279,
                                "src": "7235:11:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                                  "typeString": "struct ILighterFi.UserStrategy memory"
                                }
                              },
                              "id": 33299,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7247:7:41",
                              "memberName": "tokenIn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32565,
                              "src": "7235:19:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 33300,
                                "name": "newStrategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33279,
                                "src": "7258:11:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                                  "typeString": "struct ILighterFi.UserStrategy memory"
                                }
                              },
                              "id": 33301,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7270:8:41",
                              "memberName": "tokenOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32567,
                              "src": "7258:20:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7235:43:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 33303,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7234:45:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207374727461677920706172616d3a20746f6b656e732061726520657175616c",
                        "id": 33304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7281:41:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a19b00d2d89bb37070cd24183f9a5d1d07e33f2f41e28505724cb4003e95701",
                          "typeString": "literal_string \"invalid strtagy param: tokens are equal\""
                        },
                        "value": "invalid strtagy param: tokens are equal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a19b00d2d89bb37070cd24183f9a5d1d07e33f2f41e28505724cb4003e95701",
                          "typeString": "literal_string \"invalid strtagy param: tokens are equal\""
                        }
                      ],
                      "id": 33297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7226:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7226:97:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33306,
                  "nodeType": "ExpressionStatement",
                  "src": "7226:97:41"
                },
                {
                  "assignments": [
                    33308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33308,
                      "mutability": "mutable",
                      "name": "newstrategyIndex",
                      "nameLocation": "7344:16:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33333,
                      "src": "7336:24:41",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33307,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7336:7:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33310,
                  "initialValue": {
                    "id": 33309,
                    "name": "strategyIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33031,
                    "src": "7363:13:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7336:40:41"
                },
                {
                  "expression": {
                    "id": 33315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 33311,
                        "name": "s_usersStrategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33042,
                        "src": "7446:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserStrategy_$32578_storage_$",
                          "typeString": "mapping(uint256 => struct ILighterFi.UserStrategy storage ref)"
                        }
                      },
                      "id": 33313,
                      "indexExpression": {
                        "id": 33312,
                        "name": "newstrategyIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33308,
                        "src": "7464:16:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7446:35:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStrategy_$32578_storage",
                        "typeString": "struct ILighterFi.UserStrategy storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33314,
                      "name": "newStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33279,
                      "src": "7484:11:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                        "typeString": "struct ILighterFi.UserStrategy memory"
                      }
                    },
                    "src": "7446:49:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserStrategy_$32578_storage",
                      "typeString": "struct ILighterFi.UserStrategy storage ref"
                    }
                  },
                  "id": 33316,
                  "nodeType": "ExpressionStatement",
                  "src": "7446:49:41"
                },
                {
                  "id": 33325,
                  "nodeType": "UncheckedBlock",
                  "src": "7541:196:41",
                  "statements": [
                    {
                      "expression": {
                        "id": 33319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 33317,
                          "name": "strategyIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33031,
                          "src": "7565:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 33318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7582:1:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7565:18:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 33320,
                      "nodeType": "ExpressionStatement",
                      "src": "7565:18:41"
                    },
                    {
                      "expression": {
                        "id": 33323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 33321,
                          "name": "s_usersStrategiesLength",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33019,
                          "src": "7656:23:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 33322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7682:1:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7656:27:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 33324,
                      "nodeType": "ExpressionStatement",
                      "src": "7656:27:41"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 33327,
                          "name": "newStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33279,
                          "src": "7768:11:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                            "typeString": "struct ILighterFi.UserStrategy memory"
                          }
                        },
                        "id": 33328,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7780:4:41",
                        "memberName": "user",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32563,
                        "src": "7768:16:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33329,
                        "name": "newStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33279,
                        "src": "7786:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                          "typeString": "struct ILighterFi.UserStrategy memory"
                        }
                      },
                      {
                        "id": 33330,
                        "name": "newstrategyIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33308,
                        "src": "7799:16:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                          "typeString": "struct ILighterFi.UserStrategy memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33326,
                      "name": "NewUserStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32595,
                      "src": "7752:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_struct$_UserStrategy_$32578_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,struct ILighterFi.UserStrategy memory,uint256)"
                      }
                    },
                    "id": 33331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7752:64:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33332,
                  "nodeType": "EmitStatement",
                  "src": "7747:69:41"
                }
              ]
            },
            "documentation": {
              "id": 33198,
              "nodeType": "StructuredDocumentation",
              "src": "5513:414:41",
              "text": " @dev Create a new user strategy for automated actions.\n @param tokenTo The address of the token to receive in the strategy.\n @param timeInterval The time interval between strategy executions, in seconds.\n @param tokenInAmount The amount of input tokens for the strategy.\n @notice This function can only be called when the contract is not paused and with valid parameters."
            },
            "functionSelector": "549e2b7f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createStrategy",
            "nameLocation": "5942:14:41",
            "parameters": {
              "id": 33209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33200,
                  "mutability": "mutable",
                  "name": "tokenFrom",
                  "nameLocation": "5965:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33334,
                  "src": "5957:17:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5957:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33202,
                  "mutability": "mutable",
                  "name": "tokenTo",
                  "nameLocation": "5984:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33334,
                  "src": "5976:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5976:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33204,
                  "mutability": "mutable",
                  "name": "timeInterval",
                  "nameLocation": "6001:12:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33334,
                  "src": "5993:20:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5993:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33206,
                  "mutability": "mutable",
                  "name": "tokenInAmount",
                  "nameLocation": "6023:13:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33334,
                  "src": "6015:21:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6015:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33208,
                  "mutability": "mutable",
                  "name": "limit",
                  "nameLocation": "6046:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33334,
                  "src": "6038:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6038:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5956:96:41"
            },
            "returnParameters": {
              "id": 33210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6062:0:41"
            },
            "scope": 33949,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33375,
            "nodeType": "FunctionDefinition",
            "src": "8043:577:41",
            "nodes": [],
            "body": {
              "id": 33374,
              "nodeType": "Block",
              "src": "8091:529:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33341,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33337,
                          "src": "8133:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 33342,
                          "name": "s_usersStrategiesLength",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33019,
                          "src": "8142:23:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8133:32:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e646578206f7574206f6620626f756e6473",
                        "id": 33344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8167:21:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                          "typeString": "literal_string \"Index out of bounds\""
                        },
                        "value": "Index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                          "typeString": "literal_string \"Index out of bounds\""
                        }
                      ],
                      "id": 33340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8125:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8125:64:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33346,
                  "nodeType": "ExpressionStatement",
                  "src": "8125:64:41"
                },
                {
                  "assignments": [
                    33349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33349,
                      "mutability": "mutable",
                      "name": "strategyToRemove",
                      "nameLocation": "8271:16:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33374,
                      "src": "8251:36:41",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                        "typeString": "struct ILighterFi.UserStrategy"
                      },
                      "typeName": {
                        "id": 33348,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33347,
                          "name": "UserStrategy",
                          "nameLocations": [
                            "8251:12:41"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32578,
                          "src": "8251:12:41"
                        },
                        "referencedDeclaration": 32578,
                        "src": "8251:12:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                          "typeString": "struct ILighterFi.UserStrategy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33353,
                  "initialValue": {
                    "baseExpression": {
                      "id": 33350,
                      "name": "s_usersStrategies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33042,
                      "src": "8290:17:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserStrategy_$32578_storage_$",
                        "typeString": "mapping(uint256 => struct ILighterFi.UserStrategy storage ref)"
                      }
                    },
                    "id": 33352,
                    "indexExpression": {
                      "id": 33351,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33337,
                      "src": "8308:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8290:24:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserStrategy_$32578_storage",
                      "typeString": "struct ILighterFi.UserStrategy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8251:63:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 33355,
                            "name": "strategyToRemove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33349,
                            "src": "8355:16:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                              "typeString": "struct ILighterFi.UserStrategy memory"
                            }
                          },
                          "id": 33356,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8372:4:41",
                          "memberName": "user",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32563,
                          "src": "8355:21:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 33357,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8380:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 33358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8384:6:41",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8380:10:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8355:35:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617574686f72697a6564",
                        "id": 33360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8392:14:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        },
                        "value": "Unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        }
                      ],
                      "id": 33354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8347:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8347:60:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33362,
                  "nodeType": "ExpressionStatement",
                  "src": "8347:60:41"
                },
                {
                  "expression": {
                    "id": 33366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "8485:31:41",
                    "subExpression": {
                      "baseExpression": {
                        "id": 33363,
                        "name": "s_usersStrategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33042,
                        "src": "8492:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserStrategy_$32578_storage_$",
                          "typeString": "mapping(uint256 => struct ILighterFi.UserStrategy storage ref)"
                        }
                      },
                      "id": 33365,
                      "indexExpression": {
                        "id": 33364,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33337,
                        "src": "8510:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8492:24:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStrategy_$32578_storage",
                        "typeString": "struct ILighterFi.UserStrategy storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33367,
                  "nodeType": "ExpressionStatement",
                  "src": "8485:31:41"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 33369,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8594:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8598:6:41",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8594:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33371,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33337,
                        "src": "8606:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33368,
                      "name": "RemovedUserStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32601,
                      "src": "8574:19:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 33372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8574:38:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33373,
                  "nodeType": "EmitStatement",
                  "src": "8569:43:41"
                }
              ]
            },
            "documentation": {
              "id": 33335,
              "nodeType": "StructuredDocumentation",
              "src": "7834:203:41",
              "text": " @dev Remove a user strategy at a specified index.\n @param index The index of the user strategy to be removed.\n @notice Only the user who created the strategy can remove it."
            },
            "functionSelector": "c0cbbca6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeStrategy",
            "nameLocation": "8052:14:41",
            "parameters": {
              "id": 33338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33337,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "8075:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33375,
                  "src": "8067:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8067:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8066:15:41"
            },
            "returnParameters": {
              "id": 33339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8091:0:41"
            },
            "scope": 33949,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33534,
            "nodeType": "FunctionDefinition",
            "src": "9095:1924:41",
            "nodes": [],
            "body": {
              "id": 33533,
              "nodeType": "Block",
              "src": "9241:1778:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33392,
                          "name": "amountTokenIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33386,
                          "src": "9288:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 33393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9304:1:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9288:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420737472617465677920706172616d20616d6f756e74",
                        "id": 33395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9307:31:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a7b6ac9da30b158047d40aa0f1d16f425bc993cf39c55ea737e739c930d85c9",
                          "typeString": "literal_string \"invalid strategy param amount\""
                        },
                        "value": "invalid strategy param amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a7b6ac9da30b158047d40aa0f1d16f425bc993cf39c55ea737e739c930d85c9",
                          "typeString": "literal_string \"invalid strategy param amount\""
                        }
                      ],
                      "id": 33391,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9280:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9280:59:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33397,
                  "nodeType": "ExpressionStatement",
                  "src": "9280:59:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 33399,
                          "name": "tokenAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32697,
                          "src": "9358:12:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 33401,
                        "indexExpression": {
                          "id": 33400,
                          "name": "tokenTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33382,
                          "src": "9371:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9358:21:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420737472617465677920706172616d20746f6b656e546f",
                        "id": 33402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9381:32:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74741639ae978dc0710cba15b30602e30dccad39cc4318d7b24d49dbff302c5c",
                          "typeString": "literal_string \"invalid strategy param tokenTo\""
                        },
                        "value": "invalid strategy param tokenTo"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74741639ae978dc0710cba15b30602e30dccad39cc4318d7b24d49dbff302c5c",
                          "typeString": "literal_string \"invalid strategy param tokenTo\""
                        }
                      ],
                      "id": 33398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9350:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9350:64:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33404,
                  "nodeType": "ExpressionStatement",
                  "src": "9350:64:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 33406,
                          "name": "tokenAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32697,
                          "src": "9433:12:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 33408,
                        "indexExpression": {
                          "id": 33407,
                          "name": "tokenFrom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33380,
                          "src": "9446:9:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9433:23:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420737472617465677920706172616d20746f6b656e46726f6d",
                        "id": 33409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9458:34:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c3b93c685a1791c63ea612b762b2a6fba51412c5ea2f6d2762ea926ac4f6fbb",
                          "typeString": "literal_string \"invalid strategy param tokenFrom\""
                        },
                        "value": "invalid strategy param tokenFrom"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c3b93c685a1791c63ea612b762b2a6fba51412c5ea2f6d2762ea926ac4f6fbb",
                          "typeString": "literal_string \"invalid strategy param tokenFrom\""
                        }
                      ],
                      "id": 33405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9425:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9425:68:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33411,
                  "nodeType": "ExpressionStatement",
                  "src": "9425:68:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 33419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33413,
                            "name": "timeInterval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33384,
                            "src": "9512:12:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 33414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9528:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9512:17:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33416,
                            "name": "limit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33388,
                            "src": "9533:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 33417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9542:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9533:10:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9512:31:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4569746865722073657420612074696d65496e74657276616c206f72204c696d6974",
                        "id": 33420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9545:36:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc07581445ccb721fa01aca40a394078d2868f3019c267f27ba5bb1924867a86",
                          "typeString": "literal_string \"Either set a timeInterval or Limit\""
                        },
                        "value": "Either set a timeInterval or Limit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc07581445ccb721fa01aca40a394078d2868f3019c267f27ba5bb1924867a86",
                          "typeString": "literal_string \"Either set a timeInterval or Limit\""
                        }
                      ],
                      "id": 33412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9504:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9504:78:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33422,
                  "nodeType": "ExpressionStatement",
                  "src": "9504:78:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33424,
                          "name": "tokenFrom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33380,
                          "src": "9601:9:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 33425,
                          "name": "tokenTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33382,
                          "src": "9614:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9601:20:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207374727461677920706172616d3a20746f6b656e732061726520657175616c",
                        "id": 33427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9623:41:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a19b00d2d89bb37070cd24183f9a5d1d07e33f2f41e28505724cb4003e95701",
                          "typeString": "literal_string \"invalid strtagy param: tokens are equal\""
                        },
                        "value": "invalid strtagy param: tokens are equal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a19b00d2d89bb37070cd24183f9a5d1d07e33f2f41e28505724cb4003e95701",
                          "typeString": "literal_string \"invalid strtagy param: tokens are equal\""
                        }
                      ],
                      "id": 33423,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9593:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9593:72:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33429,
                  "nodeType": "ExpressionStatement",
                  "src": "9593:72:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9684:33:41",
                        "subExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 33437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 33433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 33431,
                                  "name": "timeInterval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33384,
                                  "src": "9686:12:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 33432,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9702:1:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "9686:17:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 33436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 33434,
                                  "name": "limit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33388,
                                  "src": "9707:5:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 33435,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9715:1:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "9707:9:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9686:30:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 33438,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9685:32:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696d697420616e642054696d65496e74657276616c206172652030",
                        "id": 33440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9719:30:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c3d2d425febbfa3fdd646c7172ce632ad3e0d76f2d751641f26e9ccf8612eb6",
                          "typeString": "literal_string \"Limit and TimeInterval are 0\""
                        },
                        "value": "Limit and TimeInterval are 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c3d2d425febbfa3fdd646c7172ce632ad3e0d76f2d751641f26e9ccf8612eb6",
                          "typeString": "literal_string \"Limit and TimeInterval are 0\""
                        }
                      ],
                      "id": 33430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9676:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9676:74:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33442,
                  "nodeType": "ExpressionStatement",
                  "src": "9676:74:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33444,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33378,
                          "src": "9903:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 33445,
                          "name": "s_usersStrategiesLength",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33019,
                          "src": "9912:23:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9903:32:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e646578206f7574206f6620626f756e6473",
                        "id": 33447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9937:21:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                          "typeString": "literal_string \"Index out of bounds\""
                        },
                        "value": "Index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                          "typeString": "literal_string \"Index out of bounds\""
                        }
                      ],
                      "id": 33443,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9895:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9895:64:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33449,
                  "nodeType": "ExpressionStatement",
                  "src": "9895:64:41"
                },
                {
                  "assignments": [
                    33452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33452,
                      "mutability": "mutable",
                      "name": "strategyToUpdate",
                      "nameLocation": "10041:16:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33533,
                      "src": "10020:37:41",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                        "typeString": "struct ILighterFi.UserStrategy"
                      },
                      "typeName": {
                        "id": 33451,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33450,
                          "name": "UserStrategy",
                          "nameLocations": [
                            "10020:12:41"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32578,
                          "src": "10020:12:41"
                        },
                        "referencedDeclaration": 32578,
                        "src": "10020:12:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                          "typeString": "struct ILighterFi.UserStrategy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33456,
                  "initialValue": {
                    "baseExpression": {
                      "id": 33453,
                      "name": "s_usersStrategies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33042,
                      "src": "10060:17:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserStrategy_$32578_storage_$",
                        "typeString": "mapping(uint256 => struct ILighterFi.UserStrategy storage ref)"
                      }
                    },
                    "id": 33455,
                    "indexExpression": {
                      "id": 33454,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33378,
                      "src": "10078:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10060:24:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserStrategy_$32578_storage",
                      "typeString": "struct ILighterFi.UserStrategy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10020:64:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 33458,
                            "name": "strategyToUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33452,
                            "src": "10125:16:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                              "typeString": "struct ILighterFi.UserStrategy storage pointer"
                            }
                          },
                          "id": 33459,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10142:4:41",
                          "memberName": "user",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32563,
                          "src": "10125:21:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 33460,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10150:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 33461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10154:6:41",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10150:10:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10125:35:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617574686f72697a6564",
                        "id": 33463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10162:14:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        },
                        "value": "Unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        }
                      ],
                      "id": 33457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10117:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10117:60:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33465,
                  "nodeType": "ExpressionStatement",
                  "src": "10117:60:41"
                },
                {
                  "assignments": [
                    33467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33467,
                      "mutability": "mutable",
                      "name": "nextExecution",
                      "nameLocation": "10193:13:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33533,
                      "src": "10188:18:41",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33466,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10188:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33468,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10188:18:41"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33469,
                      "name": "timeInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33384,
                      "src": "10221:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 33470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10236:1:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10221:16:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33480,
                  "nodeType": "IfStatement",
                  "src": "10217:96:41",
                  "trueBody": {
                    "id": 33479,
                    "nodeType": "Block",
                    "src": "10239:74:41",
                    "statements": [
                      {
                        "expression": {
                          "id": 33477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 33472,
                            "name": "nextExecution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33467,
                            "src": "10254:13:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 33473,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "10270:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 33474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10276:9:41",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "10270:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 33475,
                              "name": "timeInterval",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33384,
                              "src": "10288:12:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10270:30:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10254:46:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33478,
                        "nodeType": "ExpressionStatement",
                        "src": "10254:46:41"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 33490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 33481,
                        "name": "strategyToUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33452,
                        "src": "10380:16:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                          "typeString": "struct ILighterFi.UserStrategy storage pointer"
                        }
                      },
                      "id": 33483,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10397:7:41",
                      "memberName": "tokenIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32565,
                      "src": "10380:24:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33484,
                          "name": "timeInterval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33384,
                          "src": "10407:12:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 33485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10422:1:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10407:16:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 33488,
                        "name": "tokenFrom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33380,
                        "src": "10440:9:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 33489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "10407:42:41",
                      "trueExpression": {
                        "id": 33487,
                        "name": "usdcAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33033,
                        "src": "10426:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10380:69:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33491,
                  "nodeType": "ExpressionStatement",
                  "src": "10380:69:41"
                },
                {
                  "expression": {
                    "id": 33496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 33492,
                        "name": "strategyToUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33452,
                        "src": "10524:16:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                          "typeString": "struct ILighterFi.UserStrategy storage pointer"
                        }
                      },
                      "id": 33494,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10541:8:41",
                      "memberName": "tokenOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32567,
                      "src": "10524:25:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33495,
                      "name": "tokenTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33382,
                      "src": "10552:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10524:35:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33497,
                  "nodeType": "ExpressionStatement",
                  "src": "10524:35:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 33503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 33499,
                                "name": "strategyToUpdate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33452,
                                "src": "10636:16:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                                  "typeString": "struct ILighterFi.UserStrategy storage pointer"
                                }
                              },
                              "id": 33500,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10653:7:41",
                              "memberName": "tokenIn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32565,
                              "src": "10636:24:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 33501,
                                "name": "strategyToUpdate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33452,
                                "src": "10664:16:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                                  "typeString": "struct ILighterFi.UserStrategy storage pointer"
                                }
                              },
                              "id": 33502,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10681:8:41",
                              "memberName": "tokenOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32567,
                              "src": "10664:25:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "10636:53:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 33504,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10635:55:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207374727461677920706172616d3a20746f6b656e732061726520657175616c",
                        "id": 33505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10692:41:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a19b00d2d89bb37070cd24183f9a5d1d07e33f2f41e28505724cb4003e95701",
                          "typeString": "literal_string \"invalid strtagy param: tokens are equal\""
                        },
                        "value": "invalid strtagy param: tokens are equal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a19b00d2d89bb37070cd24183f9a5d1d07e33f2f41e28505724cb4003e95701",
                          "typeString": "literal_string \"invalid strtagy param: tokens are equal\""
                        }
                      ],
                      "id": 33498,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10627:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10627:107:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33507,
                  "nodeType": "ExpressionStatement",
                  "src": "10627:107:41"
                },
                {
                  "expression": {
                    "id": 33512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 33508,
                        "name": "strategyToUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33452,
                        "src": "10745:16:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                          "typeString": "struct ILighterFi.UserStrategy storage pointer"
                        }
                      },
                      "id": 33510,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10762:12:41",
                      "memberName": "timeInterval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32569,
                      "src": "10745:29:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33511,
                      "name": "timeInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33384,
                      "src": "10777:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10745:44:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33513,
                  "nodeType": "ExpressionStatement",
                  "src": "10745:44:41"
                },
                {
                  "expression": {
                    "id": 33518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 33514,
                        "name": "strategyToUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33452,
                        "src": "10800:16:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                          "typeString": "struct ILighterFi.UserStrategy storage pointer"
                        }
                      },
                      "id": 33516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10817:6:41",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32573,
                      "src": "10800:23:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33517,
                      "name": "amountTokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33386,
                      "src": "10826:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10800:39:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33519,
                  "nodeType": "ExpressionStatement",
                  "src": "10800:39:41"
                },
                {
                  "expression": {
                    "id": 33524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 33520,
                        "name": "strategyToUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33452,
                        "src": "10850:16:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                          "typeString": "struct ILighterFi.UserStrategy storage pointer"
                        }
                      },
                      "id": 33522,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10867:5:41",
                      "memberName": "limit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32575,
                      "src": "10850:22:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33523,
                      "name": "limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33388,
                      "src": "10875:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10850:30:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33525,
                  "nodeType": "ExpressionStatement",
                  "src": "10850:30:41"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 33527,
                          "name": "strategyToUpdate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33452,
                          "src": "10960:16:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                            "typeString": "struct ILighterFi.UserStrategy storage pointer"
                          }
                        },
                        "id": 33528,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10977:4:41",
                        "memberName": "user",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32563,
                        "src": "10960:21:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33529,
                        "name": "strategyToUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33452,
                        "src": "10983:16:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                          "typeString": "struct ILighterFi.UserStrategy storage pointer"
                        }
                      },
                      {
                        "id": 33530,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33378,
                        "src": "11001:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                          "typeString": "struct ILighterFi.UserStrategy storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33526,
                      "name": "UpdatedUserStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32610,
                      "src": "10940:19:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_struct$_UserStrategy_$32578_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,struct ILighterFi.UserStrategy memory,uint256)"
                      }
                    },
                    "id": 33531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10940:67:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33532,
                  "nodeType": "EmitStatement",
                  "src": "10935:72:41"
                }
              ]
            },
            "documentation": {
              "id": 33376,
              "nodeType": "StructuredDocumentation",
              "src": "8628:461:41",
              "text": " @dev Upgrade an existing user strategy with new parameters.\n @param index The index of the user strategy to be upgraded.\n @param tokenTo The new address of the token to receive in the strategy.\n @param timeInterval The new time interval between strategy executions, in seconds.\n @param amountTokenIn The new amount of input tokens for the strategy.\n @notice Only the user who created the strategy can upgrade it."
            },
            "functionSelector": "71bdb5de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "upgradeStrategy",
            "nameLocation": "9104:15:41",
            "parameters": {
              "id": 33389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33378,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "9128:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33534,
                  "src": "9120:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9120:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33380,
                  "mutability": "mutable",
                  "name": "tokenFrom",
                  "nameLocation": "9143:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33534,
                  "src": "9135:17:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9135:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33382,
                  "mutability": "mutable",
                  "name": "tokenTo",
                  "nameLocation": "9162:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33534,
                  "src": "9154:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9154:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33384,
                  "mutability": "mutable",
                  "name": "timeInterval",
                  "nameLocation": "9179:12:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33534,
                  "src": "9171:20:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9171:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33386,
                  "mutability": "mutable",
                  "name": "amountTokenIn",
                  "nameLocation": "9201:13:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33534,
                  "src": "9193:21:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9193:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33388,
                  "mutability": "mutable",
                  "name": "limit",
                  "nameLocation": "9224:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33534,
                  "src": "9216:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9216:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9119:111:41"
            },
            "returnParameters": {
              "id": 33390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9241:0:41"
            },
            "scope": 33949,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33675,
            "nodeType": "FunctionDefinition",
            "src": "11503:1669:41",
            "nodes": [],
            "body": {
              "id": 33674,
              "nodeType": "Block",
              "src": "11627:1545:41",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33551,
                      "mutability": "mutable",
                      "name": "prices",
                      "nameLocation": "11662:6:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33674,
                      "src": "11648:20:41",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 33549,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11648:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33550,
                        "nodeType": "ArrayTypeName",
                        "src": "11648:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33555,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33553,
                        "name": "fuzz",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33539,
                        "src": "11683:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 33552,
                      "name": "_batchQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32801,
                      "src": "11671:11:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (int256) view returns (uint256[] memory)"
                      }
                    },
                    "id": 33554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11671:17:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11648:40:41"
                },
                {
                  "assignments": [
                    33557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33557,
                      "mutability": "mutable",
                      "name": "balanceCondition",
                      "nameLocation": "11704:16:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33674,
                      "src": "11699:21:41",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 33556,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11699:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33558,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11699:21:41"
                },
                {
                  "assignments": [
                    33560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33560,
                      "mutability": "mutable",
                      "name": "allowanceCondition",
                      "nameLocation": "11736:18:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33674,
                      "src": "11731:23:41",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 33559,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11731:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33561,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11731:23:41"
                },
                {
                  "assignments": [
                    33563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33563,
                      "mutability": "mutable",
                      "name": "timeCondition",
                      "nameLocation": "11770:13:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33674,
                      "src": "11765:18:41",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 33562,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11765:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33564,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11765:18:41"
                },
                {
                  "assignments": [
                    33566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33566,
                      "mutability": "mutable",
                      "name": "limitCondition",
                      "nameLocation": "11799:14:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33674,
                      "src": "11794:19:41",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 33565,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11794:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33567,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11794:19:41"
                },
                {
                  "body": {
                    "id": 33672,
                    "nodeType": "Block",
                    "src": "11878:1287:41",
                    "statements": [
                      {
                        "assignments": [
                          33580
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33580,
                            "mutability": "mutable",
                            "name": "strategy",
                            "nameLocation": "11946:8:41",
                            "nodeType": "VariableDeclaration",
                            "scope": 33672,
                            "src": "11926:28:41",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                              "typeString": "struct ILighterFi.UserStrategy"
                            },
                            "typeName": {
                              "id": 33579,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 33578,
                                "name": "UserStrategy",
                                "nameLocations": [
                                  "11926:12:41"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 32578,
                                "src": "11926:12:41"
                              },
                              "referencedDeclaration": 32578,
                              "src": "11926:12:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                                "typeString": "struct ILighterFi.UserStrategy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33584,
                        "initialValue": {
                          "baseExpression": {
                            "id": 33581,
                            "name": "s_usersStrategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33042,
                            "src": "11957:17:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserStrategy_$32578_storage_$",
                              "typeString": "mapping(uint256 => struct ILighterFi.UserStrategy storage ref)"
                            }
                          },
                          "id": 33583,
                          "indexExpression": {
                            "id": 33582,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33569,
                            "src": "11975:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11957:20:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStrategy_$32578_storage",
                            "typeString": "struct ILighterFi.UserStrategy storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11926:51:41"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 33591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 33585,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33580,
                              "src": "12038:8:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                                "typeString": "struct ILighterFi.UserStrategy memory"
                              }
                            },
                            "id": 33586,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12047:4:41",
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32563,
                            "src": "12038:13:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12063:1:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 33588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12055:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33587,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12055:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12055:10:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12038:27:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33671,
                        "nodeType": "IfStatement",
                        "src": "12034:1120:41",
                        "trueBody": {
                          "id": 33670,
                          "nodeType": "Block",
                          "src": "12066:1088:41",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 33595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 33592,
                                    "name": "strategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33580,
                                    "src": "12116:8:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                                      "typeString": "struct ILighterFi.UserStrategy memory"
                                    }
                                  },
                                  "id": 33593,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12125:12:41",
                                  "memberName": "timeInterval",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 32569,
                                  "src": "12116:21:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 33594,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12141:1:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "12116:26:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 33605,
                              "nodeType": "IfStatement",
                              "src": "12112:132:41",
                              "trueBody": {
                                "id": 33604,
                                "nodeType": "Block",
                                "src": "12144:100:41",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 33602,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 33596,
                                        "name": "timeCondition",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33563,
                                        "src": "12167:13:41",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 33601,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 33597,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "12183:5:41",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 33598,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "12189:9:41",
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "12183:15:41",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">=",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 33599,
                                            "name": "strategy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 33580,
                                            "src": "12202:8:41",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                                              "typeString": "struct ILighterFi.UserStrategy memory"
                                            }
                                          },
                                          "id": 33600,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "12211:13:41",
                                          "memberName": "nextExecution",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 32571,
                                          "src": "12202:22:41",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "12183:41:41",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "12167:57:41",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 33603,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12167:57:41"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 33614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 33609,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 33606,
                                      "name": "strategy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 33580,
                                      "src": "12294:8:41",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                                        "typeString": "struct ILighterFi.UserStrategy memory"
                                      }
                                    },
                                    "id": 33607,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "12303:12:41",
                                    "memberName": "timeInterval",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 32569,
                                    "src": "12294:21:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 33608,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12319:1:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "12294:26:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 33613,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 33610,
                                      "name": "strategy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 33580,
                                      "src": "12324:8:41",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                                        "typeString": "struct ILighterFi.UserStrategy memory"
                                      }
                                    },
                                    "id": 33611,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "12333:5:41",
                                    "memberName": "limit",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 32575,
                                    "src": "12324:14:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 33612,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12342:1:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "12324:19:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "12294:49:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 33642,
                              "nodeType": "IfStatement",
                              "src": "12290:265:41",
                              "trueBody": {
                                "id": 33641,
                                "nodeType": "Block",
                                "src": "12345:210:41",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 33639,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 33615,
                                        "name": "limitCondition",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33566,
                                        "src": "12368:14:41",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 33619,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 33616,
                                              "name": "strategy",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 33580,
                                              "src": "12385:8:41",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                                                "typeString": "struct ILighterFi.UserStrategy memory"
                                              }
                                            },
                                            "id": 33617,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "12394:7:41",
                                            "memberName": "tokenIn",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 32565,
                                            "src": "12385:16:41",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "id": 33618,
                                            "name": "usdcAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 33033,
                                            "src": "12405:11:41",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "12385:31:41",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 33637,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "baseExpression": {
                                              "id": 33629,
                                              "name": "prices",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 33551,
                                              "src": "12479:6:41",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                "typeString": "uint256[] memory"
                                              }
                                            },
                                            "id": 33634,
                                            "indexExpression": {
                                              "baseExpression": {
                                                "id": 33630,
                                                "name": "tokenIndexes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 32693,
                                                "src": "12486:12:41",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                }
                                              },
                                              "id": 33633,
                                              "indexExpression": {
                                                "expression": {
                                                  "id": 33631,
                                                  "name": "strategy",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 33580,
                                                  "src": "12499:8:41",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                                                    "typeString": "struct ILighterFi.UserStrategy memory"
                                                  }
                                                },
                                                "id": 33632,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "12508:7:41",
                                                "memberName": "tokenIn",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 32565,
                                                "src": "12499:16:41",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "12486:30:41",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12479:38:41",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": ">=",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 33635,
                                              "name": "strategy",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 33580,
                                              "src": "12521:8:41",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                                                "typeString": "struct ILighterFi.UserStrategy memory"
                                              }
                                            },
                                            "id": 33636,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "12530:5:41",
                                            "memberName": "limit",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 32575,
                                            "src": "12521:14:41",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "12479:56:41",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 33638,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "12385:150:41",
                                        "trueExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 33628,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "baseExpression": {
                                              "id": 33620,
                                              "name": "prices",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 33551,
                                              "src": "12419:6:41",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                "typeString": "uint256[] memory"
                                              }
                                            },
                                            "id": 33625,
                                            "indexExpression": {
                                              "baseExpression": {
                                                "id": 33621,
                                                "name": "tokenIndexes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 32693,
                                                "src": "12426:12:41",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                }
                                              },
                                              "id": 33624,
                                              "indexExpression": {
                                                "expression": {
                                                  "id": 33622,
                                                  "name": "strategy",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 33580,
                                                  "src": "12439:8:41",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                                                    "typeString": "struct ILighterFi.UserStrategy memory"
                                                  }
                                                },
                                                "id": 33623,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "12448:8:41",
                                                "memberName": "tokenOut",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 32567,
                                                "src": "12439:17:41",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "12426:31:41",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12419:39:41",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<=",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 33626,
                                              "name": "strategy",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 33580,
                                              "src": "12462:8:41",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                                                "typeString": "struct ILighterFi.UserStrategy memory"
                                              }
                                            },
                                            "id": 33627,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "12471:5:41",
                                            "memberName": "limit",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 32575,
                                            "src": "12462:14:41",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "12419:57:41",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "12368:167:41",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 33640,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12368:167:41"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 33645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 33643,
                                  "name": "limitCondition",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33566,
                                  "src": "12578:14:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "id": 33644,
                                  "name": "timeCondition",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33563,
                                  "src": "12596:13:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "12578:31:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 33669,
                              "nodeType": "IfStatement",
                              "src": "12574:547:41",
                              "trueBody": {
                                "id": 33668,
                                "nodeType": "Block",
                                "src": "12610:511:41",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 33648,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 33646,
                                        "name": "upkeepNeeded",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33543,
                                        "src": "12896:12:41",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 33647,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12912:4:41",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "12896:20:41",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 33649,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12896:20:41"
                                  },
                                  {
                                    "expression": {
                                      "id": 33659,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 33650,
                                        "name": "performData",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33545,
                                        "src": "12939:11:41",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "id": 33653,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 33569,
                                            "src": "12964:1:41",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "hexValue": "30",
                                                "id": 33656,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12972:1:41",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                }
                                              ],
                                              "id": 33655,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "12967:4:41",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 33654,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "12967:4:41",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 33657,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "12967:7:41",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 33651,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "12953:3:41",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 33652,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "12957:6:41",
                                          "memberName": "encode",
                                          "nodeType": "MemberAccess",
                                          "src": "12953:10:41",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 33658,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "12953:22:41",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "src": "12939:36:41",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 33660,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12939:36:41"
                                  },
                                  {
                                    "condition": {
                                      "id": 33661,
                                      "name": "upkeepNeeded",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 33543,
                                      "src": "13004:12:41",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 33667,
                                    "nodeType": "IfStatement",
                                    "src": "13000:102:41",
                                    "trueBody": {
                                      "id": 33666,
                                      "nodeType": "Block",
                                      "src": "13017:85:41",
                                      "statements": [
                                        {
                                          "expression": {
                                            "components": [
                                              {
                                                "id": 33662,
                                                "name": "upkeepNeeded",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 33543,
                                                "src": "13052:12:41",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              {
                                                "id": 33663,
                                                "name": "performData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 33545,
                                                "src": "13066:11:41",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              }
                                            ],
                                            "id": 33664,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "13051:27:41",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                              "typeString": "tuple(bool,bytes memory)"
                                            }
                                          },
                                          "functionReturnParameters": 33546,
                                          "id": 33665,
                                          "nodeType": "Return",
                                          "src": "13044:34:41"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33572,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33569,
                      "src": "11844:1:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 33573,
                      "name": "s_usersStrategiesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33019,
                      "src": "11848:23:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11844:27:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33673,
                  "initializationExpression": {
                    "assignments": [
                      33569
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 33569,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11837:1:41",
                        "nodeType": "VariableDeclaration",
                        "scope": 33673,
                        "src": "11829:9:41",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 33568,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11829:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 33571,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 33570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11841:1:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11829:13:41"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 33576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11873:3:41",
                      "subExpression": {
                        "id": 33575,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33569,
                        "src": "11873:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 33577,
                    "nodeType": "ExpressionStatement",
                    "src": "11873:3:41"
                  },
                  "nodeType": "ForStatement",
                  "src": "11824:1341:41"
                }
              ]
            },
            "baseFunctions": [
              32653
            ],
            "documentation": {
              "id": 33535,
              "nodeType": "StructuredDocumentation",
              "src": "11027:470:41",
              "text": " @dev checkUpkeep function called off-chain by Chainlink Automation infrastructure\n @dev It checks for any s_usersStrategies if they are executable (timeCondition, balanceCondition and allowanceCondition)\n @return upkeepNeeded A boolean indicating whether upkeep is needed.\n @return performData The performData parameter triggering the performUpkeep\n @notice This function is external, view, and implements the Upkeep interface."
            },
            "functionSelector": "21d1fdd0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "11512:11:41",
            "overrides": {
              "id": 33541,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11564:8:41"
            },
            "parameters": {
              "id": 33540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33537,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33675,
                  "src": "11524:14:41",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33536,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11524:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33539,
                  "mutability": "mutable",
                  "name": "fuzz",
                  "nameLocation": "11544:4:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33675,
                  "src": "11540:8:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 33538,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "11540:3:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11523:26:41"
            },
            "returnParameters": {
              "id": 33546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33543,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "11587:12:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33675,
                  "src": "11582:17:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33542,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11582:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33545,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "11614:11:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33675,
                  "src": "11601:24:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33544,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11601:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11581:45:41"
            },
            "scope": 33949,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33707,
            "nodeType": "FunctionDefinition",
            "src": "13648:240:41",
            "nodes": [],
            "body": {
              "id": 33706,
              "nodeType": "Block",
              "src": "13791:97:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33688,
                      "name": "upkeepNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33684,
                      "src": "13802:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 33689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13817:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "13802:19:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33691,
                  "nodeType": "ExpressionStatement",
                  "src": "13802:19:41"
                },
                {
                  "expression": {
                    "id": 33704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33692,
                      "name": "performData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33686,
                      "src": "13832:11:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "expression": {
                              "id": 33695,
                              "name": "log",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33679,
                              "src": "13857:3:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Log_$20_calldata_ptr",
                                "typeString": "struct Log calldata"
                              }
                            },
                            "id": 33696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13861:6:41",
                            "memberName": "topics",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17,
                            "src": "13857:10:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 33698,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 33697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13868:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13857:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 33701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13877:1:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 33700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13872:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 33699,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "13872:4:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13872:7:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 33693,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "13846:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 33694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "13850:6:41",
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "13846:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 33703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13846:34:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "13832:48:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 33705,
                  "nodeType": "ExpressionStatement",
                  "src": "13832:48:41"
                }
              ]
            },
            "baseFunctions": [
              33
            ],
            "documentation": {
              "id": 33676,
              "nodeType": "StructuredDocumentation",
              "src": "13185:457:41",
              "text": " @dev checkLog function called off-chain by Chainlink Automation infrastructure\n @dev It checks if the Response event by fulfillRequest function is emitted in order to perform the actual swap\n @return upkeepNeeded A boolean indicating whether upkeep is needed.\n @return performData The performData parameter triggering the performUpkeep\n @notice This function is external, view, and implements the Upkeep interface."
            },
            "functionSelector": "40691db4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkLog",
            "nameLocation": "13657:8:41",
            "parameters": {
              "id": 33682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33679,
                  "mutability": "mutable",
                  "name": "log",
                  "nameLocation": "13689:3:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33707,
                  "src": "13676:16:41",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Log_$20_calldata_ptr",
                    "typeString": "struct Log"
                  },
                  "typeName": {
                    "id": 33678,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33677,
                      "name": "Log",
                      "nameLocations": [
                        "13676:3:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 20,
                      "src": "13676:3:41"
                    },
                    "referencedDeclaration": 20,
                    "src": "13676:3:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Log_$20_storage_ptr",
                      "typeString": "struct Log"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33681,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33707,
                  "src": "13703:12:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33680,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13703:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13665:57:41"
            },
            "returnParameters": {
              "id": 33687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33684,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "13751:12:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33707,
                  "src": "13746:17:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33683,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13746:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33686,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "13778:11:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33707,
                  "src": "13765:24:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33685,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13765:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13745:45:41"
            },
            "scope": 33949,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33838,
            "nodeType": "FunctionDefinition",
            "src": "14355:1703:41",
            "nodes": [],
            "body": {
              "id": 33837,
              "nodeType": "Block",
              "src": "14483:1575:41",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    null,
                    33719
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 33719,
                      "mutability": "mutable",
                      "name": "operationId",
                      "nameLocation": "14532:11:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33837,
                      "src": "14527:16:41",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33718,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14527:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33729,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33722,
                        "name": "performData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33710,
                        "src": "14558:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 33724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14572:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 33723,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14572:4:41",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 33726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14578:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 33725,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14578:4:41",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 33727,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "14571:12:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint256),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint256),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 33720,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "14547:3:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 33721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "14551:6:41",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "14547:10:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 33728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14547:37:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14524:60:41"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33730,
                      "name": "operationId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33719,
                      "src": "14599:11:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 33731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14614:1:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14599:16:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 33835,
                    "nodeType": "Block",
                    "src": "15126:925:41",
                    "statements": [
                      {
                        "assignments": [
                          33781,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33781,
                            "mutability": "mutable",
                            "name": "requestId",
                            "nameLocation": "15150:9:41",
                            "nodeType": "VariableDeclaration",
                            "scope": 33835,
                            "src": "15142:17:41",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 33780,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "15142:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 33791,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33784,
                              "name": "performData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33710,
                              "src": "15176:11:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 33786,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15190:7:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 33785,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15190:7:41",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 33788,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15199:4:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 33787,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15199:4:41",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 33789,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15189:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$",
                                "typeString": "tuple(type(bytes32),type(uint256))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$",
                                "typeString": "tuple(type(bytes32),type(uint256))"
                              }
                            ],
                            "expression": {
                              "id": 33782,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "15165:3:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 33783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "15169:6:41",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "15165:10:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 33790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15165:40:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
                            "typeString": "tuple(bytes32,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15141:64:41"
                      },
                      {
                        "assignments": [
                          33793
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33793,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "15225:5:41",
                            "nodeType": "VariableDeclaration",
                            "scope": 33835,
                            "src": "15220:10:41",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33792,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15220:4:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33797,
                        "initialValue": {
                          "baseExpression": {
                            "id": 33794,
                            "name": "requestsIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33046,
                            "src": "15233:11:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 33796,
                          "indexExpression": {
                            "id": 33795,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33781,
                            "src": "15245:9:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15233:22:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15220:35:41"
                      },
                      {
                        "assignments": [
                          33800
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33800,
                            "mutability": "mutable",
                            "name": "strategy",
                            "nameLocation": "15291:8:41",
                            "nodeType": "VariableDeclaration",
                            "scope": 33835,
                            "src": "15270:29:41",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                              "typeString": "struct ILighterFi.UserStrategy"
                            },
                            "typeName": {
                              "id": 33799,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 33798,
                                "name": "UserStrategy",
                                "nameLocations": [
                                  "15270:12:41"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 32578,
                                "src": "15270:12:41"
                              },
                              "referencedDeclaration": 32578,
                              "src": "15270:12:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                                "typeString": "struct ILighterFi.UserStrategy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33804,
                        "initialValue": {
                          "baseExpression": {
                            "id": 33801,
                            "name": "s_usersStrategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33042,
                            "src": "15302:17:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserStrategy_$32578_storage_$",
                              "typeString": "mapping(uint256 => struct ILighterFi.UserStrategy storage ref)"
                            }
                          },
                          "id": 33803,
                          "indexExpression": {
                            "id": 33802,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33793,
                            "src": "15320:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15302:24:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStrategy_$32578_storage",
                            "typeString": "struct ILighterFi.UserStrategy storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15270:56:41"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 33805,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33800,
                              "src": "15650:8:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                                "typeString": "struct ILighterFi.UserStrategy storage pointer"
                              }
                            },
                            "id": 33806,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15659:5:41",
                            "memberName": "limit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32575,
                            "src": "15650:14:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 33807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15665:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15650:16:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33821,
                        "nodeType": "IfStatement",
                        "src": "15647:274:41",
                        "trueBody": {
                          "id": 33820,
                          "nodeType": "Block",
                          "src": "15668:253:41",
                          "statements": [
                            {
                              "expression": {
                                "id": 33812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "15762:31:41",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 33809,
                                    "name": "s_usersStrategies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33042,
                                    "src": "15769:17:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserStrategy_$32578_storage_$",
                                      "typeString": "mapping(uint256 => struct ILighterFi.UserStrategy storage ref)"
                                    }
                                  },
                                  "id": 33811,
                                  "indexExpression": {
                                    "id": 33810,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33793,
                                    "src": "15787:5:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "15769:24:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserStrategy_$32578_storage",
                                    "typeString": "struct ILighterFi.UserStrategy storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33813,
                              "nodeType": "ExpressionStatement",
                              "src": "15762:31:41"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 33815,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "15887:3:41",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 33816,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15891:6:41",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "15887:10:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 33817,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33793,
                                    "src": "15899:5:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 33814,
                                  "name": "RemovedUserStrategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32601,
                                  "src": "15867:19:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 33818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15867:38:41",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33819,
                              "nodeType": "EmitStatement",
                              "src": "15862:43:41"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 33823,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33781,
                              "src": "15953:9:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 33824,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33793,
                              "src": "15964:5:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 33825,
                                "name": "strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33800,
                                "src": "15971:8:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                                  "typeString": "struct ILighterFi.UserStrategy storage pointer"
                                }
                              },
                              "id": 33826,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15980:6:41",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32573,
                              "src": "15971:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 33827,
                                "name": "strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33800,
                                "src": "15988:8:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                                  "typeString": "struct ILighterFi.UserStrategy storage pointer"
                                }
                              },
                              "id": 33828,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15997:4:41",
                              "memberName": "user",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32563,
                              "src": "15988:13:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 33829,
                                "name": "strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33800,
                                "src": "16003:8:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                                  "typeString": "struct ILighterFi.UserStrategy storage pointer"
                                }
                              },
                              "id": 33830,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16012:7:41",
                              "memberName": "tokenIn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32565,
                              "src": "16003:16:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 33831,
                                "name": "strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33800,
                                "src": "16021:8:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                                  "typeString": "struct ILighterFi.UserStrategy storage pointer"
                                }
                              },
                              "id": 33832,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16030:8:41",
                              "memberName": "tokenOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32567,
                              "src": "16021:17:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33822,
                            "name": "SwapExecuted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32638,
                            "src": "15940:12:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,uint256,uint256,address,address,address)"
                            }
                          },
                          "id": 33833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15940:99:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33834,
                        "nodeType": "EmitStatement",
                        "src": "15935:104:41"
                      }
                    ]
                  },
                  "id": 33836,
                  "nodeType": "IfStatement",
                  "src": "14595:1456:41",
                  "trueBody": {
                    "id": 33779,
                    "nodeType": "Block",
                    "src": "14616:504:41",
                    "statements": [
                      {
                        "assignments": [
                          33734,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33734,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "14637:5:41",
                            "nodeType": "VariableDeclaration",
                            "scope": 33779,
                            "src": "14632:10:41",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33733,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14632:4:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 33744,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33737,
                              "name": "performData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33710,
                              "src": "14659:11:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 33739,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14673:4:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 33738,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14673:4:41",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 33741,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14679:4:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 33740,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14679:4:41",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 33742,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14672:12:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                                "typeString": "tuple(type(uint256),type(uint256))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                                "typeString": "tuple(type(uint256),type(uint256))"
                              }
                            ],
                            "expression": {
                              "id": 33735,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "14648:3:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 33736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "14652:6:41",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "14648:10:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 33743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14648:37:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14631:54:41"
                      },
                      {
                        "assignments": [
                          33747
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33747,
                            "mutability": "mutable",
                            "name": "strategy",
                            "nameLocation": "14754:8:41",
                            "nodeType": "VariableDeclaration",
                            "scope": 33779,
                            "src": "14733:29:41",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                              "typeString": "struct ILighterFi.UserStrategy"
                            },
                            "typeName": {
                              "id": 33746,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 33745,
                                "name": "UserStrategy",
                                "nameLocations": [
                                  "14733:12:41"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 32578,
                                "src": "14733:12:41"
                              },
                              "referencedDeclaration": 32578,
                              "src": "14733:12:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                                "typeString": "struct ILighterFi.UserStrategy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33751,
                        "initialValue": {
                          "baseExpression": {
                            "id": 33748,
                            "name": "s_usersStrategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33042,
                            "src": "14765:17:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserStrategy_$32578_storage_$",
                              "typeString": "mapping(uint256 => struct ILighterFi.UserStrategy storage ref)"
                            }
                          },
                          "id": 33750,
                          "indexExpression": {
                            "id": 33749,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33734,
                            "src": "14783:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14765:24:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStrategy_$32578_storage",
                            "typeString": "struct ILighterFi.UserStrategy storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14733:56:41"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 33752,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33747,
                              "src": "14807:8:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                                "typeString": "struct ILighterFi.UserStrategy storage pointer"
                              }
                            },
                            "id": 33753,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14816:12:41",
                            "memberName": "timeInterval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32569,
                            "src": "14807:21:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 33754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14832:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14807:26:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 33773,
                          "nodeType": "Block",
                          "src": "14939:53:41",
                          "statements": [
                            {
                              "expression": {
                                "id": 33771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 33767,
                                    "name": "strategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33747,
                                    "src": "14958:8:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                                      "typeString": "struct ILighterFi.UserStrategy storage pointer"
                                    }
                                  },
                                  "id": 33769,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "14967:5:41",
                                  "memberName": "limit",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 32575,
                                  "src": "14958:14:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 33770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14975:1:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14958:18:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33772,
                              "nodeType": "ExpressionStatement",
                              "src": "14958:18:41"
                            }
                          ]
                        },
                        "id": 33774,
                        "nodeType": "IfStatement",
                        "src": "14804:188:41",
                        "trueBody": {
                          "id": 33766,
                          "nodeType": "Block",
                          "src": "14834:99:41",
                          "statements": [
                            {
                              "expression": {
                                "id": 33764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 33756,
                                    "name": "strategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33747,
                                    "src": "14853:8:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                                      "typeString": "struct ILighterFi.UserStrategy storage pointer"
                                    }
                                  },
                                  "id": 33758,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "14862:13:41",
                                  "memberName": "nextExecution",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 32571,
                                  "src": "14853:22:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 33763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 33759,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "14878:5:41",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 33760,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14884:9:41",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "14878:15:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 33761,
                                      "name": "strategy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 33747,
                                      "src": "14896:8:41",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                                        "typeString": "struct ILighterFi.UserStrategy storage pointer"
                                      }
                                    },
                                    "id": 33762,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14905:12:41",
                                    "memberName": "timeInterval",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 32569,
                                    "src": "14896:21:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14878:39:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14853:64:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33765,
                              "nodeType": "ExpressionStatement",
                              "src": "14853:64:41"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33776,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33734,
                              "src": "15053:5:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33775,
                            "name": "sendRequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33904,
                            "src": "15041:11:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 33777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15041:18:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33778,
                        "nodeType": "ExpressionStatement",
                        "src": "15041:18:41"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              39,
              32659
            ],
            "documentation": {
              "id": 33708,
              "nodeType": "StructuredDocumentation",
              "src": "13900:449:41",
              "text": " @dev performUpkeep function called by Chainlink Automation infrastructure after checkUpkeep and checkLog off-chain checks\n @param performData the data inputed by Chainlink Automation retrieved by checkUpkeep and checkLog output\n @notice This function is external and it's used both to call the sendRequest (to call the LIFI API) and to perform the actual user swap (using the calldata retrieved by the fulfillRequest) "
            },
            "functionSelector": "4585e33b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33713,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33712,
                  "name": "onlyAllowed",
                  "nameLocations": [
                    "14406:11:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33160,
                  "src": "14406:11:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "14406:11:41"
              }
            ],
            "name": "performUpkeep",
            "nameLocation": "14364:13:41",
            "overrides": {
              "id": 33716,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 33714,
                  "name": "ILogAutomation",
                  "nameLocations": [
                    "14436:14:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "14436:14:41"
                },
                {
                  "id": 33715,
                  "name": "AutomationCompatibleInterface",
                  "nameLocations": [
                    "14452:29:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32660,
                  "src": "14452:29:41"
                }
              ],
              "src": "14427:55:41"
            },
            "parameters": {
              "id": 33711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33710,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "14393:11:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33838,
                  "src": "14378:26:41",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33709,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14378:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14377:28:41"
            },
            "returnParameters": {
              "id": 33717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14483:0:41"
            },
            "scope": 33949,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33904,
            "nodeType": "FunctionDefinition",
            "src": "16265:830:41",
            "nodes": [],
            "body": {
              "id": 33903,
              "nodeType": "Block",
              "src": "16308:787:41",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33848
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33848,
                      "mutability": "mutable",
                      "name": "req",
                      "nameLocation": "16351:3:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33903,
                      "src": "16319:35:41",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$229_memory_ptr",
                        "typeString": "struct FunctionsRequest.Request"
                      },
                      "typeName": {
                        "id": 33847,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33846,
                          "name": "FunctionsRequest.Request",
                          "nameLocations": [
                            "16319:16:41",
                            "16336:7:41"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 229,
                          "src": "16319:24:41"
                        },
                        "referencedDeclaration": 229,
                        "src": "16319:24:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$229_storage_ptr",
                          "typeString": "struct FunctionsRequest.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33849,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16319:35:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33853,
                        "name": "source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33050,
                        "src": "16454:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "expression": {
                        "id": 33850,
                        "name": "req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33848,
                        "src": "16413:3:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$229_memory_ptr",
                          "typeString": "struct FunctionsRequest.Request memory"
                        }
                      },
                      "id": 33852,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16417:36:41",
                      "memberName": "initializeRequestForInlineJavaScript",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 508,
                      "src": "16413:40:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$229_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_Request_$229_memory_ptr_$",
                        "typeString": "function (struct FunctionsRequest.Request memory,string memory) pure"
                      }
                    },
                    "id": 33854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16413:48:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33855,
                  "nodeType": "ExpressionStatement",
                  "src": "16413:48:41"
                },
                {
                  "assignments": [
                    33858
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33858,
                      "mutability": "mutable",
                      "name": "strategy",
                      "nameLocation": "16543:8:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33903,
                      "src": "16523:28:41",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                        "typeString": "struct ILighterFi.UserStrategy"
                      },
                      "typeName": {
                        "id": 33857,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33856,
                          "name": "UserStrategy",
                          "nameLocations": [
                            "16523:12:41"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32578,
                          "src": "16523:12:41"
                        },
                        "referencedDeclaration": 32578,
                        "src": "16523:12:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStrategy_$32578_storage_ptr",
                          "typeString": "struct ILighterFi.UserStrategy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33862,
                  "initialValue": {
                    "baseExpression": {
                      "id": 33859,
                      "name": "s_usersStrategies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33042,
                      "src": "16554:17:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserStrategy_$32578_storage_$",
                        "typeString": "mapping(uint256 => struct ILighterFi.UserStrategy storage ref)"
                      }
                    },
                    "id": 33861,
                    "indexExpression": {
                      "id": 33860,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33841,
                      "src": "16572:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16554:24:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserStrategy_$32578_storage",
                      "typeString": "struct ILighterFi.UserStrategy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16523:55:41"
                },
                {
                  "assignments": [
                    33867
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33867,
                      "mutability": "mutable",
                      "name": "args",
                      "nameLocation": "16682:4:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33903,
                      "src": "16666:20:41",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 33865,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "16666:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 33866,
                        "nodeType": "ArrayTypeName",
                        "src": "16666:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33878,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 33869,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33858,
                          "src": "16711:8:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                            "typeString": "struct ILighterFi.UserStrategy memory"
                          }
                        },
                        "id": 33870,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16720:7:41",
                        "memberName": "tokenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32565,
                        "src": "16711:16:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 33871,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33858,
                          "src": "16729:8:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                            "typeString": "struct ILighterFi.UserStrategy memory"
                          }
                        },
                        "id": 33872,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16738:8:41",
                        "memberName": "tokenOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32567,
                        "src": "16729:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 33873,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33858,
                          "src": "16748:8:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                            "typeString": "struct ILighterFi.UserStrategy memory"
                          }
                        },
                        "id": 33874,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16757:4:41",
                        "memberName": "user",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32563,
                        "src": "16748:13:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 33875,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33858,
                          "src": "16763:8:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStrategy_$32578_memory_ptr",
                            "typeString": "struct ILighterFi.UserStrategy memory"
                          }
                        },
                        "id": 33876,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16772:6:41",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32573,
                        "src": "16763:15:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33868,
                      "name": "generateArgForRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35713,
                      "src": "16689:21:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,address,address,uint256) pure returns (string memory[] memory)"
                      }
                    },
                    "id": 33877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16689:90:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16666:113:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33882,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33867,
                        "src": "16848:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 33879,
                        "name": "req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33848,
                        "src": "16836:3:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$229_memory_ptr",
                          "typeString": "struct FunctionsRequest.Request memory"
                        }
                      },
                      "id": 33881,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16840:7:41",
                      "memberName": "setArgs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 625,
                      "src": "16836:11:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$229_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$attached_to$_t_struct$_Request_$229_memory_ptr_$",
                        "typeString": "function (struct FunctionsRequest.Request memory,string memory[] memory) pure"
                      }
                    },
                    "id": 33883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16836:17:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33884,
                  "nodeType": "ExpressionStatement",
                  "src": "16836:17:41"
                },
                {
                  "assignments": [
                    33886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33886,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "16927:9:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33903,
                      "src": "16919:17:41",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 33885,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16919:7:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33891,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "726571756573744964",
                        "id": 33889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16947:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31b40192effc42bcf1e4289fe674c678e673a3052992548fef566d8c33a21b91",
                          "typeString": "literal_string \"requestId\""
                        },
                        "value": "requestId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_31b40192effc42bcf1e4289fe674c678e673a3052992548fef566d8c33a21b91",
                          "typeString": "literal_string \"requestId\""
                        }
                      ],
                      "id": 33888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "16939:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 33887,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16939:7:41",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 33890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16939:20:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16919:40:41"
                },
                {
                  "expression": {
                    "id": 33896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 33892,
                        "name": "requestsIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33046,
                        "src": "16970:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 33894,
                      "indexExpression": {
                        "id": 33893,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33886,
                        "src": "16982:9:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16970:22:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33895,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33841,
                      "src": "16995:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16970:30:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33897,
                  "nodeType": "ExpressionStatement",
                  "src": "16970:30:41"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 33899,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33886,
                        "src": "17070:9:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 33900,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33841,
                        "src": "17081:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33898,
                      "name": "RequestReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32616,
                      "src": "17054:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 33901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17054:33:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33902,
                  "nodeType": "EmitStatement",
                  "src": "17049:38:41"
                }
              ]
            },
            "documentation": {
              "id": 33839,
              "nodeType": "StructuredDocumentation",
              "src": "16066:193:41",
              "text": " @notice Sends an HTTP request using Chainlink Functions infrastructure\n @param index the index of the user strategy containing the data to pass to the LIFI API call."
            },
            "functionSelector": "31e70508",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendRequest",
            "nameLocation": "16274:11:41",
            "parameters": {
              "id": 33842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33841,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "16294:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33904,
                  "src": "16286:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16286:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16285:15:41"
            },
            "returnParameters": {
              "id": 33843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16308:0:41"
            },
            "scope": 33949,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33935,
            "nodeType": "FunctionDefinition",
            "src": "17342:485:41",
            "nodes": [],
            "body": {
              "id": 33934,
              "nodeType": "Block",
              "src": "17476:351:41",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33916,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "17584:5:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 33934,
                      "src": "17576:13:41",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33915,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17576:7:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33920,
                  "initialValue": {
                    "baseExpression": {
                      "id": 33917,
                      "name": "requestsIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33046,
                      "src": "17592:11:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 33919,
                    "indexExpression": {
                      "id": 33918,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33907,
                      "src": "17604:9:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17592:22:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17576:38:41"
                },
                {
                  "expression": {
                    "id": 33926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 33921,
                          "name": "s_usersStrategies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33042,
                          "src": "17675:17:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserStrategy_$32578_storage_$",
                            "typeString": "mapping(uint256 => struct ILighterFi.UserStrategy storage ref)"
                          }
                        },
                        "id": 33923,
                        "indexExpression": {
                          "id": 33922,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33916,
                          "src": "17693:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17675:24:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStrategy_$32578_storage",
                          "typeString": "struct ILighterFi.UserStrategy storage ref"
                        }
                      },
                      "id": 33924,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "17700:12:41",
                      "memberName": "lastResponse",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32577,
                      "src": "17675:37:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33925,
                      "name": "response",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33909,
                      "src": "17715:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "17675:48:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 33927,
                  "nodeType": "ExpressionStatement",
                  "src": "17675:48:41"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 33929,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33907,
                        "src": "17794:9:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 33930,
                        "name": "response",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33909,
                        "src": "17805:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 33931,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33911,
                        "src": "17815:3:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33928,
                      "name": "Response",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32624,
                      "src": "17785:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes memory,bytes memory)"
                      }
                    },
                    "id": 33932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17785:34:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33933,
                  "nodeType": "EmitStatement",
                  "src": "17780:39:41"
                }
              ]
            },
            "baseFunctions": [
              32947
            ],
            "documentation": {
              "id": 33905,
              "nodeType": "StructuredDocumentation",
              "src": "17103:233:41",
              "text": " @notice Callback function for fulfilling a request\n @param requestId The ID of the request to fulfill\n @param response The HTTP response data\n @param err Any errors from the Functions request"
            },
            "functionSelector": "39b05122",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRequest",
            "nameLocation": "17351:14:41",
            "overrides": {
              "id": 33913,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "17467:8:41"
            },
            "parameters": {
              "id": 33912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33907,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "17384:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33935,
                  "src": "17376:17:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 33906,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17376:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33909,
                  "mutability": "mutable",
                  "name": "response",
                  "nameLocation": "17417:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33935,
                  "src": "17404:21:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33908,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17404:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33911,
                  "mutability": "mutable",
                  "name": "err",
                  "nameLocation": "17449:3:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33935,
                  "src": "17436:16:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33910,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17436:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17365:94:41"
            },
            "returnParameters": {
              "id": 33914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17476:0:41"
            },
            "scope": 33949,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33948,
            "nodeType": "FunctionDefinition",
            "src": "17835:124:41",
            "nodes": [],
            "body": {
              "id": 33947,
              "nodeType": "Block",
              "src": "17911:48:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33944,
                        "name": "tokenAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33938,
                        "src": "17936:14:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "id": 33943,
                      "name": "_mapAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32747,
                      "src": "17922:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (address[] calldata)"
                      }
                    },
                    "id": 33945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17922:29:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33946,
                  "nodeType": "ExpressionStatement",
                  "src": "17922:29:41"
                }
              ]
            },
            "functionSelector": "5591ddc6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 33941,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33940,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "17892:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 892,
                  "src": "17892:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "17892:11:41"
              }
            ],
            "name": "mapAddresses",
            "nameLocation": "17844:12:41",
            "parameters": {
              "id": 33939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33938,
                  "mutability": "mutable",
                  "name": "tokenAddresses",
                  "nameLocation": "17876:14:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 33948,
                  "src": "17857:33:41",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33936,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "17857:7:41",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 33937,
                    "nodeType": "ArrayTypeName",
                    "src": "17857:9:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17856:35:41"
            },
            "returnParameters": {
              "id": 33942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17911:0:41"
            },
            "scope": 33949,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32998,
              "name": "FunctionsClient",
              "nameLocations": [
                "647:15:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32982,
              "src": "647:15:41"
            },
            "id": 32999,
            "nodeType": "InheritanceSpecifier",
            "src": "647:15:41"
          },
          {
            "baseName": {
              "id": 33000,
              "name": "ConfirmedOwner",
              "nameLocations": [
                "664:14:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 730,
              "src": "664:14:41"
            },
            "id": 33001,
            "nodeType": "InheritanceSpecifier",
            "src": "664:14:41"
          },
          {
            "baseName": {
              "id": 33002,
              "name": "ILighterFi",
              "nameLocations": [
                "680:10:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32639,
              "src": "680:10:41"
            },
            "id": 33003,
            "nodeType": "InheritanceSpecifier",
            "src": "680:10:41"
          },
          {
            "baseName": {
              "id": 33004,
              "name": "ILogAutomation",
              "nameLocations": [
                "692:14:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40,
              "src": "692:14:41"
            },
            "id": 33005,
            "nodeType": "InheritanceSpecifier",
            "src": "692:14:41"
          },
          {
            "baseName": {
              "id": 33006,
              "name": "AutomationCompatibleInterface",
              "nameLocations": [
                "708:29:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32660,
              "src": "708:29:41"
            },
            "id": 33007,
            "nodeType": "InheritanceSpecifier",
            "src": "708:29:41"
          },
          {
            "baseName": {
              "id": 33008,
              "name": "DataConsumerV3",
              "nameLocations": [
                "739:14:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32832,
              "src": "739:14:41"
            },
            "id": 33009,
            "nodeType": "InheritanceSpecifier",
            "src": "739:14:41"
          },
          {
            "baseName": {
              "id": 33010,
              "name": "Swapper",
              "nameLocations": [
                "755:7:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35618,
              "src": "755:7:41"
            },
            "id": 33011,
            "nodeType": "InheritanceSpecifier",
            "src": "755:7:41"
          },
          {
            "baseName": {
              "id": 33012,
              "name": "Utils",
              "nameLocations": [
                "764:5:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35861,
              "src": "764:5:41"
            },
            "id": 33013,
            "nodeType": "InheritanceSpecifier",
            "src": "764:5:41"
          }
        ],
        "canonicalName": "LighterFi",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33949,
          35861,
          35618,
          32832,
          32660,
          40,
          32639,
          730,
          893,
          909,
          32982,
          54
        ],
        "name": "LighterFi",
        "nameLocation": "634:9:41",
        "scope": 33950,
        "usedErrors": [
          231,
          235,
          32586,
          32892
        ],
        "usedEvents": [
          747,
          753,
          32595,
          32601,
          32610,
          32616,
          32624,
          32638,
          32886,
          32890
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 41
}